<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TB9.2 Example Applications: examples/Multimedia/ICL/ICLCodec/PngScanlineEncoder.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
<link type="text/css" rel="stylesheet" href="css/common.css" media="screen"/>
<link type="text/css" rel="stylesheet" href="css/sdl.css" media="screen"/>

<!--[if IE]>
<link href="css/iefix.css" rel="stylesheet" type="text/css" media="screen" />
<![endif]-->
</head>
<body class="kernelguide">
    
     <?php include_once (CURRENT_SKIN_PATH.'/sdl_header.html'); ?>
  <div id="sdl_container">
   <div id="leftMenu">
    <div id="expandcontractdiv">
     <a id="collapseTree" href="javascript:tree.collapseAll()">
      Collapse all
     </a>
     <a id="index" href="index.html">
      Symbian^3 Product Developer Library
     </a>
    </div>
    <iframe style="border:none" height="800" width="300" src="index-toc.html"></iframe>
<div id="treeDiv1">
     &#160;
    </div>
    <script type="text/javascript">
     var currentIconMode = 0;
	YAHOO.util.Event.onDOMReady(buildTree, this,true);
    </script>
   </div>
   <div id="sdl_content">
<!-- Generated by Doxygen 1.6.2 -->
<h1>examples/Multimedia/ICL/ICLCodec/PngScanlineEncoder.h</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// PngScanlineEncoder.h</span>
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// Copyright (c) 2007-2009 Nokia Corporation and/or its subsidiary(-ies).</span>
<a name="l00004"></a>00004 <span class="comment">// All rights reserved.</span>
<a name="l00005"></a>00005 <span class="comment">// This component and the accompanying materials are made available</span>
<a name="l00006"></a>00006 <span class="comment">// under the terms of &quot;Eclipse Public License v1.0&quot;</span>
<a name="l00007"></a>00007 <span class="comment">// which accompanies this distribution, and is available</span>
<a name="l00008"></a>00008 <span class="comment">// at the URL &quot;http://www.eclipse.org/legal/epl-v10.html&quot;.</span>
<a name="l00009"></a>00009 <span class="comment">//</span>
<a name="l00010"></a>00010 <span class="comment">// Initial Contributors:</span>
<a name="l00011"></a>00011 <span class="comment">// Nokia Corporation - initial contribution.</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// Contributors:</span>
<a name="l00014"></a>00014 <span class="comment">//</span>
<a name="l00015"></a>00015 <span class="comment">// Description:</span>
<a name="l00016"></a>00016 <span class="comment">//</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="preprocessor">#ifndef __PNGSCANLINEENCODER_H__</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span><span class="preprocessor">#define __PNGSCANLINEENCODER_H__</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span>
<a name="l00022"></a>00022 <span class="preprocessor">#include &quot;PNGCodec.h&quot;</span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &quot;ImageUtils.h&quot;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="comment">//</span>
<a name="l00026"></a>00026 <span class="comment">// These classes specialise the PNG writer to write</span>
<a name="l00027"></a>00027 <span class="comment">// scanlines with different bitmap depths/colour types</span>
<a name="l00028"></a>00028 <span class="comment">//</span>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="keyword">const</span> TInt KPngScanlineFilterTypeLength = 1;
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="comment">//</span>
<a name="l00033"></a>00033 <span class="comment">// CBitDepth1Encoder: specialised writer for 1bpp</span>
<a name="l00034"></a>00034 <span class="comment">//</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="keyword">const</span> TInt KPngDepth1PixelsPerByte = 8;
<a name="l00037"></a>00037 <span class="keyword">const</span> TInt KPngDepth1RoundUpValue = 7;
<a name="l00038"></a>00038 <span class="keyword">const</span> TInt KPngDepth1ShiftValue = 1;
<a name="l00039"></a>00039 
<a name="l00040"></a><a class="code" href="class_c_bit_depth1_encoder.html">00040</a> <span class="keyword">class </span><a class="code" href="class_c_bit_depth1_encoder.html">CBitDepth1Encoder</a> : <span class="keyword">public</span> <a class="code" href="class_c_png_write_sub_codec.html">CPngWriteSubCodec</a>
<a name="l00041"></a>00041         {
<a name="l00042"></a>00042 <span class="keyword">private</span>:
<a name="l00043"></a>00043         <span class="keyword">virtual</span> <span class="keywordtype">void</span> DoConstructL();
<a name="l00044"></a>00044         <span class="keyword">virtual</span> TInt ScanlineBufferSize(TInt aPixelLength);
<a name="l00045"></a>00045         <span class="keyword">virtual</span> <span class="keywordtype">void</span> DoEncode(<span class="keyword">const</span> CFbsBitmap* aSource, <span class="keyword">const</span> TInt aScanline,
<a name="l00046"></a>00046                                         TUint8* aDataPtr, <span class="keyword">const</span> TUint8* aDataPtrLimit);
<a name="l00047"></a>00047         };
<a name="l00048"></a>00048 
<a name="l00049"></a>00049 <span class="comment">//</span>
<a name="l00050"></a>00050 <span class="comment">// CBitDepth2Encoder: specialised writer for 2bpp</span>
<a name="l00051"></a>00051 <span class="comment">//</span>
<a name="l00052"></a>00052 
<a name="l00053"></a>00053 <span class="keyword">const</span> TInt KPngDepth2PixelsPerByte = 4;
<a name="l00054"></a>00054 <span class="keyword">const</span> TInt KPngDepth2RoundUpValue = 3;
<a name="l00055"></a>00055 <span class="keyword">const</span> TInt KPngDepth2ShiftValue = 2;
<a name="l00056"></a><a class="code" href="class_c_bit_depth2_encoder.html">00056</a> <span class="keyword">class </span><a class="code" href="class_c_bit_depth2_encoder.html">CBitDepth2Encoder</a> : <span class="keyword">public</span> <a class="code" href="class_c_png_write_sub_codec.html">CPngWriteSubCodec</a>
<a name="l00057"></a>00057         {
<a name="l00058"></a>00058 <span class="keyword">private</span>:
<a name="l00059"></a>00059         <span class="keyword">virtual</span> <span class="keywordtype">void</span> DoConstructL();
<a name="l00060"></a>00060         <span class="keyword">virtual</span> TInt ScanlineBufferSize(TInt aPixelLength);
<a name="l00061"></a>00061         <span class="keyword">virtual</span> <span class="keywordtype">void</span> DoEncode(<span class="keyword">const</span> CFbsBitmap* aSource, <span class="keyword">const</span> TInt aScanline,
<a name="l00062"></a>00062                                         TUint8* aDataPtr, <span class="keyword">const</span> TUint8* aDataPtrLimit);
<a name="l00063"></a>00063         };
<a name="l00064"></a>00064 
<a name="l00065"></a>00065 <span class="comment">//</span>
<a name="l00066"></a>00066 <span class="comment">// CBitDepth4Encoder: specialised writer for 4bpp</span>
<a name="l00067"></a>00067 <span class="comment">//</span>
<a name="l00068"></a>00068 
<a name="l00069"></a>00069 <span class="keyword">const</span> TInt KPngDepth4PixelsPerByte = 2;
<a name="l00070"></a>00070 <span class="keyword">const</span> TInt KPngDepth4RoundUpValue = 1;
<a name="l00071"></a>00071 <span class="keyword">const</span> TInt KPngDepth4ShiftValue = 4;
<a name="l00072"></a><a class="code" href="class_c_bit_depth4_encoder.html">00072</a> <span class="keyword">class </span><a class="code" href="class_c_bit_depth4_encoder.html">CBitDepth4Encoder</a> : <span class="keyword">public</span> <a class="code" href="class_c_png_write_sub_codec.html">CPngWriteSubCodec</a>
<a name="l00073"></a>00073         {
<a name="l00074"></a>00074 <span class="keyword">private</span>:
<a name="l00075"></a>00075         <span class="keyword">virtual</span> <span class="keywordtype">void</span> DoConstructL();
<a name="l00076"></a>00076         <span class="keyword">virtual</span> TInt ScanlineBufferSize(TInt aPixelLength);
<a name="l00077"></a>00077         <span class="keyword">virtual</span> <span class="keywordtype">void</span> DoEncode(<span class="keyword">const</span> CFbsBitmap* aSource, <span class="keyword">const</span> TInt aScanline,
<a name="l00078"></a>00078                                         TUint8* aDataPtr, <span class="keyword">const</span> TUint8* aDataPtrLimit);
<a name="l00079"></a>00079         };
<a name="l00080"></a>00080 
<a name="l00081"></a>00081 <span class="comment">//</span>
<a name="l00082"></a>00082 <span class="comment">// CBitDepth8ColorType2Encoder: specialised writer for 8bpp, RGB colour</span>
<a name="l00083"></a>00083 <span class="comment">//</span>
<a name="l00084"></a>00084 <span class="keyword">const</span> TInt KPngDepth8RgbBytesPerPixel = 3;
<a name="l00085"></a><a class="code" href="class_c_bit_depth8_color_type2_encoder.html">00085</a> <span class="keyword">class </span><a class="code" href="class_c_bit_depth8_color_type2_encoder.html">CBitDepth8ColorType2Encoder</a> : <span class="keyword">public</span> <a class="code" href="class_c_png_write_sub_codec.html">CPngWriteSubCodec</a>
<a name="l00086"></a>00086         {
<a name="l00087"></a>00087 <span class="keyword">private</span>:
<a name="l00088"></a>00088         <span class="keyword">virtual</span> TInt ScanlineBufferSize(TInt aPixelLength);
<a name="l00089"></a>00089         <span class="keyword">virtual</span> <span class="keywordtype">void</span> DoEncode(<span class="keyword">const</span> CFbsBitmap* aSource, <span class="keyword">const</span> TInt aScanline,
<a name="l00090"></a>00090                                         TUint8* aDataPtr, <span class="keyword">const</span> TUint8* aDataPtrLimit);
<a name="l00091"></a>00091         };
<a name="l00092"></a>00092 
<a name="l00093"></a>00093 <span class="comment">//</span>
<a name="l00094"></a>00094 <span class="comment">// CBitDepth8Encoder: specialised writer for 8bpp</span>
<a name="l00095"></a>00095 <span class="comment">//</span>
<a name="l00096"></a>00096 
<a name="l00097"></a>00097 <span class="keyword">const</span> TInt KPngDepth8PixelsPerByte = 1;
<a name="l00098"></a>00098 <span class="keyword">const</span> TInt KPngDepth8ShiftValue = 0;
<a name="l00099"></a><a class="code" href="class_c_bit_depth8_encoder.html">00099</a> <span class="keyword">class </span><a class="code" href="class_c_bit_depth8_encoder.html">CBitDepth8Encoder</a> : <span class="keyword">public</span> <a class="code" href="class_c_png_write_sub_codec.html">CPngWriteSubCodec</a>
<a name="l00100"></a>00100         {
<a name="l00101"></a>00101 <span class="keyword">private</span>:
<a name="l00102"></a>00102         <span class="keyword">virtual</span> <span class="keywordtype">void</span> DoConstructL();
<a name="l00103"></a>00103         <span class="keyword">virtual</span> TInt ScanlineBufferSize(TInt aPixelLength);
<a name="l00104"></a>00104         <span class="keyword">virtual</span> <span class="keywordtype">void</span> DoEncode(<span class="keyword">const</span> CFbsBitmap* aSource, <span class="keyword">const</span> TInt aScanline,
<a name="l00105"></a>00105                                         TUint8* aDataPtr, <span class="keyword">const</span> TUint8* aDataPtrLimit);
<a name="l00106"></a>00106         };
<a name="l00107"></a>00107 
<a name="l00108"></a>00108 <span class="preprocessor">#endif // __PNGSCANLINEENCODER_H__</span>
</pre></div>
<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
     <p class="copyright">Copyright &#169;2010 Nokia Corporation and/or its subsidiary(-ies).<br /> All rights
reserved. Unless otherwise stated, these materials are provided under the terms of the <a href=" http://www.eclipse.org/legal/epl-v10.html"> Eclipse Public License
v1.0</a>.</p> 
   </div>
  </div>
  <?php include_once (CURRENT_SKIN_PATH.'/sdl_footer.html'); ?>
 </body>
</html>
