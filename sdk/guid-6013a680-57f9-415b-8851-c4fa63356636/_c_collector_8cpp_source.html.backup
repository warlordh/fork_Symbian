<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TB9.2 Example Applications: examples/Base/MessageQueueExample/src/CCollector.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
<link type="text/css" rel="stylesheet" href="css/common.css" media="screen"/>
<link type="text/css" rel="stylesheet" href="css/sdl.css" media="screen"/>

<!--[if IE]>
<link href="css/iefix.css" rel="stylesheet" type="text/css" media="screen" />
<![endif]-->
</head>
<body class="kernelguide">
    
     <?php include_once (CURRENT_SKIN_PATH.'/sdl_header.html'); ?>
  <div id="sdl_container">
   <div id="leftMenu">
    <div id="expandcontractdiv">
     <a id="collapseTree" href="javascript:tree.collapseAll()">
      Collapse all
     </a>
     <a id="index" href="index.html">
      Symbian^3 Product Developer Library
     </a>
    </div>
    <iframe style="border:none" height="800" width="300" src="index-toc.html"></iframe>
<div id="treeDiv1">
     &#160;
    </div>
    <script type="text/javascript">
     var currentIconMode = 0;
	YAHOO.util.Event.onDOMReady(buildTree, this,true);
    </script>
   </div>
   <div id="sdl_content">
<!-- Generated by Doxygen 1.6.2 -->
<h1>examples/Base/MessageQueueExample/src/CCollector.cpp</h1><a href="_c_collector_8cpp.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright (c) 2008-2009 Nokia Corporation and/or its subsidiary(-ies).</span>
<a name="l00002"></a>00002 <span class="comment">// All rights reserved.</span>
<a name="l00003"></a>00003 <span class="comment">// This component and the accompanying materials are made available</span>
<a name="l00004"></a>00004 <span class="comment">// under the terms of &quot;Eclipse Public License v1.0&quot;</span>
<a name="l00005"></a>00005 <span class="comment">// which accompanies this distribution, and is available</span>
<a name="l00006"></a>00006 <span class="comment">// at the URL &quot;http://www.eclipse.org/legal/epl-v10.html&quot;.</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Initial Contributors:</span>
<a name="l00009"></a>00009 <span class="comment">// Nokia Corporation - initial contribution.</span>
<a name="l00010"></a>00010 <span class="comment">//</span>
<a name="l00011"></a>00011 <span class="comment">// Contributors:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// Description:</span>
<a name="l00014"></a>00014 <span class="comment">// The following class takes user input and sends it to a different </span>
<a name="l00015"></a>00015 <span class="comment">// process called inverter.exe via InverterInQ message Queue.</span>
<a name="l00016"></a>00016 <span class="comment">//</span>
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 
<a name="l00024"></a>00024 <span class="preprocessor">#include &quot;CCollector.h&quot;</span>
<a name="l00025"></a>00025 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTitle,<span class="stringliteral">&quot;InputMessage&quot;</span>);
<a name="l00026"></a>00026 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KWelcome,<span class="stringliteral">&quot; Welcome to Message Queue Example application for the global queues\n&quot;</span>);
<a name="l00027"></a>00027 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KEnterWords, <span class="stringliteral">&quot;\n Enter some words and press enter key to send to inverter or Press Esc to exit.\n&quot;</span>);
<a name="l00028"></a>00028 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KGlobalInverterInQ, <span class="stringliteral">&quot;InverterInQ&quot;</span>);
<a name="l00029"></a>00029 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KGlobalInverterOutQ, <span class="stringliteral">&quot;InverterOutQ&quot;</span>);
<a name="l00030"></a>00030 <span class="keyword">const</span> TInt KNumberOfMsgs = 10;
<a name="l00031"></a>00031 
<a name="l00035"></a><a class="code" href="class_c_collector.html#a62eb0d5618f19c12f0e2fde477ce6e33">00035</a> <a class="code" href="class_c_collector.html#a62eb0d5618f19c12f0e2fde477ce6e33">CCollector::CCollector</a>(TInt aPriority):CActive( aPriority )
<a name="l00036"></a>00036         {       
<a name="l00037"></a>00037         CActiveScheduler::Add(<span class="keyword">this</span>);
<a name="l00038"></a>00038         }
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 CCollector::~CCollector()
<a name="l00041"></a>00041         {
<a name="l00042"></a>00042         Cancel();
<a name="l00043"></a>00043         }
<a name="l00044"></a>00044 
<a name="l00045"></a>00045 <span class="keywordtype">void</span> CCollector::DoCancel()
<a name="l00046"></a>00046         {
<a name="l00047"></a>00047         }
<a name="l00048"></a>00048 
<a name="l00054"></a><a class="code" href="class_c_collector.html#a7324ad866c1c03594465d5549aec5546">00054</a> <span class="keywordtype">void</span> <a class="code" href="class_c_collector.html#a7324ad866c1c03594465d5549aec5546">CCollector::ConstructL</a>()
<a name="l00055"></a>00055         {
<a name="l00056"></a>00056         iConsole = Console::NewL(KTitle, TSize(KConsFullScreen, KConsFullScreen));
<a name="l00057"></a>00057         iConsole-&gt;Printf(KWelcome);
<a name="l00058"></a>00058         iConsole-&gt;Printf(KEnterWords);
<a name="l00059"></a>00059         
<a name="l00060"></a>00060         <span class="comment">//Create global message queue , which is used as input to the inverter and output to the collector.</span>
<a name="l00061"></a>00061         User::LeaveIfError(iInverterInQ.CreateGlobal(KGlobalInverterInQ, KNumberOfMsgs, EOwnerProcess));
<a name="l00062"></a>00062                 
<a name="l00063"></a>00063         <span class="comment">//Create global message queue , which is used as output to the inverter and input to the collector.</span>
<a name="l00064"></a>00064         User::LeaveIfError(iInverterOutQ.CreateGlobal(KGlobalInverterOutQ, KNumberOfMsgs, EOwnerProcess));
<a name="l00065"></a>00065         
<a name="l00066"></a>00066         <span class="comment">//Start Inverter process.</span>
<a name="l00067"></a>00067         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KProcessName, <span class="stringliteral">&quot;inverter.exe&quot;</span>);
<a name="l00068"></a>00068         User::LeaveIfError(process.Create(KProcessName, KNullDesC));
<a name="l00069"></a>00069         process.Resume();
<a name="l00070"></a>00070         
<a name="l00071"></a>00071         iRcvInverterInQ= CMsgQActive::NewL(); 
<a name="l00072"></a>00072         }
<a name="l00073"></a>00073 
<a name="l00074"></a>00074 <a class="code" href="class_c_collector.html">CCollector</a>* CCollector::NewL(TInt aPriority)
<a name="l00075"></a>00075         {
<a name="l00076"></a>00076         <a class="code" href="class_c_collector.html">CCollector</a>* <span class="keyword">self</span>=<span class="keyword">new</span>(ELeave)<a class="code" href="class_c_collector.html">CCollector</a>(aPriority);
<a name="l00077"></a>00077         CleanupStack::PushL(<span class="keyword">self</span>);
<a name="l00078"></a>00078         <span class="keyword">self</span>-&gt;ConstructL();
<a name="l00079"></a>00079         CleanupStack::Pop(<span class="keyword">self</span>);
<a name="l00080"></a>00080         <span class="keywordflow">return</span> <span class="keyword">self</span>;
<a name="l00081"></a>00081         }
<a name="l00082"></a>00082 
<a name="l00086"></a><a class="code" href="class_c_collector.html#a3ed2cf3df9b76aa36ff1052f9144f94a">00086</a> <span class="keywordtype">void</span> <a class="code" href="class_c_collector.html#a3ed2cf3df9b76aa36ff1052f9144f94a">CCollector::RequestFunction</a>()
<a name="l00087"></a>00087         {
<a name="l00088"></a>00088         iConsole-&gt;Read(iStatus);
<a name="l00089"></a>00089         SetActive();
<a name="l00090"></a>00090         }
<a name="l00091"></a>00091 
<a name="l00095"></a><a class="code" href="class_c_collector.html#afeea3cfdbcd23f07b9c02ac93e87cf81">00095</a> <span class="keywordtype">void</span> <a class="code" href="class_c_collector.html#afeea3cfdbcd23f07b9c02ac93e87cf81">CCollector::RunL</a>()
<a name="l00096"></a>00096         {
<a name="l00097"></a>00097         <span class="comment">//Store the words input by the user in a buffer.</span>
<a name="l00098"></a>00098         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KChar,<span class="stringliteral">&quot;%c&quot;</span>);
<a name="l00099"></a>00099         iConsole-&gt;Printf(KChar,(TUint8)(iConsole-&gt;KeyCode()));
<a name="l00100"></a>00100         iBuf.Append(iConsole-&gt;KeyCode());       
<a name="l00101"></a>00101         <a class="code" href="class_c_collector.html#ad2b71e3272b298ba8ca40dc4049cca07">ProcessKeyPress</a>(TChar(iConsole-&gt;KeyCode()));
<a name="l00102"></a>00102         }
<a name="l00103"></a>00103 
<a name="l00108"></a><a class="code" href="class_c_collector.html#ad2b71e3272b298ba8ca40dc4049cca07">00108</a> <span class="keywordtype">void</span> <a class="code" href="class_c_collector.html#ad2b71e3272b298ba8ca40dc4049cca07">CCollector::ProcessKeyPress</a>(TChar aChar)
<a name="l00109"></a>00109     {    
<a name="l00110"></a>00110     <span class="keywordflow">if</span> (aChar == EKeyEscape)
<a name="l00111"></a>00111         {
<a name="l00112"></a>00112         this-&gt;<a class="code" href="class_c_collector.html#ad038923135df997b7c8d121c63a4cf29">Stop</a>();
<a name="l00113"></a>00113         }
<a name="l00114"></a>00114     <span class="keywordflow">else</span> <span class="keywordflow">if</span>(aChar == EKeyEnter)
<a name="l00115"></a>00115         {
<a name="l00116"></a>00116         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KNextLine , <span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00117"></a>00117         iConsole-&gt;Printf(KNextLine);
<a name="l00118"></a>00118         this-&gt;<a class="code" href="class_c_collector.html#ad22077e2d9c23fb39e4073ccacd1ee89">SendMsgInQ</a>(iBuf); 
<a name="l00119"></a>00119         iBuf.Zero();
<a name="l00120"></a>00120         this-&gt;<a class="code" href="class_c_collector.html#a3ed2cf3df9b76aa36ff1052f9144f94a">RequestFunction</a>();        
<a name="l00121"></a>00121         }
<a name="l00122"></a>00122     <span class="keywordflow">else</span>
<a name="l00123"></a>00123         {
<a name="l00124"></a>00124         this-&gt;<a class="code" href="class_c_collector.html#a3ed2cf3df9b76aa36ff1052f9144f94a">RequestFunction</a>();  
<a name="l00125"></a>00125         }       
<a name="l00126"></a>00126     }
<a name="l00127"></a>00127 
<a name="l00131"></a><a class="code" href="class_c_collector.html#ad038923135df997b7c8d121c63a4cf29">00131</a> <span class="keywordtype">void</span> <a class="code" href="class_c_collector.html#ad038923135df997b7c8d121c63a4cf29">CCollector::Stop</a>()
<a name="l00132"></a>00132         {
<a name="l00133"></a>00133     TBuf&lt;1&gt; escape;
<a name="l00134"></a>00134     escape.Append(EKeyEscape); 
<a name="l00135"></a>00135     <span class="comment">//Sends stop message to the inverter.</span>
<a name="l00136"></a>00136     this-&gt;<a class="code" href="class_c_collector.html#ad22077e2d9c23fb39e4073ccacd1ee89">SendMsgInQ</a>(escape); 
<a name="l00137"></a>00137     
<a name="l00138"></a>00138     <span class="comment">//Cancel any outstanding request.</span>
<a name="l00139"></a>00139     iRcvInverterInQ-&gt;Cancel();
<a name="l00140"></a>00140     <span class="keyword">delete</span> iRcvInverterInQ;
<a name="l00141"></a>00141     <span class="keyword">delete</span> iConsole;
<a name="l00142"></a>00142     <a class="code" href="class_c_collector.html#ad038923135df997b7c8d121c63a4cf29">CActiveScheduler::Stop</a>();   
<a name="l00143"></a>00143     escape.Zero();
<a name="l00144"></a>00144         }
<a name="l00145"></a>00145 
<a name="l00150"></a><a class="code" href="class_c_collector.html#ac93385f6f18c9e3a6d0fb92a989acb67">00150</a> <span class="keywordtype">void</span> <a class="code" href="class_c_collector.html#ac93385f6f18c9e3a6d0fb92a989acb67">CCollector::StartRecieving</a>()
<a name="l00151"></a>00151         {
<a name="l00152"></a>00152         iRcvInverterInQ-&gt;<a class="code" href="class_c_msg_q_active.html#a5753cfd0f59382c0811757825e0462f5">StartRecieving</a>();
<a name="l00153"></a>00153         }
<a name="l00154"></a>00154 
<a name="l00158"></a><a class="code" href="class_c_collector.html#ad22077e2d9c23fb39e4073ccacd1ee89">00158</a> <span class="keywordtype">void</span> <a class="code" href="class_c_collector.html#ad22077e2d9c23fb39e4073ccacd1ee89">CCollector::SendMsgInQ</a>(TBuf&lt;100&gt; buf)
<a name="l00159"></a>00159         {
<a name="l00160"></a>00160         TInt ret = iInverterInQ.OpenGlobal(KGlobalInverterInQ); 
<a name="l00161"></a>00161         <span class="keywordflow">if</span> (ret == KErrNone)
<a name="l00162"></a>00162         {
<a name="l00163"></a>00163         iInverterInQ.SendBlocking(buf);
<a name="l00164"></a>00164         }
<a name="l00165"></a>00165         }
<a name="l00166"></a>00166 
<a name="l00167"></a>00167 LOCAL_C <span class="keywordtype">void</span> DoStartL()
<a name="l00168"></a>00168         {
<a name="l00169"></a>00169         <span class="comment">// Create active scheduler (to run active objects)</span>
<a name="l00170"></a>00170         CActiveScheduler* scheduler = <span class="keyword">new</span> (ELeave) CActiveScheduler();
<a name="l00171"></a>00171         CleanupStack::PushL(scheduler);
<a name="l00172"></a>00172         CActiveScheduler::Install(scheduler);
<a name="l00173"></a>00173 
<a name="l00174"></a>00174         <a class="code" href="class_c_collector.html">CCollector</a>* iCollect= CCollector::NewL();
<a name="l00175"></a>00175         CleanupStack::PushL(iCollect);
<a name="l00176"></a>00176         
<a name="l00177"></a>00177          <span class="comment">//Start getting the user input.</span>
<a name="l00178"></a>00178         iCollect-&gt;<a class="code" href="class_c_collector.html#a3ed2cf3df9b76aa36ff1052f9144f94a">RequestFunction</a>();
<a name="l00179"></a>00179         
<a name="l00180"></a>00180         <span class="comment">//Recieve data from the inverter in another console.</span>
<a name="l00181"></a>00181         iCollect-&gt;<a class="code" href="class_c_collector.html#ac93385f6f18c9e3a6d0fb92a989acb67">StartRecieving</a>();
<a name="l00182"></a>00182         CActiveScheduler::Start();
<a name="l00183"></a>00183         
<a name="l00184"></a>00184         CleanupStack::PopAndDestroy(iCollect);
<a name="l00185"></a>00185         CleanupStack::PopAndDestroy(scheduler); 
<a name="l00186"></a>00186         }
<a name="l00187"></a>00187 
<a name="l00188"></a><a class="code" href="_c_collector_8cpp.html#a0f358e9c4355138f629b8c4f37310295">00188</a> GLDEF_C TInt E32Main()
<a name="l00189"></a>00189         {
<a name="l00190"></a>00190         __UHEAP_MARK;
<a name="l00191"></a>00191         CTrapCleanup* cleanup = CTrapCleanup::New();
<a name="l00192"></a>00192         <span class="keywordflow">if</span>(cleanup == NULL)
<a name="l00193"></a>00193                 {
<a name="l00194"></a>00194                 <span class="keywordflow">return</span> KErrNoMemory;
<a name="l00195"></a>00195                 }
<a name="l00196"></a>00196         TRAPD(mainError, DoStartL());
<a name="l00197"></a>00197         <span class="keywordflow">if</span>(mainError != KErrNone)
<a name="l00198"></a>00198                 {
<a name="l00199"></a>00199                 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KUserPanic,<span class="stringliteral">&quot;Failed to complete&quot;</span>);  
<a name="l00200"></a>00200                 User::Panic(KUserPanic, mainError);
<a name="l00201"></a>00201                 }
<a name="l00202"></a>00202                 <span class="keyword">delete</span> cleanup;
<a name="l00203"></a>00203                 __UHEAP_MARKEND;
<a name="l00204"></a>00204                 <span class="keywordflow">return</span> KErrNone;
<a name="l00205"></a>00205         }
<a name="l00206"></a>00206 
</pre></div>
<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
     <p class="copyright">Copyright &#169;2010 Nokia Corporation and/or its subsidiary(-ies).<br /> All rights
reserved. Unless otherwise stated, these materials are provided under the terms of the <a href=" http://www.eclipse.org/legal/epl-v10.html"> Eclipse Public License
v1.0</a>.</p> 
   </div>
  </div>
  <?php include_once (CURRENT_SKIN_PATH.'/sdl_footer.html'); ?>
 </body>
</html>
