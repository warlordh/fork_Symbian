<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TB9.2 Example Applications: examples/Graphics/Bitmaps/Bitmap.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
<link type="text/css" rel="stylesheet" href="css/common.css" media="screen"/>
<link type="text/css" rel="stylesheet" href="css/sdl.css" media="screen"/>

<!--[if IE]>
<link href="css/iefix.css" rel="stylesheet" type="text/css" media="screen" />
<![endif]-->
</head>
<body class="kernelguide">
    
     <?php include_once (CURRENT_SKIN_PATH.'/sdl_header.html'); ?>
  <div id="sdl_container">
   <div id="leftMenu">
    <div id="expandcontractdiv">
     <a id="collapseTree" href="javascript:tree.collapseAll()">
      Collapse all
     </a>
     <a id="index" href="index.html">
      Symbian^3 Product Developer Library
     </a>
    </div>
    <iframe style="border:none" height="800" width="300" src="index-toc.html"></iframe>
<div id="treeDiv1">
     &#160;
    </div>
    <script type="text/javascript">
     var currentIconMode = 0;
	YAHOO.util.Event.onDOMReady(buildTree, this,true);
    </script>
   </div>
   <div id="sdl_content">
<!-- Generated by Doxygen 1.6.2 -->
<h1>examples/Graphics/Bitmaps/Bitmap.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright (c) 2000-2009 Nokia Corporation and/or its subsidiary(-ies).</span>
<a name="l00002"></a>00002 <span class="comment">// All rights reserved.</span>
<a name="l00003"></a>00003 <span class="comment">// This component and the accompanying materials are made available</span>
<a name="l00004"></a>00004 <span class="comment">// under the terms of &quot;Eclipse Public License v1.0&quot;</span>
<a name="l00005"></a>00005 <span class="comment">// which accompanies this distribution, and is available</span>
<a name="l00006"></a>00006 <span class="comment">// at the URL &quot;http://www.eclipse.org/legal/epl-v10.html&quot;.</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Initial Contributors:</span>
<a name="l00009"></a>00009 <span class="comment">// Nokia Corporation - initial contribution.</span>
<a name="l00010"></a>00010 <span class="comment">//</span>
<a name="l00011"></a>00011 <span class="comment">// Contributors:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// Description:</span>
<a name="l00014"></a>00014 <span class="comment">//</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 <span class="preprocessor">#include &quot;BitmapsGraphicsControl.h&quot;</span>
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 <span class="preprocessor">#include &lt;grbmap.mbg&gt;</span>
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtZDrive,<span class="stringliteral">&quot;Z:&quot;</span>);
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="keywordtype">void</span> CBitmapControl::LoadBitmapL(CFbsBitmap* aBitMap,<span class="keyword">const</span> TDesC&amp; aPathAndFile,TInt aId,TBool aShareIfLoaded)
<a name="l00023"></a>00023         {
<a name="l00024"></a>00024         TParse mbfn;
<a name="l00025"></a>00025         
<a name="l00026"></a>00026         TDriveUnit sysDrive (RFs::GetSystemDrive());
<a name="l00027"></a>00027         TDriveName sysDriveName (sysDrive.Name());      
<a name="l00028"></a>00028         TFileName fileName(sysDriveName);
<a name="l00029"></a>00029         fileName.Append(aPathAndFile);
<a name="l00030"></a>00030 
<a name="l00031"></a>00031         mbfn.Set(aPathAndFile,&amp;fileName,NULL);
<a name="l00032"></a>00032         <span class="keywordflow">if</span> (!aBitMap-&gt;Load(mbfn.FullName(),aId,aShareIfLoaded))
<a name="l00033"></a>00033                 <span class="keywordflow">return</span>;
<a name="l00034"></a>00034 
<a name="l00035"></a>00035         mbfn.Set(aPathAndFile,&amp;KTxtZDrive,NULL);
<a name="l00036"></a>00036         User::LeaveIfError(aBitMap-&gt;Load(mbfn.FullName(),aId,aShareIfLoaded));
<a name="l00037"></a>00037         <span class="keywordflow">return</span>;
<a name="l00038"></a>00038         }
<a name="l00039"></a>00039 
<a name="l00040"></a>00040         
<a name="l00041"></a>00041         <span class="comment">// Text printed to the console</span>
<a name="l00042"></a>00042 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtCase0,<span class="stringliteral">&quot;draw bitmap, centered on screen using block transfer&quot;</span>);
<a name="l00043"></a>00043 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtCase1,<span class="stringliteral">&quot;draw piece of bitmap using block transfer&quot;</span>);
<a name="l00044"></a>00044 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtCase2,<span class="stringliteral">&quot;draw bitmap described in twips using DrawBitmap()&quot;</span>);
<a name="l00045"></a>00045 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtCase3,<span class="stringliteral">&quot;draw stretched bitmap&quot;</span>);
<a name="l00046"></a>00046 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtCase4,<span class="stringliteral">&quot;tile rectangle, using bitmap as the brush pattern&quot;</span>);
<a name="l00047"></a>00047 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtCase5,<span class="stringliteral">&quot;tile rectangle, tiling around center of screen&quot;</span>);
<a name="l00048"></a>00048 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtCase6,<span class="stringliteral">&quot;masks: the problem of drawing a bitmap on different backgrounds&quot;</span>);
<a name="l00049"></a>00049 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtCase7,<span class="stringliteral">&quot;masks: using a mask to give a bitmap a transparent background&quot;</span>);
<a name="l00050"></a>00050 
<a name="l00051"></a>00051         <span class="comment">// The name of the multi-bitmap file containing the bitmap</span>
<a name="l00052"></a>00052         <span class="comment">// and bitmap mask files.</span>
<a name="l00053"></a>00053 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtMBMname,<span class="stringliteral">&quot;\\resource\\apps\\grbmap.mbm&quot;</span>);
<a name="l00054"></a>00054 
<a name="l00055"></a>00055 <span class="keywordtype">void</span> CBitmapControl::UpdateModelL()
<a name="l00056"></a>00056         {
<a name="l00057"></a>00057                 <span class="comment">// set up name for bitmap sharing</span>
<a name="l00058"></a>00058         TBool shareIfLoaded(ETrue);
<a name="l00059"></a>00059         
<a name="l00060"></a>00060                 <span class="keywordflow">switch</span> (Phase())
<a name="l00061"></a>00061                 {
<a name="l00062"></a>00062                 <span class="keywordflow">case</span> 0:
<a name="l00063"></a>00063                         <span class="comment">// load the bitmap and mask bitmap</span>
<a name="l00064"></a>00064                         iBitmap = <span class="keyword">new</span> (ELeave) CFbsBitmap();
<a name="l00065"></a>00065                         LoadBitmapL(iBitmap,KTxtMBMname,EMbmGrbmapSmiley,shareIfLoaded);
<a name="l00066"></a>00066                         iMaskBitmap = <span class="keyword">new</span> (ELeave) CFbsBitmap();
<a name="l00067"></a>00067                         LoadBitmapL(iMaskBitmap,KTxtMBMname,EMbmGrbmapSmilmask,shareIfLoaded);
<a name="l00068"></a>00068                         iGraphObserver-&gt;NotifyStatus(KTxtCase0);
<a name="l00069"></a>00069                         <span class="keywordflow">break</span>;
<a name="l00070"></a>00070                 <span class="keywordflow">case</span> 1:
<a name="l00071"></a>00071                         iGraphObserver-&gt;NotifyStatus(KTxtCase1);
<a name="l00072"></a>00072                         <span class="keywordflow">break</span>;
<a name="l00073"></a>00073                 <span class="keywordflow">case</span> 2:
<a name="l00074"></a>00074                         iGraphObserver-&gt;NotifyStatus(KTxtCase2);
<a name="l00075"></a>00075                         <span class="keywordflow">break</span>;
<a name="l00076"></a>00076                 <span class="keywordflow">case</span> 3:
<a name="l00077"></a>00077                         iGraphObserver-&gt;NotifyStatus(KTxtCase3);
<a name="l00078"></a>00078                         <span class="keywordflow">break</span>;
<a name="l00079"></a>00079                 <span class="keywordflow">case</span> 4:
<a name="l00080"></a>00080                         iGraphObserver-&gt;NotifyStatus(KTxtCase4);
<a name="l00081"></a>00081                         <span class="keywordflow">break</span>;
<a name="l00082"></a>00082                 <span class="keywordflow">case</span> 5:
<a name="l00083"></a>00083                         iGraphObserver-&gt;NotifyStatus(KTxtCase5);
<a name="l00084"></a>00084                         <span class="keywordflow">break</span>;
<a name="l00085"></a>00085                 <span class="keywordflow">case</span> 6:
<a name="l00086"></a>00086                         iGraphObserver-&gt;NotifyStatus(KTxtCase6);
<a name="l00087"></a>00087                         <span class="keywordflow">break</span>;
<a name="l00088"></a>00088                 <span class="keywordflow">case</span> 7:
<a name="l00089"></a>00089                         iGraphObserver-&gt;NotifyStatus(KTxtCase7);
<a name="l00090"></a>00090                         <span class="keywordflow">break</span>;
<a name="l00091"></a>00091                 }
<a name="l00092"></a>00092         }
<a name="l00093"></a>00093 
<a name="l00094"></a>00094 <span class="keywordtype">void</span> CBitmapControl::Draw(<span class="keyword">const</span> TRect&amp; <span class="comment">/* aRect */</span>)<span class="keyword"> const</span>
<a name="l00095"></a>00095 <span class="keyword">        </span>{
<a name="l00096"></a>00096         <span class="comment">// draw surrounding rectangle</span>
<a name="l00097"></a>00097         CWindowGc&amp; gc=SystemGc(); <span class="comment">// graphics context we draw to</span>
<a name="l00098"></a>00098         gc.UseFont(iMessageFont); <span class="comment">// use the system message font</span>
<a name="l00099"></a>00099         gc.Clear(); <span class="comment">// clear the area to be drawn to</span>
<a name="l00100"></a>00100         SystemGc().DrawRect(Rect()); <span class="comment">// surrounding rectangle to draw into</span>
<a name="l00101"></a>00101         TRect rect=Rect(); <span class="comment">// a centered rectangle of the default size</span>
<a name="l00102"></a>00102         TRect bmpPieceRect=Rect(); <span class="comment">// a rectangle to define a piece of bitmap</span>
<a name="l00103"></a>00103         TInt xDelta=0; <span class="comment">// for x coordinates</span>
<a name="l00104"></a>00104         TInt yDelta=0; <span class="comment">// for y coordinates</span>
<a name="l00105"></a>00105         TPoint screenCenterPoint=rect.Center(); <span class="comment">// the center of the screen</span>
<a name="l00106"></a>00106         
<a name="l00107"></a>00107         <span class="comment">// decide what to do, and do it</span>
<a name="l00108"></a>00108         <span class="keywordflow">switch</span> (Phase())
<a name="l00109"></a>00109                 {
<a name="l00110"></a>00110                 <span class="keywordflow">case</span> 0:
<a name="l00111"></a>00111                         <span class="comment">// draw a whole bitmap centered on the screen,</span>
<a name="l00112"></a>00112                         <span class="comment">// using bitmap block transfer</span>
<a name="l00113"></a>00113                         {
<a name="l00114"></a>00114                         <span class="comment">// calculate position for top left of bitmap so it is centered</span>
<a name="l00115"></a>00115                         TSize bmpSizeInPixels=iBitmap-&gt;SizeInPixels();
<a name="l00116"></a>00116                         xDelta=(rect.Width()-bmpSizeInPixels.iWidth)/2;
<a name="l00117"></a>00117                         yDelta=(rect.Height()-bmpSizeInPixels.iHeight)/2;
<a name="l00118"></a>00118                         TPoint pos=TPoint(xDelta,yDelta); <span class="comment">// displacement vector</span>
<a name="l00119"></a>00119                         pos+=rect.iTl; <span class="comment">// bitmap top left corner position</span>
<a name="l00120"></a>00120                         gc.BitBlt(pos, iBitmap); <span class="comment">// CWindowGc member function</span>
<a name="l00121"></a>00121                         }
<a name="l00122"></a>00122                         <span class="keywordflow">break</span>;
<a name="l00123"></a>00123                 <span class="keywordflow">case</span> 1:
<a name="l00124"></a>00124                         <span class="comment">// draw a rectangular piece of a bitmap, centered on the screen,</span>
<a name="l00125"></a>00125                         <span class="comment">// using bitmap block transfer</span>
<a name="l00126"></a>00126                         {
<a name="l00127"></a>00127                         <span class="comment">// calculate bitmap piece, half size from center of source bitmap</span>
<a name="l00128"></a>00128                         TSize bmpSizeInPixels=iBitmap-&gt;SizeInPixels();
<a name="l00129"></a>00129                         TSize bmpPieceSize(bmpSizeInPixels.iWidth*2/3,bmpSizeInPixels.iHeight*2/3);
<a name="l00130"></a>00130                         TPoint bmpPieceTopLeft(0,0); 
<a name="l00131"></a>00131                         bmpPieceRect.SetRect(bmpPieceTopLeft,bmpPieceSize); 
<a name="l00132"></a>00132                         <span class="comment">// calculate position for top left of bitmap piece so it is centered</span>
<a name="l00133"></a>00133                         xDelta=(rect.Width()-bmpPieceRect.Width())/2;
<a name="l00134"></a>00134                         yDelta=(rect.Height()-bmpPieceRect.Height())/2;
<a name="l00135"></a>00135                         TPoint pos=TPoint(xDelta,yDelta); <span class="comment">// displacement vector</span>
<a name="l00136"></a>00136                         pos+=rect.iTl; <span class="comment">// bitmap piece top left corner position</span>
<a name="l00137"></a>00137                         gc.BitBlt(pos, iBitmap, bmpPieceRect); <span class="comment">// using bitmap piece</span>
<a name="l00138"></a>00138                         }
<a name="l00139"></a>00139                         <span class="keywordflow">break</span>;
<a name="l00140"></a>00140                 <span class="keywordflow">case</span> 2:
<a name="l00141"></a>00141                         <span class="comment">// draw a bitmap to a defined size in twips</span>
<a name="l00142"></a>00142                         <span class="comment">// in the top left corner the rectangle,</span>
<a name="l00143"></a>00143                         <span class="comment">// using the GDI DrawBitmap() function</span>
<a name="l00144"></a>00144                         {
<a name="l00145"></a>00145                         TSize bmpSizeInTwips(600,600); <span class="comment">// must set twips size, default (0,0)</span>
<a name="l00146"></a>00146                         iBitmap-&gt;SetSizeInTwips(bmpSizeInTwips);
<a name="l00147"></a>00147                         gc.DrawBitmap(rect.iTl, iBitmap);
<a name="l00148"></a>00148                         }
<a name="l00149"></a>00149                         <span class="keywordflow">break</span>;
<a name="l00150"></a>00150                 <span class="keywordflow">case</span> 3:
<a name="l00151"></a>00151                         <span class="comment">// draw a stretched bitmap inside the rectangle,</span>
<a name="l00152"></a>00152                         <span class="comment">// using the GDI DrawBitmap() function</span>
<a name="l00153"></a>00153                         {
<a name="l00154"></a>00154                         gc.DrawBitmap(rect, iBitmap);
<a name="l00155"></a>00155                         }
<a name="l00156"></a>00156                         <span class="keywordflow">break</span>;
<a name="l00157"></a>00157                 <span class="keywordflow">case</span> 4:
<a name="l00158"></a>00158                         {
<a name="l00159"></a>00159                         <span class="comment">// use bitmap as brush pattern, tiling from top left of rectangle</span>
<a name="l00160"></a>00160                         <span class="comment">// set brush pattern and style to use the bitmap</span>
<a name="l00161"></a>00161                         gc.UseBrushPattern(iBitmap);
<a name="l00162"></a>00162                         gc.SetBrushStyle(CGraphicsContext::EPatternedBrush);
<a name="l00163"></a>00163                         gc.DrawRect(rect);
<a name="l00164"></a>00164                         gc.DiscardBrushPattern();
<a name="l00165"></a>00165                         }
<a name="l00166"></a>00166                         <span class="keywordflow">break</span>;
<a name="l00167"></a>00167                 <span class="keywordflow">case</span> 5:
<a name="l00168"></a>00168                         {
<a name="l00169"></a>00169                         <span class="comment">// use bitmap as brush pattern, tiling around center of screen</span>
<a name="l00170"></a>00170                         <span class="comment">// set brush pattern and style to use the bitmap</span>
<a name="l00171"></a>00171                         gc.SetBrushOrigin(screenCenterPoint);
<a name="l00172"></a>00172                         gc.UseBrushPattern(iBitmap);
<a name="l00173"></a>00173                         gc.SetBrushStyle(CGraphicsContext::EPatternedBrush);
<a name="l00174"></a>00174                         gc.DrawRect(rect);
<a name="l00175"></a>00175                         gc.DiscardBrushPattern();
<a name="l00176"></a>00176                         }
<a name="l00177"></a>00177                         <span class="keywordflow">break</span>;
<a name="l00178"></a>00178                 <span class="keywordflow">case</span> 6:
<a name="l00179"></a>00179                         <span class="comment">// bisect screen into two different coloured rects</span>
<a name="l00180"></a>00180                         {
<a name="l00181"></a>00181                         TRect screenRect=Rect();
<a name="l00182"></a>00182                         TInt bisect = (screenRect.iBr.iX-screenRect.iTl.iX)/2 + screenRect.iTl.iX;
<a name="l00183"></a>00183                         TRect leftRect(screenRect.iTl,TPoint(bisect,screenRect.iBr.iY));
<a name="l00184"></a>00184                         TRect rightRect(TPoint(bisect,screenRect.iTl.iY),screenRect.iBr);
<a name="l00185"></a>00185                         TRgb darkGray(85,85,85);
<a name="l00186"></a>00186                         gc.SetBrushColor(darkGray);
<a name="l00187"></a>00187                         gc.Clear(leftRect);
<a name="l00188"></a>00188                         TRgb black(0,0,0);
<a name="l00189"></a>00189                         gc.SetBrushColor(black);
<a name="l00190"></a>00190                         gc.Clear(rightRect);
<a name="l00191"></a>00191 
<a name="l00192"></a>00192                         TSize bmpSizeInPixels=iBitmap-&gt;SizeInPixels();
<a name="l00193"></a>00193                         TSize bmpPieceSize(bmpSizeInPixels.iWidth,bmpSizeInPixels.iHeight);
<a name="l00194"></a>00194                         TPoint bmpPieceTopLeft(0,0); 
<a name="l00195"></a>00195                         bmpPieceRect.SetRect(bmpPieceTopLeft,bmpPieceSize); 
<a name="l00196"></a>00196                         
<a name="l00197"></a>00197                         <span class="comment">// center bitmap on left</span>
<a name="l00198"></a>00198                         xDelta=(leftRect.Width()-bmpPieceRect.Width())/2;
<a name="l00199"></a>00199                         yDelta=(leftRect.Height()-bmpPieceRect.Height())/2;
<a name="l00200"></a>00200                         TPoint pos=TPoint(xDelta,yDelta); <span class="comment">// displacement vector</span>
<a name="l00201"></a>00201                         pos += leftRect.iTl; <span class="comment">// bitmap piece top left corner position</span>
<a name="l00202"></a>00202                         gc.BitBlt(pos,iBitmap);
<a name="l00203"></a>00203 
<a name="l00204"></a>00204                         <span class="comment">// center bitmap on right</span>
<a name="l00205"></a>00205                         xDelta=(rightRect.Width()-bmpPieceRect.Width())/2;
<a name="l00206"></a>00206                         yDelta=(rightRect.Height()-bmpPieceRect.Height())/2;
<a name="l00207"></a>00207                         TPoint pos2=TPoint(xDelta,yDelta); <span class="comment">// displacement vector</span>
<a name="l00208"></a>00208                         pos2 += rightRect.iTl; <span class="comment">// bitmap piece top left corner position</span>
<a name="l00209"></a>00209                         gc.BitBlt(pos2,iBitmap);
<a name="l00210"></a>00210                         }
<a name="l00211"></a>00211                         <span class="keywordflow">break</span>;
<a name="l00212"></a>00212                 <span class="keywordflow">case</span> 7:
<a name="l00213"></a>00213                         <span class="comment">// bisect screen into two different coloured rects</span>
<a name="l00214"></a>00214                         {
<a name="l00215"></a>00215                         TRect screenRect=Rect();
<a name="l00216"></a>00216                         TInt bisect = (screenRect.iBr.iX-screenRect.iTl.iX)/2 + screenRect.iTl.iX;
<a name="l00217"></a>00217                         TRect leftRect(TPoint(screenRect.iTl.iX,screenRect.iTl.iY+50),TPoint(bisect,screenRect.iBr.iY));
<a name="l00218"></a>00218                         TRect rightRect(TPoint(bisect,screenRect.iTl.iY+50),screenRect.iBr);
<a name="l00219"></a>00219                         TRgb darkGray(85,85,85);
<a name="l00220"></a>00220                         gc.SetBrushColor(darkGray);
<a name="l00221"></a>00221                         gc.Clear(leftRect);
<a name="l00222"></a>00222                         TRgb black(0,0,0);
<a name="l00223"></a>00223                         gc.SetBrushColor(black);
<a name="l00224"></a>00224                         gc.Clear(rightRect);
<a name="l00225"></a>00225 
<a name="l00226"></a>00226                         TSize bmpSizeInPixels=iBitmap-&gt;SizeInPixels();
<a name="l00227"></a>00227                         TSize bmpPieceSize(bmpSizeInPixels.iWidth,bmpSizeInPixels.iHeight);
<a name="l00228"></a>00228                         TPoint bmpPieceTopLeft(0,0); 
<a name="l00229"></a>00229                         bmpPieceRect.SetRect(bmpPieceTopLeft,bmpPieceSize); 
<a name="l00230"></a>00230                         
<a name="l00231"></a>00231                         <span class="comment">// center bitmap on left</span>
<a name="l00232"></a>00232                         xDelta=(leftRect.Width()-bmpPieceRect.Width())/2;
<a name="l00233"></a>00233                         yDelta=(leftRect.Height()-bmpPieceRect.Height())/2;
<a name="l00234"></a>00234                         TPoint pos=TPoint(xDelta,yDelta); <span class="comment">// displacement vector</span>
<a name="l00235"></a>00235                         pos += leftRect.iTl; <span class="comment">// bitmap piece top left corner position</span>
<a name="l00236"></a>00236                         gc.BitBltMasked(pos,iBitmap,bmpPieceRect,iMaskBitmap,EFalse); <span class="comment">// CWindowGc member function</span>
<a name="l00237"></a>00237 
<a name="l00238"></a>00238                         <span class="comment">// center bitmap on right</span>
<a name="l00239"></a>00239                         xDelta=(rightRect.Width()-bmpPieceRect.Width())/2;
<a name="l00240"></a>00240                         yDelta=(rightRect.Height()-bmpPieceRect.Height())/2;
<a name="l00241"></a>00241                         TPoint pos2=TPoint(xDelta,yDelta); <span class="comment">// displacement vector</span>
<a name="l00242"></a>00242                         pos2 += rightRect.iTl; <span class="comment">// bitmap piece top left corner position</span>
<a name="l00243"></a>00243                         gc.BitBltMasked(pos2,iBitmap,bmpPieceRect,iMaskBitmap,EFalse); <span class="comment">// CWindowGc member function</span>
<a name="l00244"></a>00244                         
<a name="l00245"></a>00245                         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtTheBitmap,<span class="stringliteral">&quot;The bitmap:&quot;</span>);
<a name="l00246"></a>00246                         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtBitmapMask,<span class="stringliteral">&quot;The bitmap&#39;s mask:&quot;</span>);
<a name="l00247"></a>00247 
<a name="l00248"></a>00248                         gc.DrawText(KTxtTheBitmap,TPoint(5,20));
<a name="l00249"></a>00249                         gc.BitBlt(TPoint(130,0),iBitmap);
<a name="l00250"></a>00250                         gc.DrawText(KTxtBitmapMask,TPoint(197,20));
<a name="l00251"></a>00251                         gc.BitBlt(TPoint(400,0),iMaskBitmap);
<a name="l00252"></a>00252                         }
<a name="l00253"></a>00253                         <span class="keywordflow">break</span>;
<a name="l00254"></a>00254                 <span class="keywordflow">default</span>:
<a name="l00255"></a>00255                         <span class="keywordflow">break</span>;
<a name="l00256"></a>00256                 }
<a name="l00257"></a>00257         }
</pre></div>
<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
     <p class="copyright">Copyright &#169;2010 Nokia Corporation and/or its subsidiary(-ies).<br /> All rights
reserved. Unless otherwise stated, these materials are provided under the terms of the <a href=" http://www.eclipse.org/legal/epl-v10.html"> Eclipse Public License
v1.0</a>.</p> 
   </div>
  </div>
  <?php include_once (CURRENT_SKIN_PATH.'/sdl_footer.html'); ?>
 </body>
</html>
