<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TB9.2 Example Applications: examples/AppFramework/Clock/ClockExample_AppView.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
<link type="text/css" rel="stylesheet" href="css/common.css" media="screen"/>
<link type="text/css" rel="stylesheet" href="css/sdl.css" media="screen"/>

<!--[if IE]>
<link href="css/iefix.css" rel="stylesheet" type="text/css" media="screen" />
<![endif]-->
</head>
<body class="kernelguide">
    
     <?php include_once (CURRENT_SKIN_PATH.'/sdl_header.html'); ?>
  <div id="sdl_container">
   <div id="leftMenu">
    <div id="expandcontractdiv">
     <a id="collapseTree" href="javascript:tree.collapseAll()">
      Collapse all
     </a>
     <a id="index" href="index.html">
      Symbian^3 Product Developer Library
     </a>
    </div>
    <iframe style="border:none" height="800" width="300" src="index-toc.html"></iframe>
<div id="treeDiv1">
     &#160;
    </div>
    <script type="text/javascript">
     var currentIconMode = 0;
	YAHOO.util.Event.onDOMReady(buildTree, this,true);
    </script>
   </div>
   <div id="sdl_content">
<!-- Generated by Doxygen 1.6.2 -->
<h1>examples/AppFramework/Clock/ClockExample_AppView.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).</span>
<a name="l00002"></a>00002 <span class="comment">// All rights reserved.</span>
<a name="l00003"></a>00003 <span class="comment">// This component and the accompanying materials are made available</span>
<a name="l00004"></a>00004 <span class="comment">// under the terms of &quot;Eclipse Public License v1.0&quot;</span>
<a name="l00005"></a>00005 <span class="comment">// which accompanies this distribution, and is available</span>
<a name="l00006"></a>00006 <span class="comment">// at the URL &quot;http://www.eclipse.org/legal/epl-v10.html&quot;.</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Initial Contributors:</span>
<a name="l00009"></a>00009 <span class="comment">// Nokia Corporation - initial contribution.</span>
<a name="l00010"></a>00010 <span class="comment">//</span>
<a name="l00011"></a>00011 <span class="comment">// Contributors:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// Description:</span>
<a name="l00014"></a>00014 <span class="comment">//</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 <span class="preprocessor">#include &quot;ClockExample.h&quot;</span>
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="comment">// Menu operations</span>
<a name="l00020"></a>00020 <span class="keywordtype">void</span> CExampleAppView::DoExperimentL( TInt aCommand )
<a name="l00021"></a>00021         {
<a name="l00022"></a>00022 
<a name="l00023"></a>00023         <span class="keywordflow">if</span>( aCommand &lt; ETestDo10 )
<a name="l00024"></a>00024                 {
<a name="l00025"></a>00025                 <span class="comment">// Digital clock commands</span>
<a name="l00026"></a>00026                 <span class="keywordflow">switch</span>( aCommand )
<a name="l00027"></a>00027                         {
<a name="l00028"></a>00028                 <span class="keywordflow">case</span> ETestDo0:
<a name="l00029"></a>00029                         iDigitalClockPosition.iX -= 5;
<a name="l00030"></a>00030                         iDigitalClock-&gt;SetPosition( iDigitalClockPosition );
<a name="l00031"></a>00031                         <span class="keywordflow">break</span>;
<a name="l00032"></a>00032                         
<a name="l00033"></a>00033                 <span class="keywordflow">case</span> ETestDo1:
<a name="l00034"></a>00034                         iDigitalClockPosition.iX += 5;
<a name="l00035"></a>00035                         iDigitalClock-&gt;SetPosition( iDigitalClockPosition );
<a name="l00036"></a>00036                         <span class="keywordflow">break</span>;
<a name="l00037"></a>00037                         
<a name="l00038"></a>00038                 <span class="keywordflow">case</span> ETestDo2:
<a name="l00039"></a>00039                         iDigitalClock-&gt;SetVisible( EFalse );
<a name="l00040"></a>00040                         <span class="keywordflow">break</span>;
<a name="l00041"></a>00041 
<a name="l00042"></a>00042                 <span class="keywordflow">case</span> ETestDo3:
<a name="l00043"></a>00043                         iAnalogClock-&gt;SetVisible( EFalse );
<a name="l00044"></a>00044                         iDigitalClock-&gt;SetVisible( ETrue );                     
<a name="l00045"></a>00045                         <span class="keywordflow">break</span>;
<a name="l00046"></a>00046 
<a name="l00047"></a>00047                 <span class="keywordflow">case</span> ETestDo4:
<a name="l00048"></a>00048                         iDigitalClockUniversalTimeOffset += ( EUTOffsetOneHour );
<a name="l00049"></a>00049                         iDigitalClock-&gt;SetUniversalTimeOffset( iDigitalClockUniversalTimeOffset );
<a name="l00050"></a>00050                         <span class="keywordflow">break</span>;
<a name="l00051"></a>00051                 <span class="keywordflow">case</span> ETestDo5:
<a name="l00052"></a>00052                         iDigitalClockUniversalTimeOffset += ( EUTOffsetHalfHour );
<a name="l00053"></a>00053                         iDigitalClock-&gt;SetUniversalTimeOffset( iDigitalClockUniversalTimeOffset );
<a name="l00054"></a>00054                         <span class="keywordflow">break</span>;
<a name="l00055"></a>00055                         
<a name="l00056"></a>00056                 <span class="keywordflow">case</span> ETestDo6:
<a name="l00057"></a>00057                         iDigitalClockUniversalTimeOffset += ( EUTOffsetOneMinute );
<a name="l00058"></a>00058                         iDigitalClock-&gt;SetUniversalTimeOffset( iDigitalClockUniversalTimeOffset );
<a name="l00059"></a>00059                         <span class="keywordflow">break</span>;
<a name="l00060"></a>00060 
<a name="l00061"></a>00061                 <span class="keywordflow">case</span> ETestDo7:
<a name="l00062"></a>00062                         iDigitalClockUniversalTimeOffset += ( EUTOffsetOneSecond );
<a name="l00063"></a>00063                         iDigitalClock-&gt;SetUniversalTimeOffset( iDigitalClockUniversalTimeOffset );
<a name="l00064"></a>00064                         <span class="keywordflow">break</span>;
<a name="l00065"></a>00065                                                                         
<a name="l00066"></a>00066                 <span class="keywordflow">default</span>:
<a name="l00067"></a>00067                         <span class="keywordflow">break</span>;  
<a name="l00068"></a>00068                         }
<a name="l00069"></a>00069                 }
<a name="l00070"></a>00070         <span class="keywordflow">else</span>
<a name="l00071"></a>00071                 {
<a name="l00072"></a>00072                 <span class="comment">// Analogue clock commands</span>
<a name="l00073"></a>00073                 <span class="keywordflow">switch</span>( aCommand )
<a name="l00074"></a>00074                         {
<a name="l00075"></a>00075                                 
<a name="l00076"></a>00076                 <span class="keywordflow">case</span> ETestDo10:
<a name="l00077"></a>00077                         iAnalogClockPosition.iX -= 5;
<a name="l00078"></a>00078                         iAnalogClock-&gt;SetPosition( iAnalogClockPosition );              
<a name="l00079"></a>00079                         <span class="keywordflow">break</span>;
<a name="l00080"></a>00080                         
<a name="l00081"></a>00081                 <span class="keywordflow">case</span> ETestDo11:
<a name="l00082"></a>00082                         iAnalogClockPosition.iX += 5;
<a name="l00083"></a>00083                         iAnalogClock-&gt;SetPosition( iAnalogClockPosition );              
<a name="l00084"></a>00084                         <span class="keywordflow">break</span>;
<a name="l00085"></a>00085                         
<a name="l00086"></a>00086                 <span class="keywordflow">case</span> ETestDo12: 
<a name="l00087"></a>00087                         iAnalogClock-&gt;SetVisible( EFalse );
<a name="l00088"></a>00088                         <span class="keywordflow">break</span>;
<a name="l00089"></a>00089 
<a name="l00090"></a>00090                 <span class="keywordflow">case</span> ETestDo13:
<a name="l00091"></a>00091                         iDigitalClock-&gt;SetVisible( EFalse );
<a name="l00092"></a>00092                         iAnalogClock-&gt;SetVisible( ETrue );
<a name="l00093"></a>00093                         <span class="keywordflow">break</span>;
<a name="l00094"></a>00094 
<a name="l00095"></a>00095                 <span class="keywordflow">case</span> ETestDo14:
<a name="l00096"></a>00096                         iAnalogClockUniversalTimeOffset += ( EUTOffsetOneHour );
<a name="l00097"></a>00097                         iAnalogClock-&gt;SetUniversalTimeOffset( iAnalogClockUniversalTimeOffset );                
<a name="l00098"></a>00098                         <span class="keywordflow">break</span>;
<a name="l00099"></a>00099 
<a name="l00100"></a>00100                 <span class="keywordflow">case</span> ETestDo15:
<a name="l00101"></a>00101                         iAnalogClockUniversalTimeOffset += ( EUTOffsetHalfHour );
<a name="l00102"></a>00102                         iAnalogClock-&gt;SetUniversalTimeOffset( iAnalogClockUniversalTimeOffset );                
<a name="l00103"></a>00103                         <span class="keywordflow">break</span>;
<a name="l00104"></a>00104                         
<a name="l00105"></a>00105                 <span class="keywordflow">case</span> ETestDo16:
<a name="l00106"></a>00106                         iAnalogClockUniversalTimeOffset += ( EUTOffsetOneMinute );
<a name="l00107"></a>00107                         iAnalogClock-&gt;SetUniversalTimeOffset( iAnalogClockUniversalTimeOffset );                
<a name="l00108"></a>00108                         <span class="keywordflow">break</span>;
<a name="l00109"></a>00109                         
<a name="l00110"></a>00110                 <span class="keywordflow">case</span> ETestDo17:
<a name="l00111"></a>00111                         iAnalogClockUniversalTimeOffset += ( EUTOffsetOneSecond );
<a name="l00112"></a>00112                         iAnalogClock-&gt;SetUniversalTimeOffset( iAnalogClockUniversalTimeOffset );                
<a name="l00113"></a>00113                         <span class="keywordflow">break</span>;                  
<a name="l00114"></a>00114                         
<a name="l00115"></a>00115                 <span class="keywordflow">default</span>:
<a name="l00116"></a>00116                         <span class="keywordflow">break</span>;  
<a name="l00117"></a>00117                         }
<a name="l00118"></a>00118                 }
<a name="l00119"></a>00119         }
<a name="l00120"></a>00120 
<a name="l00121"></a>00121 <span class="comment">// Construct an Analog clock</span>
<a name="l00122"></a>00122 <span class="keywordtype">void</span> CExampleAppView::ConstructAnalogClockL()
<a name="l00123"></a>00123         {
<a name="l00124"></a>00124         
<a name="l00125"></a>00125         iAnalogClockPosition.SetXY( 150, 20 );
<a name="l00126"></a>00126         iAnalogClockSize.SetSize( 300, 222 );
<a name="l00127"></a>00127         iAnalogClockUniversalTimeOffset = EUTOffsetBangalore;
<a name="l00128"></a>00128         
<a name="l00129"></a>00129         CWsScreenDevice* screenDevice = iCoeEnv-&gt;ScreenDevice();
<a name="l00130"></a>00130         
<a name="l00131"></a>00131         <span class="comment">// Set the margins for cropping the picture</span>
<a name="l00132"></a>00132         TMargins margins;
<a name="l00133"></a>00133         margins.iLeft = 50;
<a name="l00134"></a>00134         margins.iRight = 50;
<a name="l00135"></a>00135         margins.iTop = 50;
<a name="l00136"></a>00136         margins.iBottom = 50;
<a name="l00137"></a>00137         
<a name="l00138"></a>00138         <span class="comment">// Set shadow for analog clock</span>
<a name="l00139"></a>00139         STimeDeviceShadow  analogClockShadow;
<a name="l00140"></a>00140         analogClockShadow.iIsOn = ETrue;
<a name="l00141"></a>00141         analogClockShadow.iColor = KRgbGray;
<a name="l00142"></a>00142         analogClockShadow.iOffset.SetXY( 3, 3 );
<a name="l00143"></a>00143 
<a name="l00144"></a>00144         <span class="comment">// Load the bitmap image of an analog clock </span>
<a name="l00145"></a>00145         CFbsBitmap* analogClockDial=<span class="keyword">new</span>( ELeave ) CFbsBitmap;
<a name="l00146"></a>00146         CleanupStack::PushL( analogClockDial );
<a name="l00147"></a>00147         User::LeaveIfError( analogClockDial-&gt;Load( KMyMBS, CLOCK ) );
<a name="l00148"></a>00148         analogClockDial-&gt;SetSizeInTwips( screenDevice );
<a name="l00149"></a>00149         
<a name="l00150"></a>00150         
<a name="l00151"></a>00151         CFbsBitmap* analogClockDialMask = <span class="keyword">new</span>( ELeave ) CFbsBitmap;
<a name="l00152"></a>00152         CleanupStack::PushL( analogClockDialMask );
<a name="l00153"></a>00153         User::LeaveIfError( analogClockDialMask-&gt;Load(KMyMBS, CLOCKMSK) );
<a name="l00154"></a>00154         analogClockDialMask-&gt;SetSizeInTwips( screenDevice );
<a name="l00155"></a>00155 
<a name="l00156"></a>00156         <span class="comment">// Create an analog clock</span>
<a name="l00157"></a>00157         iAnalogClock=<span class="keyword">new</span>( ELeave ) RAnalogClock( iAnimDll, Window() );
<a name="l00158"></a>00158         iAnalogClock-&gt;ConstructL( TTimeIntervalSeconds( iAnalogClockUniversalTimeOffset ), iAnalogClockPosition, 
<a name="l00159"></a>00159                                                           iAnalogClockSize, margins, analogClockShadow,
<a name="l00160"></a>00160                                                           analogClockDial-&gt;Handle(), analogClockDialMask-&gt;Handle(), 3 );
<a name="l00161"></a>00161 
<a name="l00162"></a>00162 
<a name="l00163"></a>00163         <span class="comment">// Set the hour hand </span>
<a name="l00164"></a>00164         TAnalogDisplayHand analogClockHourHand(EAnalogDisplayHandOneRevPer12Hours);
<a name="l00165"></a>00165         analogClockHourHand.AddLine(CGraphicsContext::ESolidPen, KRgbBlack, TSize(4, 4), TPoint(0, 10), TPoint(0, -55));
<a name="l00166"></a>00166         iAnalogClock-&gt;AddHandL(analogClockHourHand);
<a name="l00167"></a>00167 
<a name="l00168"></a>00168         <span class="comment">// Set the minute hand</span>
<a name="l00169"></a>00169         TAnalogDisplayHand analogClockMinuteHand(EAnalogDisplayHandOneRevPerHour);
<a name="l00170"></a>00170         analogClockMinuteHand.AddLine(CGraphicsContext::ESolidPen, KRgbBlack, TSize(3, 3), TPoint(0, 10), TPoint(0, -87));
<a name="l00171"></a>00171         iAnalogClock-&gt;AddHandL(analogClockMinuteHand);
<a name="l00172"></a>00172 
<a name="l00173"></a>00173         <span class="comment">// Set the second hand</span>
<a name="l00174"></a>00174         TAnalogDisplayHand analogClockSecondsHand(EAnalogDisplayHandOneRevPerMinute);
<a name="l00175"></a>00175         analogClockSecondsHand.AddLine( CGraphicsContext::ESolidPen, KRgbBlack, TSize(1, 1), TPoint(0, 10), TPoint(0, -90) );
<a name="l00176"></a>00176         iAnalogClock-&gt;AddHandL(analogClockSecondsHand); 
<a name="l00177"></a>00177         
<a name="l00178"></a>00178         CleanupStack::PopAndDestroy(); <span class="comment">// analogClockDialMask</span>
<a name="l00179"></a>00179         CleanupStack::PopAndDestroy(); <span class="comment">// analogClockDial</span>
<a name="l00180"></a>00180                 
<a name="l00181"></a>00181         iAnalogClock-&gt;SetVisible( ETrue );      
<a name="l00182"></a>00182         }
<a name="l00183"></a>00183         
<a name="l00184"></a>00184         
<a name="l00185"></a>00185 <span class="comment">// Construct a Digital clock</span>
<a name="l00186"></a>00186 <span class="keywordtype">void</span> CExampleAppView::ConstructDigitalClockL()
<a name="l00187"></a>00187         {
<a name="l00188"></a>00188         iDigitalClockPosition.SetXY( 200, 100 );
<a name="l00189"></a>00189         iDigitalClockSize.SetSize( 200, 70 );
<a name="l00190"></a>00190         iDigitalClockUniversalTimeOffset = EUTOffsetBangalore;
<a name="l00191"></a>00191                 
<a name="l00192"></a>00192         CWsScreenDevice* screenDevice = iCoeEnv-&gt;ScreenDevice();
<a name="l00193"></a>00193         
<a name="l00194"></a>00194         <span class="comment">// Set the margins for cropping the picture</span>
<a name="l00195"></a>00195         TMargins margins;
<a name="l00196"></a>00196         margins.iLeft = 50;
<a name="l00197"></a>00197         margins.iRight = 50;
<a name="l00198"></a>00198         margins.iTop = 50;
<a name="l00199"></a>00199         margins.iBottom = 50;
<a name="l00200"></a>00200         
<a name="l00201"></a>00201         <span class="comment">// Set shadow for digital clock</span>
<a name="l00202"></a>00202         STimeDeviceShadow digitalClockShadow;
<a name="l00203"></a>00203         digitalClockShadow.iIsOn = ETrue;
<a name="l00204"></a>00204         digitalClockShadow.iColor = KRgbGray;
<a name="l00205"></a>00205         digitalClockShadow.iOffset.SetXY( 3, 3 );
<a name="l00206"></a>00206 
<a name="l00207"></a>00207         iDigitalClock = <span class="keyword">new</span>(ELeave) RDigitalClock( iAnimDll, Window() );
<a name="l00208"></a>00208         iDigitalClock-&gt;ConstructL( TTimeIntervalSeconds( iDigitalClockUniversalTimeOffset ), iDigitalClockPosition, iDigitalClockSize, margins, digitalClockShadow, TRgb(170, 170, 170),<span class="comment">/*1*/</span> 2 );
<a name="l00209"></a>00209 
<a name="l00210"></a>00210         <a class="code" href="class_c_destructable_font.html">CDestructableFont</a>* digitalClockFont = <span class="keyword">new</span>( ELeave ) <a class="code" href="class_c_destructable_font.html">CDestructableFont</a>( screenDevice );
<a name="l00211"></a>00211         CleanupStack::PushL( digitalClockFont );
<a name="l00212"></a>00212         
<a name="l00213"></a>00213         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KArial,<span class="stringliteral">&quot;arial&quot;</span>);
<a name="l00214"></a>00214         TFontSpec digitalClockFontSpec( KArial, screenDevice-&gt;VerticalPixelsToTwips(25) );
<a name="l00215"></a>00215         digitalClockFontSpec.iFontStyle.SetPosture( EPostureItalic );
<a name="l00216"></a>00216         digitalClockFontSpec.iFontStyle.SetStrokeWeight( EStrokeWeightBold );
<a name="l00217"></a>00217         
<a name="l00218"></a>00218         digitalClockFont-&gt;ConstructL( digitalClockFontSpec );
<a name="l00219"></a>00219         
<a name="l00220"></a>00220         <span class="comment">// Set the time format</span>
<a name="l00221"></a>00221         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KDigitalClockTimeFormat,<span class="stringliteral">&quot;%-B%J%:1%T:%S% %+B&quot;</span>);
<a name="l00222"></a>00222         iDigitalClock-&gt;AddTextSectionL( TDigitalDisplayTextSection(digitalClockFont-&gt;Handle(), TRgb(0, 0, 0),
<a name="l00223"></a>00223                                                                                                                                 EDigitalDisplayHorizontalTextAlignmentLeft,
<a name="l00224"></a>00224                                                                                                                                 EDigitalDisplayVerticalTextAlignmentTop,
<a name="l00225"></a>00225                                                                                                                                 30, 15, KDigitalClockTimeFormat) );
<a name="l00226"></a>00226 
<a name="l00227"></a>00227         <span class="comment">// Set the date format</span>
<a name="l00228"></a>00228         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KDigitalClockDateFormat,<span class="stringliteral">&quot;%*E %F%*D %Y&quot;</span>);
<a name="l00229"></a>00229         iDigitalClock-&gt;AddTextSectionL( TDigitalDisplayTextSection(digitalClockFont-&gt;Handle(), TRgb(0, 0, 0),
<a name="l00230"></a>00230                                                                                                                                 EDigitalDisplayHorizontalTextAlignmentLeft,
<a name="l00231"></a>00231                                                                                                                                 EDigitalDisplayVerticalTextAlignmentBottomExclDescent,
<a name="l00232"></a>00232                                                                                                                                 30, 15, KDigitalClockDateFormat) );
<a name="l00233"></a>00233 
<a name="l00234"></a>00234 
<a name="l00235"></a>00235         CleanupStack::PopAndDestroy(); <span class="comment">// digitalClockFont</span>
<a name="l00236"></a>00236         
<a name="l00237"></a>00237         iDigitalClock-&gt;SetBackgroundColor( KRgbDarkGray, KRgbBlack );
<a name="l00238"></a>00238         iDigitalClock-&gt;SetTextColor( KRgbWhite );
<a name="l00239"></a>00239         iDigitalClock-&gt;SetVisible( EFalse );
<a name="l00240"></a>00240         }
<a name="l00241"></a>00241 
<a name="l00242"></a>00242 
<a name="l00243"></a>00243 CExampleAppView::CExampleAppView()
<a name="l00244"></a>00244 : iAnimDll( iCoeEnv-&gt;WsSession() )
<a name="l00245"></a>00245         {}
<a name="l00246"></a>00246 
<a name="l00247"></a>00247 <span class="comment">// Static function wraps up two-phase construction for the view.</span>
<a name="l00248"></a>00248 <a class="code" href="class_c_example_app_view.html">CExampleAppView</a>* CExampleAppView::NewL(<span class="keyword">const</span> TRect&amp; aRect)
<a name="l00249"></a>00249         {
<a name="l00250"></a>00250         <a class="code" href="class_c_example_app_view.html">CExampleAppView</a>* <span class="keyword">self</span> = <span class="keyword">new</span>(ELeave) <a class="code" href="class_c_example_app_view.html">CExampleAppView</a>();
<a name="l00251"></a>00251         CleanupStack::PushL(<span class="keyword">self</span>);
<a name="l00252"></a>00252         <span class="keyword">self</span>-&gt;ConstructL(aRect);
<a name="l00253"></a>00253         CleanupStack::Pop();
<a name="l00254"></a>00254         <span class="keywordflow">return</span> <span class="keyword">self</span>;
<a name="l00255"></a>00255         }
<a name="l00256"></a>00256 
<a name="l00257"></a>00257 CExampleAppView::~CExampleAppView()
<a name="l00258"></a>00258         {
<a name="l00259"></a>00259         <span class="keyword">delete</span> iTextBuffer;
<a name="l00260"></a>00260         <span class="keyword">delete</span> iAnalogClock;
<a name="l00261"></a>00261         <span class="keyword">delete</span> iDigitalClock;
<a name="l00262"></a>00262                 
<a name="l00263"></a>00263         iAnimDll.Close();
<a name="l00264"></a>00264         }
<a name="l00265"></a>00265 
<a name="l00266"></a>00266 <span class="comment">// Standard initialisation for a window-owning control.</span>
<a name="l00267"></a>00267 <span class="keywordtype">void</span> CExampleAppView::ConstructL( <span class="keyword">const</span> TRect&amp; aRect )
<a name="l00268"></a>00268     {
<a name="l00269"></a>00269         <span class="comment">// Fetch the text from the resource file.</span>
<a name="l00270"></a>00270         iTextBuffer = iEikonEnv-&gt;AllocReadResourceL( R_TITLE_TEXT_CLOCK_EXAMPLE );
<a name="l00271"></a>00271 
<a name="l00272"></a>00272    
<a name="l00273"></a>00273         <span class="comment">// Create the window owned by the view.</span>
<a name="l00274"></a>00274         CreateWindowL();
<a name="l00275"></a>00275         <span class="comment">// Set the view&#39;s size and position.</span>
<a name="l00276"></a>00276         SetRect(aRect);
<a name="l00277"></a>00277         <span class="comment">// Activate the view.</span>
<a name="l00278"></a>00278         ActivateL();
<a name="l00279"></a>00279         
<a name="l00280"></a>00280         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KClockDll,<span class="stringliteral">&quot;CLOCKA.DLL&quot;</span>);
<a name="l00281"></a>00281         User::LeaveIfError( iAnimDll.Load(KClockDll) );
<a name="l00282"></a>00282         
<a name="l00283"></a>00283         ConstructDigitalClockL();
<a name="l00284"></a>00284         ConstructAnalogClockL();
<a name="l00285"></a>00285         }
<a name="l00286"></a>00286 
<a name="l00287"></a>00287 <span class="comment">// Draws the view with a simple outline rectangle and then</span>
<a name="l00288"></a>00288 <span class="comment">// draws the welcome text centred.</span>
<a name="l00289"></a>00289 <span class="keywordtype">void</span> CExampleAppView::Draw(<span class="keyword">const</span> TRect&amp; <span class="comment">/*aRect*/</span>)<span class="keyword"> const</span>
<a name="l00290"></a>00290 <span class="keyword">        </span>{
<a name="l00291"></a>00291         <span class="keyword">const</span> TRect rect = Rect();
<a name="l00292"></a>00292         CWindowGc&amp; gc = SystemGc();
<a name="l00293"></a>00293                 
<a name="l00294"></a>00294         <span class="comment">// Font used for drawing text</span>
<a name="l00295"></a>00295         <span class="keyword">const</span> CFont*     fontUsed;
<a name="l00296"></a>00296         <span class="comment">// Use the title font supplied by the UI</span>
<a name="l00297"></a>00297         fontUsed = iEikonEnv-&gt;TitleFont();
<a name="l00298"></a>00298         gc.UseFont( fontUsed );
<a name="l00299"></a>00299 
<a name="l00300"></a>00300         <span class="comment">// Draw the title text.</span>
<a name="l00301"></a>00301         gc.DrawText( *iTextBuffer, rect, 
<a name="l00302"></a>00302                                  0+ fontUsed-&gt;HeightInPixels(), 
<a name="l00303"></a>00303                                  CGraphicsContext::ECenter, 0 );
<a name="l00304"></a>00304         
<a name="l00305"></a>00305         gc.DiscardFont();
<a name="l00306"></a>00306         }
<a name="l00307"></a>00307 
<a name="l00308"></a>00308 
<a name="l00309"></a>00309 CDestructableFont::CDestructableFont(CWsScreenDevice* aScreenDevice)
<a name="l00310"></a>00310         :iScreenDevice(aScreenDevice)
<a name="l00311"></a>00311         {}
<a name="l00312"></a>00312 
<a name="l00313"></a>00313 <span class="keywordtype">void</span> CDestructableFont::ConstructL(<span class="keyword">const</span> TFontSpec&amp; aFontSpec)
<a name="l00314"></a>00314         {
<a name="l00315"></a>00315         User::LeaveIfError(iScreenDevice-&gt;GetNearestFontInTwips((CFont*&amp;)iFont, aFontSpec));
<a name="l00316"></a>00316         }
<a name="l00317"></a>00317 
<a name="l00318"></a>00318 CDestructableFont::~CDestructableFont()
<a name="l00319"></a>00319         {
<a name="l00320"></a>00320         iScreenDevice-&gt;ReleaseFont(iFont); 
<a name="l00321"></a>00321         }
<a name="l00322"></a>00322 
<a name="l00323"></a>00323 TInt CDestructableFont::Handle()<span class="keyword"> const</span>
<a name="l00324"></a>00324 <span class="keyword">        </span>{
<a name="l00325"></a>00325         <span class="keywordflow">return</span> iFont-&gt;Handle();
<a name="l00326"></a>00326         }
</pre></div>
<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
     <p class="copyright">Copyright &#169;2010 Nokia Corporation and/or its subsidiary(-ies).<br /> All rights
reserved. Unless otherwise stated, these materials are provided under the terms of the <a href=" http://www.eclipse.org/legal/epl-v10.html"> Eclipse Public License
v1.0</a>.</p> 
   </div>
  </div>
  <?php include_once (CURRENT_SKIN_PATH.'/sdl_footer.html'); ?>
 </body>
</html>
