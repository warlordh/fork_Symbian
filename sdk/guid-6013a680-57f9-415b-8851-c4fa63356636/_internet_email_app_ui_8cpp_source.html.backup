<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TB9.2 Example Applications: examples/ForumNokia/InternetEmail/src/InternetEmailAppUi.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
<link type="text/css" rel="stylesheet" href="css/common.css" media="screen"/>
<link type="text/css" rel="stylesheet" href="css/sdl.css" media="screen"/>

<!--[if IE]>
<link href="css/iefix.css" rel="stylesheet" type="text/css" media="screen" />
<![endif]-->
</head>
<body class="kernelguide">
    
     <?php include_once (CURRENT_SKIN_PATH.'/sdl_header.html'); ?>
  <div id="sdl_container">
   <div id="leftMenu">
    <div id="expandcontractdiv">
     <a id="collapseTree" href="javascript:tree.collapseAll()">
      Collapse all
     </a>
     <a id="index" href="index.html">
      Symbian^3 Product Developer Library
     </a>
    </div>
    <iframe style="border:none" height="800" width="300" src="index-toc.html"></iframe>
<div id="treeDiv1">
     &#160;
    </div>
    <script type="text/javascript">
     var currentIconMode = 0;
	YAHOO.util.Event.onDOMReady(buildTree, this,true);
    </script>
   </div>
   <div id="sdl_content">
<!-- Generated by Doxygen 1.6.2 -->
<h1>examples/ForumNokia/InternetEmail/src/InternetEmailAppUi.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright © 2008 Nokia Corporation.</span>
<a name="l00003"></a>00003 <span class="comment"> */</span>
<a name="l00004"></a>00004 
<a name="l00005"></a>00005 
<a name="l00006"></a>00006 <span class="comment">// INCLUDE FILES</span>
<a name="l00007"></a>00007 <span class="preprocessor">#include &quot;InternetEmailAppUi.h&quot;</span>
<a name="l00008"></a>00008 <span class="preprocessor">#include &quot;InternetEmailContainer.h&quot;</span>
<a name="l00009"></a>00009 <span class="preprocessor">#include &quot;InternetEmailDocument.h&quot;</span>
<a name="l00010"></a>00010 <span class="preprocessor">#include &quot;InternetEmailEngine.h&quot;</span>
<a name="l00011"></a>00011 
<a name="l00012"></a>00012 <span class="preprocessor">#include &lt;eikmenup.h&gt;</span>        <span class="comment">// for Menupanes</span>
<a name="l00013"></a>00013 <span class="preprocessor">#include &lt;stringloader.h&gt;</span>    <span class="comment">// for easy resource usage</span>
<a name="l00014"></a>00014 
<a name="l00015"></a>00015 <span class="preprocessor">#include &lt;InternetEmail.rsg&gt;</span>
<a name="l00016"></a>00016 <span class="preprocessor">#include &quot;internetemail.hrh&quot;</span>
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 <span class="preprocessor">#include &lt;avkon.hrh&gt;</span>
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 <span class="comment">// ================= MEMBER FUNCTIONS =======================</span>
<a name="l00021"></a>00021 <span class="comment">//</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="comment">// ----------------------------------------------------------</span>
<a name="l00024"></a>00024 <span class="comment">// CInternetEmailAppUi::ConstructL()</span>
<a name="l00025"></a>00025 <span class="comment">//  EPOC two phased constructor</span>
<a name="l00026"></a>00026 <span class="comment">// ----------------------------------------------------------</span>
<a name="l00027"></a>00027 <span class="comment">//</span>
<a name="l00028"></a><a class="code" href="class_c_internet_email_app_ui.html#a1baaf466cea45f2c58c562c79584e41a">00028</a> <span class="keywordtype">void</span> <a class="code" href="class_c_internet_email_app_ui.html#a1baaf466cea45f2c58c562c79584e41a">CInternetEmailAppUi::ConstructL</a>()
<a name="l00029"></a>00029     {
<a name="l00030"></a>00030 
<a name="l00031"></a>00031     BaseConstructL(CAknAppUi::EAknEnableSkin);
<a name="l00032"></a>00032 
<a name="l00033"></a>00033     iModel = CInternetEmailEngine::NewL(*<span class="keyword">this</span>); <span class="comment">//Must be first in this solution</span>
<a name="l00034"></a>00034     iAppContainer = <span class="keyword">new</span> (ELeave) <a class="code" href="class_c_internet_email_container.html">CInternetEmailContainer</a>;
<a name="l00035"></a>00035     iAppContainer-&gt;SetMopParent(<span class="keyword">this</span>);
<a name="l00036"></a>00036     iAppContainer-&gt;<a class="code" href="class_c_internet_email_container.html#ae196768eeb8245d417583aeaf5a56632">ConstructL</a>( ClientRect(), <span class="keyword">this</span> );
<a name="l00037"></a>00037     AddToStackL( iAppContainer );
<a name="l00038"></a>00038     }
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 <span class="comment">// ----------------------------------------------------</span>
<a name="l00041"></a>00041 <span class="comment">// CInternetEmailAppUi::~CInternetEmailAppUi()</span>
<a name="l00042"></a>00042 <span class="comment">// ----------------------------------------------------</span>
<a name="l00043"></a>00043 <span class="comment">//</span>
<a name="l00044"></a><a class="code" href="class_c_internet_email_app_ui.html#aedaa6c8570b6f86e2d8bb2fc0f4239dc">00044</a> <a class="code" href="class_c_internet_email_app_ui.html#aedaa6c8570b6f86e2d8bb2fc0f4239dc">CInternetEmailAppUi::~CInternetEmailAppUi</a>()
<a name="l00045"></a>00045     {
<a name="l00046"></a>00046     <span class="keyword">delete</span> iModel;
<a name="l00047"></a>00047     <span class="keyword">delete</span> iWaitDialog;
<a name="l00048"></a>00048 
<a name="l00049"></a>00049     <span class="keywordflow">if</span> (iAppContainer)
<a name="l00050"></a>00050         {
<a name="l00051"></a>00051         RemoveFromStack( iAppContainer );
<a name="l00052"></a>00052         <span class="keyword">delete</span> iAppContainer;
<a name="l00053"></a>00053         }
<a name="l00054"></a>00054    }
<a name="l00055"></a>00055 
<a name="l00056"></a>00056 <span class="comment">// -------------------------------------------------------</span>
<a name="l00057"></a>00057 <span class="comment">// CInternetEmailDocument* CInternetEmailAppUi::Document()</span>
<a name="l00058"></a>00058 <span class="comment">// -------------------------------------------------------</span>
<a name="l00059"></a>00059 <span class="comment">//</span>
<a name="l00060"></a>00060 <a class="code" href="class_c_internet_email_document.html">CInternetEmailDocument</a>* CInternetEmailAppUi::Document()
<a name="l00061"></a>00061     {
<a name="l00062"></a>00062     <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="class_c_internet_email_document.html">CInternetEmailDocument</a>*<span class="keyword">&gt;</span>(iDocument);
<a name="l00063"></a>00063     }
<a name="l00064"></a>00064 
<a name="l00065"></a>00065 <span class="comment">// -------------------------------------------------------------------------------</span>
<a name="l00066"></a>00066 <span class="comment">// CInternetEmailAppUi::DynInitMenuPaneL(TInt aResourceId,CEikMenuPane* aMenuPane)</span>
<a name="l00067"></a>00067 <span class="comment">//  This function is called by the EIKON framework just before it displays</span>
<a name="l00068"></a>00068 <span class="comment">//  a menu pane. Its default implementation is empty, and by overriding it,</span>
<a name="l00069"></a>00069 <span class="comment">//  the application can set the state of menu items dynamically according</span>
<a name="l00070"></a>00070 <span class="comment">//  to the state of application data.</span>
<a name="l00071"></a>00071 <span class="comment">//</span>
<a name="l00072"></a>00072 <span class="comment">//  Here we argue that user must first select one protocol to use before</span>
<a name="l00073"></a>00073 <span class="comment">//  starting the application. We do this buy dimming the menupane choices</span>
<a name="l00074"></a>00074 <span class="comment">//  that should not be possible in different states. We also dim the choices</span>
<a name="l00075"></a>00075 <span class="comment">//  to fetch mail until MsvServer session is ready.</span>
<a name="l00076"></a>00076 <span class="comment">// -------------------------------------------------------------------------------</span>
<a name="l00077"></a>00077 <span class="comment">//</span>
<a name="l00078"></a>00078 <span class="keywordtype">void</span> CInternetEmailAppUi::DynInitMenuPaneL(
<a name="l00079"></a>00079     TInt aResourceId,CEikMenuPane* aMenuPane)
<a name="l00080"></a>00080     {
<a name="l00081"></a>00081     <span class="keywordflow">if</span> (aResourceId == R_INTERNETEMAIL_MENU)
<a name="l00082"></a>00082         {
<a name="l00083"></a>00083         <span class="keywordflow">if</span> (iModel-&gt;IsProtocolSet())
<a name="l00084"></a>00084             {
<a name="l00085"></a>00085             <span class="keywordflow">if</span>( iModel-&gt;IsEngineReady() )
<a name="l00086"></a>00086                 {
<a name="l00087"></a>00087                 aMenuPane-&gt;SetItemDimmed(EInternetEmailCmdProtocol, ETrue);
<a name="l00088"></a>00088                 aMenuPane-&gt;SetItemDimmed(EInternetEmailCmdFetch, EFalse);
<a name="l00089"></a>00089                 }
<a name="l00090"></a>00090             <span class="keywordflow">else</span> <span class="comment">//if MsvServer session is not ready but protocol is selected</span>
<a name="l00091"></a>00091                 {
<a name="l00092"></a>00092                 aMenuPane-&gt;SetItemDimmed(EInternetEmailCmdProtocol, EFalse);
<a name="l00093"></a>00093                 aMenuPane-&gt;SetItemDimmed(EInternetEmailCmdFetch, EFalse);
<a name="l00094"></a>00094                 }
<a name="l00095"></a>00095 
<a name="l00096"></a>00096             }
<a name="l00097"></a>00097         <span class="keywordflow">else</span> <span class="comment">//we dim all if user have not picked the protocol to use.</span>
<a name="l00098"></a>00098             {
<a name="l00099"></a>00099             aMenuPane-&gt;SetItemDimmed(EInternetEmailCmdProtocol, EFalse);
<a name="l00100"></a>00100             aMenuPane-&gt;SetItemDimmed(EInternetEmailCmdFetch, ETrue);
<a name="l00101"></a>00101             }
<a name="l00102"></a>00102         }
<a name="l00103"></a>00103     }
<a name="l00104"></a>00104 
<a name="l00105"></a>00105 <span class="comment">// ----------------------------------------------------</span>
<a name="l00106"></a>00106 <span class="comment">// CInternetEmailAppUi::HandleKeyEventL(</span>
<a name="l00107"></a>00107 <span class="comment">//   const TKeyEvent&amp; aKeyEvent,TEventCode /*aType*/)</span>
<a name="l00108"></a>00108 <span class="comment">// ----------------------------------------------------</span>
<a name="l00109"></a>00109 <span class="comment">//</span>
<a name="l00110"></a>00110 TKeyResponse CInternetEmailAppUi::HandleKeyEventL(
<a name="l00111"></a>00111     <span class="keyword">const</span> TKeyEvent&amp; <span class="comment">/*aKeyEvent*/</span>,TEventCode <span class="comment">/*aType*/</span>)
<a name="l00112"></a>00112     {
<a name="l00113"></a>00113     <span class="keywordflow">return</span> EKeyWasNotConsumed;
<a name="l00114"></a>00114     }
<a name="l00115"></a>00115 
<a name="l00116"></a>00116 <span class="comment">// -----------------------------------------------------</span>
<a name="l00117"></a>00117 <span class="comment">// CInternetEmailAppUi::HandleCommandL(TInt aCommand)</span>
<a name="l00118"></a>00118 <span class="comment">//  Here we handle the commands user interface offers to</span>
<a name="l00119"></a>00119 <span class="comment">//  user.</span>
<a name="l00120"></a>00120 <span class="comment">// -----------------------------------------------------</span>
<a name="l00121"></a>00121 <span class="comment">//</span>
<a name="l00122"></a>00122 <span class="keywordtype">void</span> CInternetEmailAppUi::HandleCommandL(TInt aCommand)
<a name="l00123"></a>00123     {
<a name="l00124"></a>00124     <span class="keywordflow">switch</span> ( aCommand )
<a name="l00125"></a>00125         {
<a name="l00126"></a>00126         <span class="keywordflow">case</span> EAknSoftkeyExit:
<a name="l00127"></a>00127         <span class="keywordflow">case</span> EEikCmdExit:
<a name="l00128"></a>00128             {
<a name="l00129"></a>00129             Exit();
<a name="l00130"></a>00130             }
<a name="l00131"></a>00131             <span class="keywordflow">break</span>;
<a name="l00132"></a>00132 
<a name="l00133"></a>00133         <span class="keywordflow">case</span> EInternetEmailCmdFetch:
<a name="l00134"></a>00134             {
<a name="l00135"></a>00135             <span class="comment">// 1. first we initiate asynchornous mailcommand</span>
<a name="l00136"></a>00136             iModel-&gt;RemoteFetchL();
<a name="l00137"></a>00137 
<a name="l00138"></a>00138             <span class="comment">// 2. then we show modal wait dialog to user</span>
<a name="l00139"></a>00139             iWaitDialog = <span class="keyword">new</span> (ELeave) CAknWaitDialog(
<a name="l00140"></a>00140             reinterpret_cast&lt;CEikDialog**&gt; (&amp;iWaitDialog));
<a name="l00141"></a>00141             iWaitDialog-&gt;SetCallback(<span class="keyword">this</span>);
<a name="l00142"></a>00142             iWaitDialog-&gt;ExecuteLD( R_WAIT_NOTE ); <span class="comment">//resource based dialog</span>
<a name="l00143"></a>00143             }
<a name="l00144"></a>00144             <span class="keywordflow">break</span>;
<a name="l00145"></a>00145 
<a name="l00146"></a>00146         <span class="keywordflow">case</span> EInternetEmailCmdSetPop:
<a name="l00147"></a>00147             {
<a name="l00148"></a>00148             <span class="keywordflow">if</span>( !iModel-&gt;CheckIfExistsL( EProtocolPop3 ) )
<a name="l00149"></a>00149                 {
<a name="l00150"></a>00150                 ShowNoteL(R_NO_POP3_DEFINED);
<a name="l00151"></a>00151                 }
<a name="l00152"></a>00152             <span class="keywordflow">else</span>
<a name="l00153"></a>00153                 {
<a name="l00154"></a>00154                 iModel-&gt;SetProtocolL( EProtocolPop3 );
<a name="l00155"></a>00155                 }
<a name="l00156"></a>00156             }
<a name="l00157"></a>00157             <span class="keywordflow">break</span>;
<a name="l00158"></a>00158 
<a name="l00159"></a>00159         <span class="keywordflow">case</span> EInternetEmailCmdSetImap:
<a name="l00160"></a>00160             {
<a name="l00161"></a>00161             <span class="keywordflow">if</span>( !iModel-&gt;CheckIfExistsL( EProtocolImap4 ) )
<a name="l00162"></a>00162                 {
<a name="l00163"></a>00163                 ShowNoteL(R_NO_IMAP4_DEFINED);
<a name="l00164"></a>00164                 }
<a name="l00165"></a>00165             <span class="keywordflow">else</span>
<a name="l00166"></a>00166                 {
<a name="l00167"></a>00167                 iModel-&gt;SetProtocolL( EProtocolImap4 );
<a name="l00168"></a>00168                 }
<a name="l00169"></a>00169             }
<a name="l00170"></a>00170             <span class="keywordflow">break</span>;
<a name="l00171"></a>00171 
<a name="l00172"></a>00172         <span class="keywordflow">default</span>:
<a name="l00173"></a>00173             <span class="keywordflow">break</span>;
<a name="l00174"></a>00174         }
<a name="l00175"></a>00175     }
<a name="l00176"></a>00176 
<a name="l00177"></a>00177 <span class="comment">// --------------------------------------------------</span>
<a name="l00178"></a>00178 <span class="comment">// CInternetEmailEngine* CInternetEmailAppUi::Model()</span>
<a name="l00179"></a>00179 <span class="comment">// --------------------------------------------------</span>
<a name="l00180"></a>00180 <span class="comment">//</span>
<a name="l00181"></a>00181 <a class="code" href="class_c_internet_email_engine.html">CInternetEmailEngine</a>* CInternetEmailAppUi::Model()
<a name="l00182"></a>00182     {
<a name="l00183"></a>00183     <span class="keywordflow">return</span> iModel;
<a name="l00184"></a>00184     }
<a name="l00185"></a>00185 
<a name="l00186"></a>00186 
<a name="l00187"></a>00187 <span class="comment">// -------------------------------------------------</span>
<a name="l00188"></a>00188 <span class="comment">// void CInternetEmailAppUi::ShowNote( TInt aResId )</span>
<a name="l00189"></a>00189 <span class="comment">//  helper method which creates CAknInformation note</span>
<a name="l00190"></a>00190 <span class="comment">//  from localized resource files with given res.id.</span>
<a name="l00191"></a>00191 <span class="comment">// -------------------------------------------------</span>
<a name="l00192"></a>00192 <span class="comment">//</span>
<a name="l00193"></a>00193 <span class="keywordtype">void</span> CInternetEmailAppUi::ShowNoteL( <span class="keyword">const</span> TInt &amp;aResId )<span class="keyword"> const</span>
<a name="l00194"></a>00194 <span class="keyword">    </span>{
<a name="l00195"></a>00195         HBufC* textResource = StringLoader::LoadLC( aResId );
<a name="l00196"></a>00196         CAknInformationNote* informationNote = <span class="keyword">new</span> (ELeave) CAknInformationNote;
<a name="l00197"></a>00197         informationNote-&gt;ExecuteLD(textResource-&gt;Des());
<a name="l00198"></a>00198         CleanupStack::PopAndDestroy(textResource);
<a name="l00199"></a>00199     }
<a name="l00200"></a>00200 
<a name="l00201"></a>00201 <span class="comment">// --------------------------------------------------------------------------------</span>
<a name="l00202"></a>00202 <span class="comment">// CInternetEmailAppUi::HandleEngineChangedEventL(TInternetEmailEngineEvent aEvent)</span>
<a name="l00203"></a>00203 <span class="comment">//  From MInternetEmailEngineObserver.</span>
<a name="l00204"></a>00204 <span class="comment">//  Callback which is called from CInternetEmailEngine when email view</span>
<a name="l00205"></a>00205 <span class="comment">//  needs to be updated as model have changed. This event is also used to</span>
<a name="l00206"></a>00206 <span class="comment">//  close wait dialog.</span>
<a name="l00207"></a>00207 <span class="comment">// --------------------------------------------------------------------------------</span>
<a name="l00208"></a>00208 <span class="comment">//</span>
<a name="l00209"></a>00209 <span class="keywordtype">void</span> CInternetEmailAppUi::HandleEngineChangedEventL(TInternetEmailEngineEvent aEvent)
<a name="l00210"></a>00210     {
<a name="l00211"></a>00211     <span class="keywordflow">switch</span>(aEvent)
<a name="l00212"></a>00212         {
<a name="l00213"></a>00213         <span class="keywordflow">case</span> ERemoteCountChanged:
<a name="l00214"></a>00214             {
<a name="l00215"></a>00215             <span class="keywordflow">if</span>( iWaitDialog ) <span class="comment">//signal waitdialog to finish</span>
<a name="l00216"></a>00216                 {
<a name="l00217"></a>00217                 iWaitDialog-&gt;ProcessFinishedL();
<a name="l00218"></a>00218                 <span class="keyword">delete</span> iWaitDialog;
<a name="l00219"></a>00219                 iWaitDialog = NULL;
<a name="l00220"></a>00220                 }
<a name="l00221"></a>00221             iAppContainer-&gt;<a class="code" href="class_c_internet_email_container.html#a80c4ff6aab56e22e050cd48003be55c0">MailCountChange</a>();
<a name="l00222"></a>00222             iAppContainer-&gt;DrawDeferred();
<a name="l00223"></a>00223             }
<a name="l00224"></a>00224             <span class="keywordflow">break</span>;
<a name="l00225"></a>00225         }
<a name="l00226"></a>00226     }
<a name="l00227"></a>00227 
<a name="l00228"></a>00228 <span class="comment">// --------------------------------------------------------------</span>
<a name="l00229"></a>00229 <span class="comment">// void CInternetEmailAppUi::DialogDismissedL(TInt /*aButtonId*/)</span>
<a name="l00230"></a>00230 <span class="comment">//  From MProgressDialogCallback.</span>
<a name="l00231"></a>00231 <span class="comment">//  Callback which is called from CAknWaitDialog if</span>
<a name="l00232"></a>00232 <span class="comment">//  user has dismissed the wait note.</span>
<a name="l00233"></a>00233 <span class="comment">// --------------------------------------------------------------</span>
<a name="l00234"></a>00234 <span class="comment">//</span>
<a name="l00235"></a>00235 <span class="keywordtype">void</span> CInternetEmailAppUi::DialogDismissedL(TInt <span class="comment">/*aButtonId*/</span>)
<a name="l00236"></a>00236     {
<a name="l00237"></a>00237     iModel-&gt;CancelOperation();
<a name="l00238"></a>00238     }
<a name="l00239"></a>00239 
<a name="l00240"></a>00240 <span class="comment">// End of File</span>
</pre></div>
<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
     <p class="copyright">Copyright &#169;2010 Nokia Corporation and/or its subsidiary(-ies).<br /> All rights
reserved. Unless otherwise stated, these materials are provided under the terms of the <a href=" http://www.eclipse.org/legal/epl-v10.html"> Eclipse Public License
v1.0</a>.</p> 
   </div>
  </div>
  <?php include_once (CURRENT_SKIN_PATH.'/sdl_footer.html'); ?>
 </body>
</html>
