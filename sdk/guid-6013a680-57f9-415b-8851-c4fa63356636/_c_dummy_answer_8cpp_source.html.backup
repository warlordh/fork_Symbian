<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TB9.2 Example Applications: examples/Telephony/ETel3rdPartyExample/IncomingCalls/CDummyAnswer.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
<link type="text/css" rel="stylesheet" href="css/common.css" media="screen"/>
<link type="text/css" rel="stylesheet" href="css/sdl.css" media="screen"/>

<!--[if IE]>
<link href="css/iefix.css" rel="stylesheet" type="text/css" media="screen" />
<![endif]-->
</head>
<body class="kernelguide">
    
     <?php include_once (CURRENT_SKIN_PATH.'/sdl_header.html'); ?>
  <div id="sdl_container">
   <div id="leftMenu">
    <div id="expandcontractdiv">
     <a id="collapseTree" href="javascript:tree.collapseAll()">
      Collapse all
     </a>
     <a id="index" href="index.html">
      Symbian^3 Product Developer Library
     </a>
    </div>
    <iframe style="border:none" height="800" width="300" src="index-toc.html"></iframe>
<div id="treeDiv1">
     &#160;
    </div>
    <script type="text/javascript">
     var currentIconMode = 0;
	YAHOO.util.Event.onDOMReady(buildTree, this,true);
    </script>
   </div>
   <div id="sdl_content">
<!-- Generated by Doxygen 1.6.2 -->
<h1>examples/Telephony/ETel3rdPartyExample/IncomingCalls/CDummyAnswer.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).</span>
<a name="l00002"></a>00002 <span class="comment">// All rights reserved.</span>
<a name="l00003"></a>00003 <span class="comment">// This component and the accompanying materials are made available</span>
<a name="l00004"></a>00004 <span class="comment">// under the terms of &quot;Eclipse Public License v1.0&quot;</span>
<a name="l00005"></a>00005 <span class="comment">// which accompanies this distribution, and is available</span>
<a name="l00006"></a>00006 <span class="comment">// at the URL &quot;http://www.eclipse.org/legal/epl-v10.html&quot;.</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Initial Contributors:</span>
<a name="l00009"></a>00009 <span class="comment">// Nokia Corporation - initial contribution.</span>
<a name="l00010"></a>00010 <span class="comment">//</span>
<a name="l00011"></a>00011 <span class="comment">// Contributors:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// Description:</span>
<a name="l00014"></a>00014 <span class="comment">//</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 <span class="preprocessor">#include &quot;CDummyAnswer.h&quot;</span>
<a name="l00017"></a>00017 <span class="preprocessor">#include &quot;CMainMenu.h&quot;</span>
<a name="l00018"></a>00018 
<a name="l00025"></a><a class="code" href="class_c_dummy_answer.html#a74db5d348533fbb018e28ba705d5988c">00025</a> <a class="code" href="class_c_dummy_answer.html">CDummyAnswer</a>* <a class="code" href="class_c_dummy_answer.html#a74db5d348533fbb018e28ba705d5988c">CDummyAnswer::NewL</a>(<a class="code" href="class_m_exec_async.html">MExecAsync</a>* aController)
<a name="l00026"></a>00026         {
<a name="l00027"></a>00027         <a class="code" href="class_c_dummy_answer.html">CDummyAnswer</a>* <span class="keyword">self</span> = <span class="keyword">new</span>(ELeave) <a class="code" href="class_c_dummy_answer.html">CDummyAnswer</a>(aController);
<a name="l00028"></a>00028         CleanupStack::PushL(<span class="keyword">self</span>);
<a name="l00029"></a>00029         <span class="keyword">self</span>-&gt;ConstructL();
<a name="l00030"></a>00030         CleanupStack::Pop(<span class="keyword">self</span>);
<a name="l00031"></a>00031         <span class="keywordflow">return</span> <span class="keyword">self</span>;
<a name="l00032"></a>00032         }
<a name="l00033"></a>00033 
<a name="l00039"></a>00039 CDummyAnswer::CDummyAnswer(<a class="code" href="class_m_exec_async.html">MExecAsync</a>* aController)
<a name="l00040"></a>00040         : CActive(EPriorityStandard),
<a name="l00041"></a>00041           iController(aController)
<a name="l00042"></a>00042         {
<a name="l00043"></a>00043         iConsole = iController-&gt;<a class="code" href="class_m_exec_controller.html#ac86eecb3d6f41aa1469a455cd8f4816b">GConsole</a>();
<a name="l00044"></a>00044         CActiveScheduler::Add(<span class="keyword">this</span>);
<a name="l00045"></a>00045         }
<a name="l00046"></a>00046 
<a name="l00050"></a>00050 <span class="keywordtype">void</span> CDummyAnswer::ExampleComplete()
<a name="l00051"></a>00051         {
<a name="l00052"></a>00052         iController-&gt;<a class="code" href="class_m_exec_async.html#a4ec0d04f9238aff4aaf705e276662575">ExecComplete</a>(KNotType);
<a name="l00053"></a>00053         }
<a name="l00054"></a>00054 
<a name="l00058"></a>00058 <span class="keywordtype">void</span> CDummyAnswer::ConstructL()
<a name="l00059"></a>00059         {
<a name="l00060"></a>00060         <span class="comment">// Creates a thread-relative timer</span>
<a name="l00061"></a>00061         User::LeaveIfError(iTimer.CreateLocal());
<a name="l00062"></a>00062         iFirstTime = ETrue;
<a name="l00063"></a>00063         }
<a name="l00064"></a>00064 
<a name="l00068"></a>00068 <span class="keywordtype">void</span> CDummyAnswer::ResetFirstTime()
<a name="l00069"></a>00069         {
<a name="l00070"></a>00070         iFirstTime = ETrue;
<a name="l00071"></a>00071         }
<a name="l00072"></a>00072 
<a name="l00077"></a><a class="code" href="class_c_dummy_answer.html#aef198015af529058e26b4b7a384e7bb2">00077</a> <a class="code" href="class_c_dummy_answer.html#aef198015af529058e26b4b7a384e7bb2">CDummyAnswer::~CDummyAnswer</a>()
<a name="l00078"></a>00078         {
<a name="l00079"></a>00079         Cancel();
<a name="l00080"></a>00080         iTimer.Close();
<a name="l00081"></a>00081         }
<a name="l00082"></a>00082 
<a name="l00086"></a><a class="code" href="class_c_dummy_answer.html#a383bb67b8bb89e00d5f0eccd88a649cf">00086</a> <span class="keywordtype">void</span> <a class="code" href="class_c_dummy_answer.html#a383bb67b8bb89e00d5f0eccd88a649cf">CDummyAnswer::StartCount</a>(TTimeIntervalMicroSeconds32 aDelay)
<a name="l00087"></a>00087         {
<a name="l00088"></a>00088         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KDummyAnswerPanic, <span class="stringliteral">&quot;CDummyAnswer&quot;</span>);
<a name="l00089"></a>00089         __ASSERT_ALWAYS(!IsActive(), User::Panic(KDummyAnswerPanic, 1));
<a name="l00090"></a>00090         iTimer.After(iStatus, aDelay);
<a name="l00091"></a>00091         SetActive();
<a name="l00092"></a>00092         }
<a name="l00093"></a>00093 
<a name="l00098"></a>00098 <span class="keywordtype">void</span> CDummyAnswer::RunL()
<a name="l00099"></a>00099         {
<a name="l00100"></a>00100         <span class="keywordflow">if</span> (iStatus != KErrNone)
<a name="l00101"></a>00101                 {
<a name="l00102"></a>00102                 iConsole-&gt;Printf(KError);
<a name="l00103"></a>00103                 
<a name="l00104"></a>00104                 <span class="comment">// Print the error status code</span>
<a name="l00105"></a>00105                 iConsole-&gt;Printf(_L(<span class="stringliteral">&quot;%d\n&quot;</span>), iStatus.Int());
<a name="l00106"></a>00106                 }
<a name="l00107"></a>00107         <span class="keywordflow">else</span>
<a name="l00108"></a>00108                 {
<a name="l00109"></a>00109                 <span class="comment">// Print console output message if there is no error</span>
<a name="l00110"></a>00110                 iConsole-&gt;ClearScreen();
<a name="l00111"></a>00111                 iConsole-&gt;Printf(KMenuMsg);
<a name="l00112"></a>00112                 iConsole-&gt;Printf(KHangupMsg);
<a name="l00113"></a>00113                 iConsole-&gt;Printf(_L(<span class="stringliteral">&quot;Call Duration %d seconds\n&quot;</span>), iCount);
<a name="l00114"></a>00114                 iCount++;
<a name="l00115"></a>00115                 <a class="code" href="class_c_dummy_answer.html#a383bb67b8bb89e00d5f0eccd88a649cf">StartCount</a>(1000000);
<a name="l00116"></a>00116                 }
<a name="l00117"></a>00117         <span class="keywordflow">if</span> (iFirstTime)
<a name="l00118"></a>00118                 {
<a name="l00119"></a>00119                 iFirstTime = EFalse;
<a name="l00120"></a>00120                 ExampleComplete();
<a name="l00121"></a>00121                 }
<a name="l00122"></a>00122         }
<a name="l00123"></a>00123 
<a name="l00127"></a>00127 <span class="keywordtype">void</span> CDummyAnswer::DoCancel()
<a name="l00128"></a>00128         {
<a name="l00129"></a>00129         ResetFirstTime();
<a name="l00130"></a>00130         iCount = 0;
<a name="l00131"></a>00131         iTimer.Cancel();
<a name="l00132"></a>00132         }
</pre></div>
<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
     <p class="copyright">Copyright &#169;2010 Nokia Corporation and/or its subsidiary(-ies).<br /> All rights
reserved. Unless otherwise stated, these materials are provided under the terms of the <a href=" http://www.eclipse.org/legal/epl-v10.html"> Eclipse Public License
v1.0</a>.</p> 
   </div>
  </div>
  <?php include_once (CURRENT_SKIN_PATH.'/sdl_footer.html'); ?>
 </body>
</html>
