<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TB9.2 Example Applications: examples/Graphics/GraphicsShell/Draw.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
<link type="text/css" rel="stylesheet" href="css/common.css" media="screen"/>
<link type="text/css" rel="stylesheet" href="css/sdl.css" media="screen"/>

<!--[if IE]>
<link href="css/iefix.css" rel="stylesheet" type="text/css" media="screen" />
<![endif]-->
</head>
<body class="kernelguide">
    
     <?php include_once (CURRENT_SKIN_PATH.'/sdl_header.html'); ?>
  <div id="sdl_container">
   <div id="leftMenu">
    <div id="expandcontractdiv">
     <a id="collapseTree" href="javascript:tree.collapseAll()">
      Collapse all
     </a>
     <a id="index" href="index.html">
      Symbian^3 Product Developer Library
     </a>
    </div>
    <iframe style="border:none" height="800" width="300" src="index-toc.html"></iframe>
<div id="treeDiv1">
     &#160;
    </div>
    <script type="text/javascript">
     var currentIconMode = 0;
	YAHOO.util.Event.onDOMReady(buildTree, this,true);
    </script>
   </div>
   <div id="sdl_content">
<!-- Generated by Doxygen 1.6.2 -->
<h1>examples/Graphics/GraphicsShell/Draw.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright (c) 2000-2009 Nokia Corporation and/or its subsidiary(-ies).</span>
<a name="l00002"></a>00002 <span class="comment">// All rights reserved.</span>
<a name="l00003"></a>00003 <span class="comment">// This component and the accompanying materials are made available</span>
<a name="l00004"></a>00004 <span class="comment">// under the terms of &quot;Eclipse Public License v1.0&quot;</span>
<a name="l00005"></a>00005 <span class="comment">// which accompanies this distribution, and is available</span>
<a name="l00006"></a>00006 <span class="comment">// at the URL &quot;http://www.eclipse.org/legal/epl-v10.html&quot;.</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Initial Contributors:</span>
<a name="l00009"></a>00009 <span class="comment">// Nokia Corporation - initial contribution.</span>
<a name="l00010"></a>00010 <span class="comment">//</span>
<a name="l00011"></a>00011 <span class="comment">// Contributors:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// Description:</span>
<a name="l00014"></a>00014 <span class="comment">//</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 <span class="preprocessor">#include &quot;GraphicsControl.h&quot;</span>
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 <span class="preprocessor">#include &lt;coemain.h&gt;</span>
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 <span class="comment">// Text printed to the console in UpdateModeL()</span>
<a name="l00021"></a>00021 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase0,<span class="stringliteral">&quot;point in center of screen&quot;</span>);
<a name="l00022"></a>00022 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase1,<span class="stringliteral">&quot;bolder point in center of screen&quot;</span>);
<a name="l00023"></a>00023 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase2,<span class="stringliteral">&quot;really bold point in center of screen&quot;</span>);
<a name="l00024"></a>00024 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase3,<span class="stringliteral">&quot;a line&quot;</span>);
<a name="l00025"></a>00025 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase4,<span class="stringliteral">&quot;a thicker line&quot;</span>);
<a name="l00026"></a>00026 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase5,<span class="stringliteral">&quot;really thick - note round ends and clipping&quot;</span>);
<a name="l00027"></a>00027 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase6,<span class="stringliteral">&quot;dotted line&quot;</span>);
<a name="l00028"></a>00028 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase7,<span class="stringliteral">&quot;dot-dash line&quot;</span>);
<a name="l00029"></a>00029 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase8,<span class="stringliteral">&quot;triangle using relative drawing&quot;</span>);
<a name="l00030"></a>00030 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase9,<span class="stringliteral">&quot;thick triangle - note rounded corners&quot;</span>);
<a name="l00031"></a>00031 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase10,<span class="stringliteral">&quot;dotted triangle - note pattern continuation&quot;</span>);
<a name="l00032"></a>00032 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase11,<span class="stringliteral">&quot;centered ellipse&quot;</span>);
<a name="l00033"></a>00033 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase12,<span class="stringliteral">&quot;arc - part of ellipse&quot;</span>);
<a name="l00034"></a>00034 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase13,<span class="stringliteral">&quot;arc - other part - see also construction elements&quot;</span>);
<a name="l00035"></a>00035 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase14,<span class="stringliteral">&quot;pie slices&quot;</span>);
<a name="l00036"></a>00036 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase15,<span class="stringliteral">&quot;centered rectangle with rounded corners&quot;</span>);
<a name="l00037"></a>00037 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase16,<span class="stringliteral">&quot;rounded rectangle showing corner ellipse&quot;</span>);
<a name="l00038"></a>00038 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase17,<span class="stringliteral">&quot;polyline&quot;</span>);
<a name="l00039"></a>00039 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase18,<span class="stringliteral">&quot;polygon with winding-fill rule&quot;</span>);
<a name="l00040"></a>00040 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase19,<span class="stringliteral">&quot;polygon using alternate-fill rule&quot;</span>);
<a name="l00041"></a>00041 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase20,<span class="stringliteral">&quot;copying using CopyRect()&quot;</span>);
<a name="l00042"></a>00042 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase21,<span class="stringliteral">&quot;left-justified boxed text&quot;</span>);
<a name="l00043"></a>00043 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase22,<span class="stringliteral">&quot;centered boxed text&quot;</span>);
<a name="l00044"></a>00044 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase23,<span class="stringliteral">&quot;right-justified offset text&quot;</span>);
<a name="l00045"></a>00045 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase24,<span class="stringliteral">&quot;cross-hatched box&quot;</span>);
<a name="l00046"></a>00046 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelCase25,<span class="stringliteral">&quot;teeny preview font!&quot;</span>);
<a name="l00047"></a>00047 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtUpdateModelDefault,<span class="stringliteral">&quot;overran!&quot;</span>);
<a name="l00048"></a>00048 
<a name="l00049"></a>00049 <span class="keyword">static</span> CArrayFix&lt;TPoint&gt;* CreatePointsArrayL();
<a name="l00050"></a>00050 
<a name="l00051"></a>00051 <span class="keywordtype">void</span> CDrawControl::UpdateModelL()
<a name="l00052"></a>00052         {
<a name="l00053"></a>00053         <span class="keywordflow">switch</span> (Phase())
<a name="l00054"></a>00054                 {
<a name="l00055"></a>00055                 <span class="keywordflow">case</span> 0:
<a name="l00056"></a>00056                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase0);
<a name="l00057"></a>00057                         <span class="keywordflow">break</span>;
<a name="l00058"></a>00058                 <span class="keywordflow">case</span> 1:
<a name="l00059"></a>00059                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase1);
<a name="l00060"></a>00060                         <span class="keywordflow">break</span>;
<a name="l00061"></a>00061                 <span class="keywordflow">case</span> 2:
<a name="l00062"></a>00062                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase2);
<a name="l00063"></a>00063                         <span class="keywordflow">break</span>;
<a name="l00064"></a>00064                 <span class="keywordflow">case</span> 3:
<a name="l00065"></a>00065                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase3);
<a name="l00066"></a>00066                         <span class="keywordflow">break</span>;
<a name="l00067"></a>00067                 <span class="keywordflow">case</span> 4:
<a name="l00068"></a>00068                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase4);
<a name="l00069"></a>00069                         <span class="keywordflow">break</span>;
<a name="l00070"></a>00070                 <span class="keywordflow">case</span> 5:
<a name="l00071"></a>00071                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase5);
<a name="l00072"></a>00072                         <span class="keywordflow">break</span>;
<a name="l00073"></a>00073                 <span class="keywordflow">case</span> 6:
<a name="l00074"></a>00074                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase6);
<a name="l00075"></a>00075                         <span class="keywordflow">break</span>;
<a name="l00076"></a>00076                 <span class="keywordflow">case</span> 7:
<a name="l00077"></a>00077                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase7);
<a name="l00078"></a>00078                         <span class="keywordflow">break</span>;
<a name="l00079"></a>00079                 <span class="keywordflow">case</span> 8:
<a name="l00080"></a>00080                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase8);
<a name="l00081"></a>00081                         <span class="keywordflow">break</span>;
<a name="l00082"></a>00082                 <span class="keywordflow">case</span> 9:
<a name="l00083"></a>00083                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase9);
<a name="l00084"></a>00084                         <span class="keywordflow">break</span>;
<a name="l00085"></a>00085                 <span class="keywordflow">case</span> 10:
<a name="l00086"></a>00086                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase10);
<a name="l00087"></a>00087                         <span class="keywordflow">break</span>;
<a name="l00088"></a>00088                 <span class="keywordflow">case</span> 11:
<a name="l00089"></a>00089                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase11);
<a name="l00090"></a>00090                         <span class="keywordflow">break</span>;
<a name="l00091"></a>00091                 <span class="keywordflow">case</span> 12:
<a name="l00092"></a>00092                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase12);
<a name="l00093"></a>00093                         <span class="keywordflow">break</span>;
<a name="l00094"></a>00094                 <span class="keywordflow">case</span> 13:
<a name="l00095"></a>00095                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase13);
<a name="l00096"></a>00096                         <span class="keywordflow">break</span>;
<a name="l00097"></a>00097                 <span class="keywordflow">case</span> 14:
<a name="l00098"></a>00098                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase14);
<a name="l00099"></a>00099                         <span class="keywordflow">break</span>;
<a name="l00100"></a>00100                 <span class="keywordflow">case</span> 15:
<a name="l00101"></a>00101                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase15);
<a name="l00102"></a>00102                         <span class="keywordflow">break</span>;
<a name="l00103"></a>00103                 <span class="keywordflow">case</span> 16:
<a name="l00104"></a>00104                         {
<a name="l00105"></a>00105                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase16);
<a name="l00106"></a>00106                         }
<a name="l00107"></a>00107                         <span class="keywordflow">break</span>;
<a name="l00108"></a>00108                 <span class="keywordflow">case</span> 17:
<a name="l00109"></a>00109                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase17);
<a name="l00110"></a>00110                         <span class="keywordflow">break</span>;
<a name="l00111"></a>00111                 <span class="keywordflow">case</span> 18:
<a name="l00112"></a>00112                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase18);
<a name="l00113"></a>00113                         <span class="keywordflow">break</span>;
<a name="l00114"></a>00114                 <span class="keywordflow">case</span> 19:
<a name="l00115"></a>00115                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase19);
<a name="l00116"></a>00116                         <span class="keywordflow">break</span>;
<a name="l00117"></a>00117                 <span class="keywordflow">case</span> 20:
<a name="l00118"></a>00118                         {
<a name="l00119"></a>00119                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase20);
<a name="l00120"></a>00120                         }
<a name="l00121"></a>00121                         <span class="keywordflow">break</span>;
<a name="l00122"></a>00122                 <span class="keywordflow">case</span> 21:
<a name="l00123"></a>00123                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase21);
<a name="l00124"></a>00124                         <span class="keywordflow">break</span>;
<a name="l00125"></a>00125                 <span class="keywordflow">case</span> 22:
<a name="l00126"></a>00126                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase22);
<a name="l00127"></a>00127                         <span class="keywordflow">break</span>;
<a name="l00128"></a>00128                 <span class="keywordflow">case</span> 23:
<a name="l00129"></a>00129                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase23);
<a name="l00130"></a>00130                         <span class="keywordflow">break</span>;
<a name="l00131"></a>00131                 <span class="keywordflow">case</span> 24:
<a name="l00132"></a>00132                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase24);
<a name="l00133"></a>00133                         <span class="keywordflow">break</span>;
<a name="l00134"></a>00134                 <span class="keywordflow">case</span> 25:
<a name="l00135"></a>00135                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelCase25);
<a name="l00136"></a>00136                         <span class="keywordflow">break</span>;
<a name="l00137"></a>00137                 <span class="keywordflow">default</span>:
<a name="l00138"></a>00138                         iGraphObserver-&gt;NotifyStatus(KTxtUpdateModelDefault);
<a name="l00139"></a>00139                         <span class="keywordflow">break</span>;
<a name="l00140"></a>00140                 }
<a name="l00141"></a>00141         }
<a name="l00142"></a>00142 
<a name="l00143"></a>00143 
<a name="l00144"></a>00144 <span class="comment">// Text printed to the console in UpdateModeL()</span>
<a name="l00145"></a>00145 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtDrawCase21,<span class="stringliteral">&quot;White text left justified in dark gray box&quot;</span>);
<a name="l00146"></a>00146 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtDrawCase22,<span class="stringliteral">&quot;White text centered in black box&quot;</span>);
<a name="l00147"></a>00147 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtDrawCase23,<span class="stringliteral">&quot;Dark gray text right justified in lite gray box&quot;</span>);
<a name="l00148"></a>00148 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtDrawCase25,<span class="stringliteral">&quot;This text overwrites the cleared area&quot;</span>);
<a name="l00149"></a>00149 
<a name="l00150"></a>00150         
<a name="l00151"></a>00151 <span class="keywordtype">void</span> CDrawControl::Draw(<span class="keyword">const</span> TRect&amp; <span class="comment">/* aRect */</span>)<span class="keyword"> const</span>
<a name="l00152"></a>00152 <span class="keyword">        </span>{
<a name="l00153"></a>00153         <span class="comment">// put the next line back in to see the individual drawing actions</span>
<a name="l00154"></a>00154         <span class="comment">// (iCoeEnv-&gt;WsSession()).SetAutoFlush(ETrue);</span>
<a name="l00155"></a>00155         <span class="comment">// draw surrounding rectangle</span>
<a name="l00156"></a>00156         CWindowGc&amp; gc=SystemGc(); <span class="comment">// graphics context we draw to</span>
<a name="l00157"></a>00157         gc.UseFont(iMessageFont); <span class="comment">// use the system message font</span>
<a name="l00158"></a>00158         gc.Clear();
<a name="l00159"></a>00159         SystemGc().DrawRect(Rect()); <span class="comment">// surrounding rectangle to draw into</span>
<a name="l00160"></a>00160         TRect rect=Rect(); <span class="comment">// a centered rectangle of the default size</span>
<a name="l00161"></a>00161         TRect ellipseRect=Rect(); <span class="comment">// for arcs and ellipse</span>
<a name="l00162"></a>00162         ellipseRect.Shrink(10,10); <span class="comment">// set size so inside the border rectangle</span>
<a name="l00163"></a>00163         TRect box=Rect(); <span class="comment">// a smaller centered rectangle, for text in a box</span>
<a name="l00164"></a>00164         box.Shrink(10,10); <span class="comment">// set size of text box</span>
<a name="l00165"></a>00165         TRect tinyBox=Rect(); <span class="comment">// a tiny box to clear</span>
<a name="l00166"></a>00166         tinyBox.Shrink(220,90); <span class="comment">// set size of tiny box to clear</span>
<a name="l00167"></a>00167         TInt offset=0; <span class="comment">// offset, for text in a box</span>
<a name="l00168"></a>00168         TPoint screenCenterPoint=rect.Center(); <span class="comment">// the center of the screen </span>
<a name="l00169"></a>00169         <span class="comment">// set up a pair of construction points for arc and pie slice drawing</span>
<a name="l00170"></a>00170         <span class="comment">// set up the size for half a screen (divided vertically)</span>
<a name="l00171"></a>00171         TPoint constructionPoint1(15,15); <span class="comment">// outside the construction ellipse</span>
<a name="l00172"></a>00172         TPoint constructionPoint2(200,150); <span class="comment">// inside the construction ellipse</span>
<a name="l00173"></a>00173         <span class="comment">// set up a pair of points for drawing diagonal lines</span>
<a name="l00174"></a>00174         TPoint startPoint(50,50);
<a name="l00175"></a>00175         TPoint endPoint(590,190);
<a name="l00176"></a>00176         <span class="comment">// set up an array of points for drawing a polyline and a polygon etc</span>
<a name="l00177"></a>00177         <span class="comment">// will be used relative to top left of rectangle</span>
<a name="l00178"></a>00178         CArrayFix&lt;TPoint&gt;* mypoints=NULL;
<a name="l00179"></a>00179         TRAPD(err,mypoints = CreatePointsArrayL());
<a name="l00180"></a>00180         <span class="keywordflow">if</span>(err)
<a name="l00181"></a>00181                 {
<a name="l00182"></a>00182                 <span class="keywordflow">return</span>;
<a name="l00183"></a>00183                 }
<a name="l00184"></a>00184         <span class="comment">// set up a black, a dark gray, a lite gray and a white RGB color</span>
<a name="l00185"></a>00185         TRgb black(0,0,0);
<a name="l00186"></a>00186         TRgb darkGray(85,85,85);
<a name="l00187"></a>00187         TRgb liteGray(170,170,170);
<a name="l00188"></a>00188         TRgb white(255,255,255); <span class="comment">// appears as blank screen gray-green color</span>
<a name="l00189"></a>00189         <span class="comment">// Set up a &quot;bold&quot; size for the pen tip to (default is 1,1)</span>
<a name="l00190"></a>00190         TSize penSizeBold(3,3);
<a name="l00191"></a>00191         <span class="comment">// Set up a &quot;fat&quot; size for the pen tip</span>
<a name="l00192"></a>00192         TSize penSizeFat(30,30);
<a name="l00193"></a>00193         <span class="comment">// decide what to do, and do it</span>
<a name="l00194"></a>00194         <span class="keywordflow">switch</span> (Phase())
<a name="l00195"></a>00195                 {
<a name="l00196"></a>00196                 <span class="keywordflow">case</span> 0:
<a name="l00197"></a>00197                         <span class="comment">// draw a single pixel point in the center of the screen</span>
<a name="l00198"></a>00198                         <span class="comment">// it is so small that some text is needed to explain the screen...</span>
<a name="l00199"></a>00199                         gc.Plot(screenCenterPoint);
<a name="l00200"></a>00200                         <span class="keywordflow">break</span>;
<a name="l00201"></a>00201                 <span class="keywordflow">case</span> 1:
<a name="l00202"></a>00202                         <span class="comment">// draw a &quot;bold&quot; point 3 pixels across</span>
<a name="l00203"></a>00203                         gc.SetPenSize(penSizeBold);
<a name="l00204"></a>00204                         gc.Plot(screenCenterPoint);
<a name="l00205"></a>00205                         <span class="keywordflow">break</span>;
<a name="l00206"></a>00206                 <span class="keywordflow">case</span> 2:
<a name="l00207"></a>00207                         <span class="comment">// draw a &quot;fat&quot; point (circular blob),</span>
<a name="l00208"></a>00208                         <span class="comment">// illustrating the effect of a very wide pen</span>
<a name="l00209"></a>00209                         gc.SetPenSize(penSizeFat);
<a name="l00210"></a>00210                         gc.Plot(screenCenterPoint);
<a name="l00211"></a>00211                         <span class="keywordflow">break</span>;
<a name="l00212"></a>00212                 <span class="keywordflow">case</span> 3:
<a name="l00213"></a>00213                         <span class="comment">// draw a thin line fromtop left to bottom right</span>
<a name="l00214"></a>00214                         gc.DrawLine(startPoint,endPoint);
<a name="l00215"></a>00215                         <span class="keywordflow">break</span>;
<a name="l00216"></a>00216                 <span class="keywordflow">case</span> 4:
<a name="l00217"></a>00217                         <span class="comment">// draw a &quot;bold&quot; line fromtop left to bottom right</span>
<a name="l00218"></a>00218                         gc.SetPenSize(penSizeBold);
<a name="l00219"></a>00219                         gc.DrawLine(startPoint,endPoint);
<a name="l00220"></a>00220                         <span class="keywordflow">break</span>;
<a name="l00221"></a>00221                 <span class="keywordflow">case</span> 5:
<a name="l00222"></a>00222                         <span class="comment">// draw a rather wide line from top left to bottom right,</span>
<a name="l00223"></a>00223                         <span class="comment">// illustrating rounded ends and their clipping</span>
<a name="l00224"></a>00224                         gc.SetPenSize(penSizeFat);
<a name="l00225"></a>00225                         gc.DrawLine(startPoint,endPoint);
<a name="l00226"></a>00226                         <span class="keywordflow">break</span>;
<a name="l00227"></a>00227                 <span class="keywordflow">case</span> 6:
<a name="l00228"></a>00228                         <span class="comment">// draw a dotted line from top left to bottom right</span>
<a name="l00229"></a>00229                         gc.SetPenStyle(CGraphicsContext::EDottedPen);
<a name="l00230"></a>00230                         gc.DrawLine(startPoint,endPoint);
<a name="l00231"></a>00231                         <span class="keywordflow">break</span>;
<a name="l00232"></a>00232                 <span class="keywordflow">case</span> 7:
<a name="l00233"></a>00233                         <span class="comment">// draw a dot-dash line from top left to bottom right</span>
<a name="l00234"></a>00234                         gc.SetPenStyle(CGraphicsContext::EDotDashPen);
<a name="l00235"></a>00235                         gc.DrawLine(startPoint,endPoint);
<a name="l00236"></a>00236                         <span class="keywordflow">break</span>;
<a name="l00237"></a>00237                 <span class="keywordflow">case</span> 8:
<a name="l00238"></a>00238                         <span class="comment">// draw a triangle by relative drawing</span>
<a name="l00239"></a>00239                         gc.MoveTo(TPoint(300,50)); <span class="comment">// drawing position (300,50)</span>
<a name="l00240"></a>00240                         gc.DrawLineBy(TPoint(205,100)); <span class="comment">// drawing position (505,150)</span>
<a name="l00241"></a>00241                         gc.DrawLineBy(TPoint(-410,0)); <span class="comment">// drawing position (95,150)</span>
<a name="l00242"></a>00242                         gc.DrawLineBy(TPoint(205,-100)); <span class="comment">// drawing position (300,50)</span>
<a name="l00243"></a>00243                         <span class="keywordflow">break</span>;
<a name="l00244"></a>00244                 <span class="keywordflow">case</span> 9:
<a name="l00245"></a>00245                         <span class="comment">// draw a triangle, by relative drawing</span>
<a name="l00246"></a>00246                         <span class="comment">// illustrating rounded ends at corners when using very wide lines</span>
<a name="l00247"></a>00247                         gc.SetPenSize(penSizeFat);
<a name="l00248"></a>00248                         gc.MoveTo(TPoint(300,50)); <span class="comment">// drawing position (300,50)</span>
<a name="l00249"></a>00249                         gc.DrawLineBy(TPoint(205,100)); <span class="comment">// drawing position (505,150)</span>
<a name="l00250"></a>00250                         gc.DrawLineBy(TPoint(-410,0)); <span class="comment">// drawing position (95,150)</span>
<a name="l00251"></a>00251                         gc.DrawLineBy(TPoint(205,-100)); <span class="comment">// drawing position (300,50)</span>
<a name="l00252"></a>00252                         <span class="keywordflow">break</span>;
<a name="l00253"></a>00253                 <span class="keywordflow">case</span> 10:
<a name="l00254"></a>00254                         <span class="comment">// draw a triangle by sequential drawing between specified points,</span>
<a name="l00255"></a>00255                         <span class="comment">// using dot-dash line style, illustrating line pattern continuation </span>
<a name="l00256"></a>00256                         gc.SetPenStyle(CGraphicsContext::EDotDashPen);
<a name="l00257"></a>00257                         gc.MoveTo(TPoint(300,50)); <span class="comment">// drawing position (300,50)</span>
<a name="l00258"></a>00258                         gc.DrawLineTo(TPoint(505,150)); <span class="comment">// drawing position (505,150)</span>
<a name="l00259"></a>00259                         gc.DrawLineTo(TPoint(95,150)); <span class="comment">// drawing position (95,150)</span>
<a name="l00260"></a>00260                         gc.DrawLineTo(TPoint(300,50)); <span class="comment">// drawing position (300,50)</span>
<a name="l00261"></a>00261                         <span class="keywordflow">break</span>;
<a name="l00262"></a>00262                 <span class="keywordflow">case</span> 11:
<a name="l00263"></a>00263                         <span class="comment">// draw an ellipse centered in the rectangle</span>
<a name="l00264"></a>00264                         gc.DrawEllipse(ellipseRect);
<a name="l00265"></a>00265                         <span class="keywordflow">break</span>;
<a name="l00266"></a>00266                 <span class="keywordflow">case</span> 12:
<a name="l00267"></a>00267                         <span class="comment">// draw an arc centered in the rectangle</span>
<a name="l00268"></a>00268                         gc.DrawArc(ellipseRect,constructionPoint1,constructionPoint2);
<a name="l00269"></a>00269                         <span class="comment">// gc.Clear();</span>
<a name="l00270"></a>00270                         <span class="keywordflow">break</span>;
<a name="l00271"></a>00271                 <span class="keywordflow">case</span> 13:
<a name="l00272"></a>00272                         <span class="comment">// draw an arc centered in the rectangle that is the other</span>
<a name="l00273"></a>00273                         <span class="comment">// portion of the ellipse (arguments reversed)</span>
<a name="l00274"></a>00274                         gc.DrawArc(ellipseRect,constructionPoint2,constructionPoint1);
<a name="l00275"></a>00275                         <span class="comment">// draw construction lines and points</span>
<a name="l00276"></a>00276                         gc.SetPenStyle(CGraphicsContext::EDottedPen);
<a name="l00277"></a>00277                         gc.MoveTo(constructionPoint1);
<a name="l00278"></a>00278                         gc.DrawLineTo(screenCenterPoint);
<a name="l00279"></a>00279                         gc.DrawLineTo(constructionPoint2);
<a name="l00280"></a>00280                         gc.SetPenSize(penSizeBold);
<a name="l00281"></a>00281                         gc.Plot(constructionPoint1);
<a name="l00282"></a>00282                         gc.Plot(constructionPoint2);
<a name="l00283"></a>00283                         gc.Plot(screenCenterPoint);
<a name="l00284"></a>00284                         <span class="keywordflow">break</span>;
<a name="l00285"></a>00285                 <span class="keywordflow">case</span> 14:
<a name="l00286"></a>00286                         <span class="comment">// draw a pie slice centered in the rectangle</span>
<a name="l00287"></a>00287                         gc.SetBrushStyle(CGraphicsContext::ESolidBrush);
<a name="l00288"></a>00288                         gc.SetBrushColor(white);
<a name="l00289"></a>00289                         gc.DrawPie(ellipseRect,constructionPoint1,constructionPoint2);
<a name="l00290"></a>00290                         <span class="comment">// draw the other portion of the elliptical disc</span>
<a name="l00291"></a>00291                         gc.SetBrushStyle(CGraphicsContext::EVerticalHatchBrush);
<a name="l00292"></a>00292                         gc.DrawPie(ellipseRect,constructionPoint2,constructionPoint1);
<a name="l00293"></a>00293                         <span class="keywordflow">break</span>;
<a name="l00294"></a>00294                 <span class="keywordflow">case</span> 15:
<a name="l00295"></a>00295                         {
<a name="l00296"></a>00296                         <span class="comment">// draw a rectangle with rounded corners, centered in the rectangle</span>
<a name="l00297"></a>00297                         TSize cornerSize(20,20); <span class="comment">// size of a rounded corner</span>
<a name="l00298"></a>00298                         gc.DrawRoundRect(box,cornerSize); <span class="comment">// same rect as text box</span>
<a name="l00299"></a>00299                         }
<a name="l00300"></a>00300                         <span class="keywordflow">break</span>;
<a name="l00301"></a>00301                 <span class="keywordflow">case</span> 16:
<a name="l00302"></a>00302                         {
<a name="l00303"></a>00303                         <span class="comment">// draw a rectangle with rounded corners,</span>
<a name="l00304"></a>00304                         <span class="comment">//centered in the rectangle, showing a corner ellipse</span>
<a name="l00305"></a>00305                         TSize cornerSize(20,20); <span class="comment">// size of a rounded corner</span>
<a name="l00306"></a>00306                         <span class="comment">// rect for corner ellipse is twice the corner size</span>
<a name="l00307"></a>00307                         TSize cornerEllipseSize(cornerSize.iHeight*2,cornerSize.iWidth*2);
<a name="l00308"></a>00308                         TRect cornerRectTl(box.iTl,cornerEllipseSize);
<a name="l00309"></a>00309                         gc.DrawRoundRect(box,cornerSize);
<a name="l00310"></a>00310                         gc.SetPenStyle(CGraphicsContext::EDottedPen);
<a name="l00311"></a>00311                         gc.DrawEllipse(cornerRectTl); <span class="comment">// corner construction ellipse</span>
<a name="l00312"></a>00312                         }
<a name="l00313"></a>00313                         <span class="keywordflow">break</span>;
<a name="l00314"></a>00314                 <span class="keywordflow">case</span> 17:
<a name="l00315"></a>00315                         <span class="comment">// draw a polyline</span>
<a name="l00316"></a>00316                         gc.DrawPolyLine(mypoints);
<a name="l00317"></a>00317                         <span class="keywordflow">break</span>;
<a name="l00318"></a>00318                 <span class="keywordflow">case</span> 18:
<a name="l00319"></a>00319                         <span class="comment">// draw self-crossing polygon using the winding fill rule</span>
<a name="l00320"></a>00320                         gc.SetBrushStyle(CGraphicsContext::ESquareCrossHatchBrush);
<a name="l00321"></a>00321                         gc.SetBrushColor(black);
<a name="l00322"></a>00322                         gc.DrawPolygon(mypoints,CGraphicsContext::EWinding);
<a name="l00323"></a>00323                         <span class="keywordflow">break</span>;
<a name="l00324"></a>00324                 <span class="keywordflow">case</span> 19:
<a name="l00325"></a>00325                         <span class="comment">// draw self-crossing polygon using the alternate fill rule</span>
<a name="l00326"></a>00326                         gc.SetBrushStyle(CGraphicsContext::EDiamondCrossHatchBrush);
<a name="l00327"></a>00327                         gc.SetBrushColor(black);
<a name="l00328"></a>00328                         gc.DrawPolygon(mypoints,CGraphicsContext::EAlternate);
<a name="l00329"></a>00329                         <span class="keywordflow">break</span>;
<a name="l00330"></a>00330                 <span class="keywordflow">case</span> 20:
<a name="l00331"></a>00331                         {
<a name="l00332"></a>00332                         <span class="comment">// draw self-crossing polygon using the alternate fill rule,</span>
<a name="l00333"></a>00333                         <span class="comment">// and copy the lhs to the rhs of the screen</span>
<a name="l00334"></a>00334                         gc.SetBrushStyle(CGraphicsContext::EDiamondCrossHatchBrush);
<a name="l00335"></a>00335                         gc.SetBrushColor(black);
<a name="l00336"></a>00336                         gc.DrawPolygon(mypoints,CGraphicsContext::EAlternate);
<a name="l00337"></a>00337                         TPoint screenOrigin(0,0); <span class="comment">// top left of the screen</span>
<a name="l00338"></a>00338                         TSize halfScreenLR(320,240); <span class="comment">// size of vertical half of screen</span>
<a name="l00339"></a>00339                         rect.SetRect(screenOrigin,halfScreenLR); <span class="comment">// lhs of screen</span>
<a name="l00340"></a>00340                         TPoint offset(halfScreenLR.iWidth,0); <span class="comment">// half screen width offset</span>
<a name="l00341"></a>00341                         gc.CopyRect(offset,rect); <span class="comment">//  copy lhs of screen to rhs</span>
<a name="l00342"></a>00342                         }
<a name="l00343"></a>00343                         <span class="keywordflow">break</span>;
<a name="l00344"></a>00344                 <span class="keywordflow">case</span> 21:
<a name="l00345"></a>00345                         <span class="comment">// draw some text left justified in a box,</span>
<a name="l00346"></a>00346                         <span class="comment">// offset so text is just inside top of box</span>
<a name="l00347"></a>00347                         {
<a name="l00348"></a>00348                         CFont* font=iMessageFont; <span class="comment">// get the system message font</span>
<a name="l00349"></a>00349                         TInt fontAscent(font-&gt;AscentInPixels()); <span class="comment">// system message font ascent</span>
<a name="l00350"></a>00350                         offset=fontAscent+3; <span class="comment">// add a 3 pixel text line spacing</span>
<a name="l00351"></a>00351                         TInt margin=2; <span class="comment">// left margin is two pixels</span>
<a name="l00352"></a>00352                         gc.SetBrushStyle(CGraphicsContext::ESolidBrush);
<a name="l00353"></a>00353                         gc.SetBrushColor(darkGray);
<a name="l00354"></a>00354                         gc.SetPenColor(white);
<a name="l00355"></a>00355                         gc.UseFont(iMessageFont);
<a name="l00356"></a>00356                         gc.DrawText(KTxtDrawCase21,box,offset,CGraphicsContext::ELeft,margin);
<a name="l00357"></a>00357                         }
<a name="l00358"></a>00358                         <span class="keywordflow">break</span>;
<a name="l00359"></a>00359                 <span class="keywordflow">case</span> 22:
<a name="l00360"></a>00360                         <span class="comment">// draw some text centered in a box, (margin is zero)</span>
<a name="l00361"></a>00361                         {
<a name="l00362"></a>00362                         TInt boxHeight=box.Height(); <span class="comment">// get height of text box</span>
<a name="l00363"></a>00363                         CFont* font=iMessageFont; <span class="comment">// get the system message font</span>
<a name="l00364"></a>00364                         TInt textHeight(font-&gt;HeightInPixels()); <span class="comment">// system message font height</span>
<a name="l00365"></a>00365                         offset=(textHeight+boxHeight)/2; <span class="comment">// 1/2 font ht below halfway down box</span>
<a name="l00366"></a>00366                         TInt margin=0; <span class="comment">// margin is zero</span>
<a name="l00367"></a>00367                         gc.SetBrushStyle(CGraphicsContext::ESolidBrush);
<a name="l00368"></a>00368                         gc.SetBrushColor(black);
<a name="l00369"></a>00369                         gc.SetPenColor(white);
<a name="l00370"></a>00370                         gc.UseFont(iMessageFont);
<a name="l00371"></a>00371                         gc.DrawText(KTxtDrawCase22,box,offset,CGraphicsContext::ECenter,margin);
<a name="l00372"></a>00372                         }
<a name="l00373"></a>00373                         <span class="keywordflow">break</span>;
<a name="l00374"></a>00374                 <span class="keywordflow">case</span> 23:
<a name="l00375"></a>00375                         <span class="comment">// draw some text right justified in a box,</span>
<a name="l00376"></a>00376                         <span class="comment">// offset so text is just inside bottom of box</span>
<a name="l00377"></a>00377                         {
<a name="l00378"></a>00378                         TInt boxHeight=box.Height(); <span class="comment">// get height of text box</span>
<a name="l00379"></a>00379                         CFont* font=iMessageFont; <span class="comment">// get the system message font</span>
<a name="l00380"></a>00380                         TInt fontDescent=font-&gt;DescentInPixels(); <span class="comment">// system message font descent</span>
<a name="l00381"></a>00381                         offset=boxHeight-fontDescent-3;<span class="comment">// offset, 3 pixel text line spacing </span>
<a name="l00382"></a>00382                         TInt margin=2; <span class="comment">// right margin is two pixels</span>
<a name="l00383"></a>00383                         gc.SetBrushStyle(CGraphicsContext::ESolidBrush);
<a name="l00384"></a>00384                         gc.SetBrushColor(liteGray);
<a name="l00385"></a>00385                         gc.SetPenColor(darkGray);
<a name="l00386"></a>00386                         gc.UseFont(iMessageFont);
<a name="l00387"></a>00387                         gc.DrawText(KTxtDrawCase23,box,offset,CGraphicsContext::ERight,margin);
<a name="l00388"></a>00388                         }
<a name="l00389"></a>00389                         <span class="keywordflow">break</span>;
<a name="l00390"></a>00390                 <span class="keywordflow">case</span> 24:
<a name="l00391"></a>00391                         {
<a name="l00392"></a>00392                         <span class="comment">// draw a cross-hatched box</span>
<a name="l00393"></a>00393                         <span class="comment">// then clear a small central rectangle</span>
<a name="l00394"></a>00394                         gc.SetBrushColor(darkGray);
<a name="l00395"></a>00395                         gc.SetBrushStyle(CGraphicsContext::ESquareCrossHatchBrush);
<a name="l00396"></a>00396                         gc.DrawRect(rect);
<a name="l00397"></a>00397                         <span class="comment">// clear a small rectangle</span>
<a name="l00398"></a>00398                         gc.SetBrushColor(liteGray); <span class="comment">// change the brush color</span>
<a name="l00399"></a>00399                         gc.Clear(tinyBox); <span class="comment">// clear to brush color</span>
<a name="l00400"></a>00400                         }
<a name="l00401"></a>00401                         <span class="keywordflow">break</span>;
<a name="l00402"></a>00402                 <span class="keywordflow">case</span> 25:
<a name="l00403"></a>00403                         {
<a name="l00404"></a>00404                         <span class="comment">// draw a cross-hatched box</span>
<a name="l00405"></a>00405                         <span class="comment">// then clear a small central rectangle</span>
<a name="l00406"></a>00406                         <span class="comment">// and write some text in it in smallest Swiss font,</span>
<a name="l00407"></a>00407                         <span class="comment">// (which is actually a tiny &quot;block&quot; print-preview font)</span>
<a name="l00408"></a>00408                         <span class="comment">// starting bottom left (illustrating flicker, overlap, mess)</span>
<a name="l00409"></a>00409                         gc.SetBrushColor(darkGray);
<a name="l00410"></a>00410                         gc.SetBrushStyle(CGraphicsContext::ESquareCrossHatchBrush);
<a name="l00411"></a>00411                         gc.DrawRect(rect);
<a name="l00412"></a>00412                         <span class="comment">// clear a small rectangle</span>
<a name="l00413"></a>00413                         gc.SetBrushColor(liteGray); <span class="comment">// change the brush color</span>
<a name="l00414"></a>00414                         gc.Clear(tinyBox); <span class="comment">// clear to brush color</span>
<a name="l00415"></a>00415                         <span class="comment">// get an alternative font</span>
<a name="l00416"></a>00416                         CFont* myFont;
<a name="l00417"></a>00417                         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtArial,<span class="stringliteral">&quot;Arial&quot;</span>);
<a name="l00418"></a>00418                         TFontSpec myFontSpec(KTxtArial,1); <span class="comment">// to get smallest Arial font</span>
<a name="l00419"></a>00419                         CGraphicsDevice* screenDevice=(iCoeEnv-&gt;ScreenDevice());
<a name="l00420"></a>00420                         screenDevice-&gt;GetNearestFontInTwips(myFont,myFontSpec);
<a name="l00421"></a>00421                         gc.UseFont(myFont);
<a name="l00422"></a>00422                         <span class="comment">// set the text drawing position &amp; draw (demonstrating flicker)</span>
<a name="l00423"></a>00423                         TInt fontDescent=myFont-&gt;DescentInPixels();
<a name="l00424"></a>00424                         TPoint pos(0,tinyBox.Height()-fontDescent);
<a name="l00425"></a>00425                         pos+=tinyBox.iTl;
<a name="l00426"></a>00426                         gc.DrawText(KTxtDrawCase25,pos);
<a name="l00427"></a>00427                         <span class="comment">// discard and destroy the font</span>
<a name="l00428"></a>00428                         gc.DiscardFont();
<a name="l00429"></a>00429                         screenDevice-&gt;ReleaseFont(myFont);
<a name="l00430"></a>00430                         }
<a name="l00431"></a>00431                         <span class="keywordflow">break</span>;
<a name="l00432"></a>00432                 <span class="keywordflow">default</span>:
<a name="l00433"></a>00433                         <span class="keywordflow">break</span>;
<a name="l00434"></a>00434                 }
<a name="l00435"></a>00435         <span class="keyword">delete</span> mypoints; <span class="comment">// an array must be destroyed after use</span>
<a name="l00436"></a>00436         }
<a name="l00437"></a>00437 
<a name="l00438"></a>00438 <span class="keyword">static</span> CArrayFix&lt;TPoint&gt;* CreatePointsArrayL()
<a name="l00439"></a>00439         {
<a name="l00440"></a>00440         CArrayFixFlat&lt;TPoint&gt;* pointsArray = <span class="keyword">new</span> CArrayFixFlat&lt;TPoint&gt;(5);
<a name="l00441"></a>00441         
<a name="l00442"></a>00442         TPoint point1(20,20);
<a name="l00443"></a>00443         TPoint point2(100,190);
<a name="l00444"></a>00444         TPoint point3(110,90);
<a name="l00445"></a>00445         TPoint point4(50,150);
<a name="l00446"></a>00446         TPoint point5(200,150);
<a name="l00447"></a>00447         
<a name="l00448"></a>00448         pointsArray-&gt;AppendL(point1);
<a name="l00449"></a>00449         pointsArray-&gt;AppendL(point2);
<a name="l00450"></a>00450         pointsArray-&gt;AppendL(point3);
<a name="l00451"></a>00451         pointsArray-&gt;AppendL(point4);
<a name="l00452"></a>00452         pointsArray-&gt;AppendL(point5);
<a name="l00453"></a>00453         
<a name="l00454"></a>00454         <span class="keywordflow">return</span> pointsArray;
<a name="l00455"></a>00455         }
</pre></div>
<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
     <p class="copyright">Copyright &#169;2010 Nokia Corporation and/or its subsidiary(-ies).<br /> All rights
reserved. Unless otherwise stated, these materials are provided under the terms of the <a href=" http://www.eclipse.org/legal/epl-v10.html"> Eclipse Public License
v1.0</a>.</p> 
   </div>
  </div>
  <?php include_once (CURRENT_SKIN_PATH.'/sdl_footer.html'); ?>
 </body>
</html>
