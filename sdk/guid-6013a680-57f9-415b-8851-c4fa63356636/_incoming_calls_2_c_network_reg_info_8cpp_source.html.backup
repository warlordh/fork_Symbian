<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TB9.2 Example Applications: examples/Telephony/ETel3rdPartyExample/IncomingCalls/CNetworkRegInfo.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
<link type="text/css" rel="stylesheet" href="css/common.css" media="screen"/>
<link type="text/css" rel="stylesheet" href="css/sdl.css" media="screen"/>

<!--[if IE]>
<link href="css/iefix.css" rel="stylesheet" type="text/css" media="screen" />
<![endif]-->
</head>
<body class="kernelguide">
    
     <?php include_once (CURRENT_SKIN_PATH.'/sdl_header.html'); ?>
  <div id="sdl_container">
   <div id="leftMenu">
    <div id="expandcontractdiv">
     <a id="collapseTree" href="javascript:tree.collapseAll()">
      Collapse all
     </a>
     <a id="index" href="index.html">
      Symbian^3 Product Developer Library
     </a>
    </div>
    <iframe style="border:none" height="800" width="300" src="index-toc.html"></iframe>
<div id="treeDiv1">
     &#160;
    </div>
    <script type="text/javascript">
     var currentIconMode = 0;
	YAHOO.util.Event.onDOMReady(buildTree, this,true);
    </script>
   </div>
   <div id="sdl_content">
<!-- Generated by Doxygen 1.6.2 -->
<h1>examples/Telephony/ETel3rdPartyExample/IncomingCalls/CNetworkRegInfo.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).</span>
<a name="l00002"></a>00002 <span class="comment">// All rights reserved.</span>
<a name="l00003"></a>00003 <span class="comment">// This component and the accompanying materials are made available</span>
<a name="l00004"></a>00004 <span class="comment">// under the terms of &quot;Eclipse Public License v1.0&quot;</span>
<a name="l00005"></a>00005 <span class="comment">// which accompanies this distribution, and is available</span>
<a name="l00006"></a>00006 <span class="comment">// at the URL &quot;http://www.eclipse.org/legal/epl-v10.html&quot;.</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Initial Contributors:</span>
<a name="l00009"></a>00009 <span class="comment">// Nokia Corporation - initial contribution.</span>
<a name="l00010"></a>00010 <span class="comment">//</span>
<a name="l00011"></a>00011 <span class="comment">// Contributors:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// Description:</span>
<a name="l00014"></a>00014 <span class="comment">//</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 
<a name="l00017"></a>00017 <span class="preprocessor">#include &quot;CNetworkRegInfo.h&quot;</span>
<a name="l00018"></a>00018 
<a name="l00025"></a>00025 <a class="code" href="class_c_network_reg_info.html">CNetworkRegInfo</a>* <a class="code" href="class_c_network_reg_info.html#ac48f97258f5d06a459de3fc2af2c4bb4">CNetworkRegInfo::NewL</a>(<a class="code" href="class_m_exec_async.html">MExecAsync</a>* aController)
<a name="l00026"></a>00026         {
<a name="l00027"></a>00027         <a class="code" href="class_c_network_reg_info.html">CNetworkRegInfo</a>* <span class="keyword">self</span> = <span class="keyword">new</span>(ELeave) <a class="code" href="class_c_network_reg_info.html">CNetworkRegInfo</a>(aController);
<a name="l00028"></a>00028         CleanupStack::PushL(<span class="keyword">self</span>);
<a name="l00029"></a>00029         <span class="keyword">self</span>-&gt;ConstructL();
<a name="l00030"></a>00030         CleanupStack::Pop(<span class="keyword">self</span>);
<a name="l00031"></a>00031         <span class="keywordflow">return</span> <span class="keyword">self</span>;
<a name="l00032"></a>00032         }
<a name="l00033"></a>00033 
<a name="l00038"></a>00038 <a class="code" href="class_c_network_reg_info.html#adff12b8ac65a0bdaf2d6be82b21f1b93">CNetworkRegInfo::~CNetworkRegInfo</a>()
<a name="l00039"></a>00039         {
<a name="l00040"></a>00040         Cancel();
<a name="l00041"></a>00041         <span class="keyword">delete</span> iTelephony;
<a name="l00042"></a>00042         }
<a name="l00043"></a>00043 
<a name="l00048"></a><a class="code" href="class_c_network_reg_info.html#a699e05733410059346224352f34134f6">00048</a> <span class="keywordtype">void</span> <a class="code" href="class_c_network_reg_info.html#a699e05733410059346224352f34134f6">CNetworkRegInfo::StartRequestL</a>()
<a name="l00049"></a>00049         {
<a name="l00050"></a>00050         <a class="code" href="class_c_i_s_v_a_p_i_async.html#a642c32a2c5a3a4eec17863139e468a33">iRequestNotify</a> = EFalse;
<a name="l00051"></a>00051         iTelephony-&gt;GetNetworkRegistrationStatus(iStatus, iNetworkRegV1Pckg);
<a name="l00052"></a>00052         SetActive();
<a name="l00053"></a>00053         }
<a name="l00054"></a>00054 
<a name="l00060"></a>00060 CNetworkRegInfo::CNetworkRegInfo(<a class="code" href="class_m_exec_async.html">MExecAsync</a>* aController)
<a name="l00061"></a>00061         : <a class="code" href="class_c_i_s_v_a_p_i_async.html">CISVAPIAsync</a>(aController)
<a name="l00062"></a>00062         , iNetworkRegV1Pckg(iNetworkRegV1)
<a name="l00063"></a>00063         {
<a name="l00064"></a>00064         iExtensionId = KNetworkRegInfo;
<a name="l00065"></a>00065         }
<a name="l00066"></a>00066 
<a name="l00070"></a>00070 <span class="keywordtype">void</span> CNetworkRegInfo::ConstructL()
<a name="l00071"></a>00071         {
<a name="l00072"></a>00072         CActiveScheduler::Add(<span class="keyword">this</span>);
<a name="l00073"></a>00073         iTelephony = <a class="code" href="class_c_network_reg_info.html#ac48f97258f5d06a459de3fc2af2c4bb4">CTelephony::NewL</a>();
<a name="l00074"></a>00074         <a class="code" href="class_c_i_s_v_a_p_i_async.html#a642c32a2c5a3a4eec17863139e468a33">iRequestNotify</a> = EFalse;
<a name="l00075"></a>00075         }
<a name="l00076"></a>00076 
<a name="l00082"></a>00082 <span class="keywordtype">void</span> CNetworkRegInfo::RunL()
<a name="l00083"></a>00083         {
<a name="l00084"></a>00084         TBool isNotification = <a class="code" href="class_c_i_s_v_a_p_i_async.html#a642c32a2c5a3a4eec17863139e468a33">iRequestNotify</a>;
<a name="l00085"></a>00085         <span class="keywordflow">if</span>(iStatus != KErrNone)
<a name="l00086"></a>00086                 {
<a name="l00087"></a>00087                 gConsole-&gt;Printf(KErrorRom);
<a name="l00088"></a>00088                 }
<a name="l00089"></a>00089         <span class="keywordflow">else</span>
<a name="l00090"></a>00090                 {
<a name="l00091"></a>00091                 TBuf&lt;30&gt; theStatus;
<a name="l00092"></a>00092                 gConsole-&gt;Printf(KNetworkRegMsgRom);
<a name="l00093"></a>00093                 <span class="keywordflow">switch</span>(<a class="code" href="class_c_network_reg_info.html#aa85225589261df96e8caf34b34054584">iNetworkRegV1</a>.iRegStatus)
<a name="l00094"></a>00094                         {
<a name="l00095"></a>00095                                 <span class="keywordflow">case</span> CTelephony::ERegistrationUnknown:
<a name="l00096"></a>00096                                         theStatus.Append(_L(<span class="stringliteral">&quot;ERegistrationUnknown\n&quot;</span>));
<a name="l00097"></a>00097                                         <span class="keywordflow">break</span>;
<a name="l00098"></a>00098                                 <span class="keywordflow">case</span> CTelephony::ENotRegisteredNoService:
<a name="l00099"></a>00099                                         theStatus.Append(_L(<span class="stringliteral">&quot;ENotRegisteredNoService\n&quot;</span>));
<a name="l00100"></a>00100                                         <span class="keywordflow">break</span>;
<a name="l00101"></a>00101                                 <span class="keywordflow">case</span> CTelephony::ENotRegisteredEmergencyOnly:
<a name="l00102"></a>00102                                         theStatus.Append(_L(<span class="stringliteral">&quot;ENotRegisteredEmergencyOnly\n&quot;</span>));
<a name="l00103"></a>00103                                         <span class="keywordflow">break</span>;
<a name="l00104"></a>00104                                 <span class="keywordflow">case</span> CTelephony::ENotRegisteredSearching:
<a name="l00105"></a>00105                                         theStatus.Append(_L(<span class="stringliteral">&quot;ENotRegisteredSearching\n&quot;</span>));
<a name="l00106"></a>00106                                         <span class="keywordflow">break</span>;
<a name="l00107"></a>00107                                 <span class="keywordflow">case</span> CTelephony::ERegisteredBusy:
<a name="l00108"></a>00108                                         theStatus.Append(_L(<span class="stringliteral">&quot;ERegisteredBusy\n&quot;</span>));
<a name="l00109"></a>00109                                         <span class="keywordflow">break</span>;
<a name="l00110"></a>00110                                 <span class="keywordflow">case</span> CTelephony::ERegisteredOnHomeNetwork:
<a name="l00111"></a>00111                                         theStatus.Append(_L(<span class="stringliteral">&quot;ERegisteredOnHomeNetwork\n&quot;</span>));
<a name="l00112"></a>00112                                         <span class="keywordflow">break</span>;
<a name="l00113"></a>00113                                 <span class="keywordflow">case</span> CTelephony::ERegistrationDenied:
<a name="l00114"></a>00114                                         theStatus.Append(_L(<span class="stringliteral">&quot;ERegistrationDenied\n&quot;</span>));
<a name="l00115"></a>00115                                         <span class="keywordflow">break</span>;
<a name="l00116"></a>00116                                 <span class="keywordflow">case</span> CTelephony::ERegisteredRoaming:
<a name="l00117"></a>00117                                         theStatus.Append(_L(<span class="stringliteral">&quot;ERegisteredRoaming\n&quot;</span>));
<a name="l00118"></a>00118                                         <span class="keywordflow">break</span>;
<a name="l00119"></a>00119                                 <span class="keywordflow">default</span>:
<a name="l00120"></a>00120                                         <span class="keywordflow">break</span>;
<a name="l00121"></a>00121                         }
<a name="l00122"></a>00122                 gConsole-&gt;Printf(theStatus);
<a name="l00123"></a>00123                 }
<a name="l00124"></a>00124         <a class="code" href="class_c_i_s_v_a_p_i_async.html#a642c32a2c5a3a4eec17863139e468a33">iRequestNotify</a> = EFalse;
<a name="l00125"></a>00125         <span class="keywordflow">if</span> (isNotification)
<a name="l00126"></a>00126                 {
<a name="l00127"></a>00127                 <a class="code" href="class_c_i_s_v_a_p_i_async.html#a73c9f6fcfca70e6c894a3e0fede9eb25">ExampleNotify</a>();
<a name="l00128"></a>00128                 }
<a name="l00129"></a>00129         <span class="keywordflow">else</span>
<a name="l00130"></a>00130                 {
<a name="l00131"></a>00131                 <a class="code" href="class_c_i_s_v_a_p_i_async.html#a61721ea015629deb8c8db529c68f2bd4">ExampleComplete</a>();
<a name="l00132"></a>00132                 }
<a name="l00133"></a>00133         }
<a name="l00134"></a>00134 
<a name="l00139"></a><a class="code" href="class_c_network_reg_info.html#a19c26e7c01ab757451b427a1f2d76c26">00139</a> <span class="keywordtype">void</span> <a class="code" href="class_c_network_reg_info.html#a19c26e7c01ab757451b427a1f2d76c26">CNetworkRegInfo::RequestNotificationL</a>()
<a name="l00140"></a>00140         {
<a name="l00141"></a>00141         <span class="comment">/*</span>
<a name="l00142"></a>00142 <span class="comment">        Panics if this object is already performing an asynchronous</span>
<a name="l00143"></a>00143 <span class="comment">        operation. Application will panic if you call SetActive() on an already</span>
<a name="l00144"></a>00144 <span class="comment">        active object.</span>
<a name="l00145"></a>00145 <span class="comment">        */</span>
<a name="l00146"></a>00146         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>( KNotifyPanic, <span class="stringliteral">&quot;CNetworkReg Notify Method&quot;</span> );
<a name="l00147"></a>00147         __ASSERT_ALWAYS( !IsActive(), User::Panic( KNotifyPanic, 1 ));
<a name="l00148"></a>00148         <a class="code" href="class_c_i_s_v_a_p_i_async.html#a642c32a2c5a3a4eec17863139e468a33">iRequestNotify</a> = ETrue;
<a name="l00149"></a>00149         iTelephony-&gt;NotifyChange(       iStatus,
<a name="l00150"></a>00150                                                                 CTelephony::ENetworkRegistrationStatusChange,
<a name="l00151"></a>00151                                                                 iNetworkRegV1Pckg );
<a name="l00152"></a>00152         SetActive();
<a name="l00153"></a>00153         }
<a name="l00154"></a>00154 
<a name="l00158"></a>00158 <span class="keywordtype">void</span> CNetworkRegInfo::DoCancel()
<a name="l00159"></a>00159         {
<a name="l00160"></a>00160         <a class="code" href="class_c_i_s_v_a_p_i_async.html#a642c32a2c5a3a4eec17863139e468a33">iRequestNotify</a> = EFalse;
<a name="l00161"></a>00161         iTelephony-&gt;CancelAsync(CTelephony::ENetworkRegistrationStatusChangeCancel);
<a name="l00162"></a>00162         }
</pre></div>
<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
     <p class="copyright">Copyright &#169;2010 Nokia Corporation and/or its subsidiary(-ies).<br /> All rights
reserved. Unless otherwise stated, these materials are provided under the terms of the <a href=" http://www.eclipse.org/legal/epl-v10.html"> Eclipse Public License
v1.0</a>.</p> 
   </div>
  </div>
  <?php include_once (CURRENT_SKIN_PATH.'/sdl_footer.html'); ?>
 </body>
</html>
