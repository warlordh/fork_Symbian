<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TB9.2 Example Applications: examples/Graphics/Bitmaps/BitmapsShell.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
<link type="text/css" rel="stylesheet" href="css/common.css" media="screen"/>
<link type="text/css" rel="stylesheet" href="css/sdl.css" media="screen"/>

<!--[if IE]>
<link href="css/iefix.css" rel="stylesheet" type="text/css" media="screen" />
<![endif]-->
</head>
<body class="kernelguide">
    
     <?php include_once (CURRENT_SKIN_PATH.'/sdl_header.html'); ?>
  <div id="sdl_container">
   <div id="leftMenu">
    <div id="expandcontractdiv">
     <a id="collapseTree" href="javascript:tree.collapseAll()">
      Collapse all
     </a>
     <a id="index" href="index.html">
      Symbian^3 Product Developer Library
     </a>
    </div>
    <iframe style="border:none" height="800" width="300" src="index-toc.html"></iframe>
<div id="treeDiv1">
     &#160;
    </div>
    <script type="text/javascript">
     var currentIconMode = 0;
	YAHOO.util.Event.onDOMReady(buildTree, this,true);
    </script>
   </div>
   <div id="sdl_content">
<!-- Generated by Doxygen 1.6.2 -->
<h1>examples/Graphics/Bitmaps/BitmapsShell.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright (c) 2000-2009 Nokia Corporation and/or its subsidiary(-ies).</span>
<a name="l00002"></a>00002 <span class="comment">// All rights reserved.</span>
<a name="l00003"></a>00003 <span class="comment">// This component and the accompanying materials are made available</span>
<a name="l00004"></a>00004 <span class="comment">// under the terms of &quot;Eclipse Public License v1.0&quot;</span>
<a name="l00005"></a>00005 <span class="comment">// which accompanies this distribution, and is available</span>
<a name="l00006"></a>00006 <span class="comment">// at the URL &quot;http://www.eclipse.org/legal/epl-v10.html&quot;.</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Initial Contributors:</span>
<a name="l00009"></a>00009 <span class="comment">// Nokia Corporation - initial contribution.</span>
<a name="l00010"></a>00010 <span class="comment">//</span>
<a name="l00011"></a>00011 <span class="comment">// Contributors:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// Description:</span>
<a name="l00014"></a>00014 <span class="comment">// BitmapsGraphicsShell.cpp</span>
<a name="l00015"></a>00015 <span class="comment">//</span>
<a name="l00016"></a>00016 
<a name="l00017"></a>00017 <span class="preprocessor">#include &lt;e32keys.h&gt;</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="preprocessor">#include &lt;coemain.h&gt;</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 <span class="preprocessor">#include &lt;eikenv.h&gt;</span>
<a name="l00022"></a>00022 <span class="preprocessor">#include &lt;eikdef.h&gt;</span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;eikon.hrh&gt;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;eiklabel.h&gt;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &lt;eikstart.h&gt;</span>
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;bitmapsshell.rsg&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;BitmapsShell.hrh&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;BitmapsShell.h&quot;</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="comment">//</span>
<a name="l00033"></a>00033 <span class="comment">// TExampleShellModel</span>
<a name="l00034"></a>00034 <span class="comment">//</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 TExampleShellModel::TExampleShellModel()
<a name="l00037"></a>00037         {
<a name="l00038"></a>00038         iLibrary=KNullDesC;
<a name="l00039"></a>00039         }
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 TBool TExampleShellModel::Differs(<span class="keyword">const</span> <a class="code" href="class_t_example_shell_model.html">TExampleShellModel</a>* aCompare)<span class="keyword"> const</span>
<a name="l00042"></a>00042 <span class="keyword">        </span>{
<a name="l00043"></a>00043         <span class="keywordflow">return</span>((*(TInt32*)<span class="keyword">this</span>)!=(*(TInt32*)aCompare));
<a name="l00044"></a>00044         }
<a name="l00045"></a>00045 
<a name="l00046"></a>00046 <span class="comment">//</span>
<a name="l00047"></a>00047 <span class="comment">// class CExampleShellContainer</span>
<a name="l00048"></a>00048 <span class="comment">//</span>
<a name="l00049"></a>00049 
<a name="l00050"></a>00050 <span class="keywordtype">void</span> CExampleShellContainer::ConstructL(<span class="keyword">const</span> TRect&amp; aRect, <a class="code" href="class_t_example_shell_model.html">TExampleShellModel</a>* aModel)
<a name="l00051"></a>00051     {
<a name="l00052"></a>00052         iModel=aModel;
<a name="l00053"></a>00053     CreateWindowL();
<a name="l00054"></a>00054     Window().SetShadowDisabled(ETrue);
<a name="l00055"></a>00055     iContext=<span class="keyword">this</span>;
<a name="l00056"></a>00056         iBrushStyle=CGraphicsContext::ESolidBrush;
<a name="l00057"></a>00057     iBrushColor=KRgbWhite;
<a name="l00058"></a>00058     SetRect(aRect);
<a name="l00059"></a>00059         CreateLabelL();
<a name="l00060"></a>00060     ActivateL();
<a name="l00061"></a>00061     }
<a name="l00062"></a>00062 
<a name="l00063"></a>00063 CExampleShellContainer::~CExampleShellContainer()
<a name="l00064"></a>00064     {
<a name="l00065"></a>00065         <span class="keyword">delete</span> iExampleControl;
<a name="l00066"></a>00066         <span class="keyword">delete</span> iLabel;
<a name="l00067"></a>00067     }
<a name="l00068"></a>00068     
<a name="l00069"></a>00069 TInt CExampleShellContainer::CountComponentControls()<span class="keyword"> const</span>
<a name="l00070"></a>00070 <span class="keyword">        </span>{
<a name="l00071"></a>00071         <span class="keywordflow">return</span> 1 + (iExampleControl ? 1 : 0);
<a name="l00072"></a>00072         }
<a name="l00073"></a>00073 
<a name="l00074"></a>00074 CCoeControl* CExampleShellContainer::ComponentControl(TInt aIndex)<span class="keyword"> const</span>
<a name="l00075"></a>00075 <span class="keyword">        </span>{
<a name="l00076"></a>00076         <span class="keywordflow">switch</span> (aIndex)
<a name="l00077"></a>00077                 {
<a name="l00078"></a>00078         <span class="keywordflow">case</span> 0: <span class="keywordflow">return</span> iLabel;
<a name="l00079"></a>00079         <span class="keywordflow">case</span> 1: <span class="keywordflow">return</span> iExampleControl;
<a name="l00080"></a>00080         <span class="keywordflow">default</span>: <span class="keywordflow">return</span> 0;
<a name="l00081"></a>00081                 };
<a name="l00082"></a>00082         }
<a name="l00083"></a>00083 
<a name="l00084"></a>00084 <span class="keyword">const</span> TInt KLabelHeight=20;
<a name="l00085"></a>00085 
<a name="l00086"></a>00086 <span class="keywordtype">void</span> CExampleShellContainer::CreateLabelL()
<a name="l00087"></a>00087         {
<a name="l00088"></a>00088         iLabel=<span class="keyword">new</span> (ELeave) CEikLabel;
<a name="l00089"></a>00089         TRect rect=Rect();
<a name="l00090"></a>00090         rect.iTl.iY=rect.iBr.iY-KLabelHeight; <span class="comment">// make it bottom 20 pixels</span>
<a name="l00091"></a>00091         iLabel-&gt;SetContainerWindowL(*<span class="keyword">this</span>);
<a name="l00092"></a>00092         iLabel-&gt;SetRect(rect);
<a name="l00093"></a>00093         iLabel-&gt;SetAlignment(EHCenterVCenter); <span class="comment">// center text</span>
<a name="l00094"></a>00094         iLabel-&gt;SetBufferReserveLengthL(200); <span class="comment">// nice long buffer</span>
<a name="l00095"></a>00095         iLabel-&gt;SetFont(iEikonEnv-&gt;AnnotationFont());
<a name="l00096"></a>00096         iLabel-&gt;ActivateL(); <span class="comment">// now ready</span>
<a name="l00097"></a>00097         }
<a name="l00098"></a>00098 
<a name="l00099"></a>00099 <span class="keywordtype">void</span> CExampleShellContainer::ResetExampleL(<a class="code" href="class_c_graphic_example_control.html">CGraphicExampleControl</a>* aExample)
<a name="l00100"></a>00100         {
<a name="l00101"></a>00101         <span class="comment">// get rid of old control</span>
<a name="l00102"></a>00102         <span class="keyword">delete</span> iExampleControl;
<a name="l00103"></a>00103         <span class="comment">// set up new one</span>
<a name="l00104"></a>00104         iExampleControl=aExample;
<a name="l00105"></a>00105         <span class="comment">// if non-zero, then carry on</span>
<a name="l00106"></a>00106         <span class="keywordflow">if</span> (!iExampleControl) <span class="keywordflow">return</span>;
<a name="l00107"></a>00107         TRect rect=Rect(); <span class="comment">// get our rect</span>
<a name="l00108"></a>00108         rect.iBr.iY-=KLabelHeight; <span class="comment">// make way for label</span>
<a name="l00109"></a>00109         rect.Shrink(2,2); <span class="comment">// shrink it a bit</span>
<a name="l00110"></a>00110         iExampleControl-&gt;ConstructL(rect,<span class="keyword">this</span>,*<span class="keyword">this</span>); <span class="comment">// construct, giving rect and observer</span>
<a name="l00111"></a>00111         }
<a name="l00112"></a>00112 
<a name="l00113"></a>00113 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtFinished,<span class="stringliteral">&quot;example finished&quot;</span>);
<a name="l00114"></a>00114 <span class="keywordtype">void</span> CExampleShellContainer::NotifyGraphicExampleFinished()
<a name="l00115"></a>00115         {
<a name="l00116"></a>00116         NotifyStatus(KTxtFinished);
<a name="l00117"></a>00117         }
<a name="l00118"></a>00118 
<a name="l00119"></a>00119 <span class="keywordtype">void</span> CExampleShellContainer::NotifyStatus(<span class="keyword">const</span> TDesC&amp; aMessage)
<a name="l00120"></a>00120         {
<a name="l00121"></a>00121         TRAPD(err,iLabel-&gt;SetTextL(aMessage));
<a name="l00122"></a>00122         <span class="keywordflow">if</span>(err)
<a name="l00123"></a>00123                 {
<a name="l00124"></a>00124                 <span class="keywordflow">return</span>;
<a name="l00125"></a>00125                 }
<a name="l00126"></a>00126         <span class="keywordflow">if</span> (IsActivated()) iLabel-&gt;DrawNow();
<a name="l00127"></a>00127         }
<a name="l00128"></a>00128 
<a name="l00129"></a>00129 TKeyResponse CExampleShellContainer::OfferKeyEventL(<span class="keyword">const</span> TKeyEvent&amp; aKeyEvent,TEventCode aType)
<a name="l00130"></a>00130     {
<a name="l00131"></a>00131         <span class="keywordflow">if</span>      (iExampleControl)
<a name="l00132"></a>00132                 <span class="keywordflow">return</span> iExampleControl-&gt;OfferKeyEventL(aKeyEvent,aType);
<a name="l00133"></a>00133         <span class="keywordflow">else</span>
<a name="l00134"></a>00134                 <span class="keywordflow">return</span> EKeyWasNotConsumed;
<a name="l00135"></a>00135     }
<a name="l00136"></a>00136 
<a name="l00137"></a>00137 <span class="keywordtype">void</span> CExampleShellContainer::Draw(<span class="keyword">const</span> TRect&amp; <span class="comment">/*aRect*/</span>)<span class="keyword"> const</span>
<a name="l00138"></a>00138 <span class="keyword">        </span>{
<a name="l00139"></a>00139         CWindowGc&amp; gc = SystemGc();
<a name="l00140"></a>00140         gc.SetPenStyle(CGraphicsContext::ENullPen);
<a name="l00141"></a>00141         gc.SetBrushStyle(CGraphicsContext::ESolidBrush);
<a name="l00142"></a>00142         gc.DrawRect(Rect());
<a name="l00143"></a>00143         }
<a name="l00144"></a>00144 
<a name="l00145"></a>00145 <span class="comment">//</span>
<a name="l00146"></a>00146 <span class="comment">// CExampleShellAppUi</span>
<a name="l00147"></a>00147 <span class="comment">//</span>
<a name="l00148"></a>00148 
<a name="l00149"></a>00149 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTxtInitialized,<span class="stringliteral">&quot;initialized&quot;</span>);
<a name="l00150"></a>00150 <span class="keywordtype">void</span> CExampleShellAppUi::ConstructL()
<a name="l00151"></a>00151     {
<a name="l00152"></a>00152     BaseConstructL();
<a name="l00153"></a>00153         iModel=((<a class="code" href="class_c_example_shell_document.html">CExampleShellDocument</a>*)iDocument)-&gt;Model();
<a name="l00154"></a>00154     iContainer=<span class="keyword">new</span>(ELeave) <a class="code" href="class_c_example_shell_container.html">CExampleShellContainer</a>;
<a name="l00155"></a>00155     iContainer-&gt;ConstructL(ClientRect(),iModel);
<a name="l00156"></a>00156         iContainer-&gt;NotifyStatus(KTxtInitialized);
<a name="l00157"></a>00157         <span class="comment">// add container to stack; enables key event handling.</span>
<a name="l00158"></a>00158         AddToStackL(iContainer);
<a name="l00159"></a>00159     }
<a name="l00160"></a>00160 
<a name="l00161"></a>00161 <span class="keywordtype">void</span> CExampleShellAppUi::HandleCommandL(TInt aCommand)
<a name="l00162"></a>00162         {
<a name="l00163"></a>00163         <span class="keywordflow">switch</span> (aCommand)
<a name="l00164"></a>00164                 {
<a name="l00165"></a>00165         <span class="keywordflow">case</span> EExampleShellSelectBitmap:
<a name="l00166"></a>00166                 iContainer-&gt;ResetExampleL(<span class="keyword">new</span> (ELeave) <a class="code" href="class_c_bitmap_control.html">CBitmapControl</a>);
<a name="l00167"></a>00167                 <span class="keywordflow">return</span>;
<a name="l00168"></a>00168         <span class="keywordflow">case</span> EExampleShellSelectFbs:
<a name="l00169"></a>00169                 iContainer-&gt;ResetExampleL(<span class="keyword">new</span> (ELeave) <a class="code" href="class_c_fbs_control.html">CFbsControl</a>);
<a name="l00170"></a>00170                 <span class="keywordflow">return</span>;
<a name="l00171"></a>00171         <span class="keywordflow">case</span> EEikCmdExit:
<a name="l00172"></a>00172                 Exit();
<a name="l00173"></a>00173                 <span class="keywordflow">return</span>;
<a name="l00174"></a>00174                 }
<a name="l00175"></a>00175         }
<a name="l00176"></a>00176 
<a name="l00177"></a>00177 CExampleShellAppUi::~CExampleShellAppUi()
<a name="l00178"></a>00178         {
<a name="l00179"></a>00179         RemoveFromStack(iContainer);
<a name="l00180"></a>00180     <span class="keyword">delete</span> iContainer;
<a name="l00181"></a>00181         }
<a name="l00182"></a>00182 
<a name="l00183"></a>00183 <span class="comment">//</span>
<a name="l00184"></a>00184 <span class="comment">// CExampleShellDocument</span>
<a name="l00185"></a>00185 <span class="comment">//</span>
<a name="l00186"></a>00186 
<a name="l00187"></a>00187 CEikAppUi* CExampleShellDocument::CreateAppUiL()
<a name="l00188"></a>00188         {
<a name="l00189"></a>00189     <span class="keywordflow">return</span>(<span class="keyword">new</span>(ELeave) <a class="code" href="class_c_example_shell_app_ui.html">CExampleShellAppUi</a>);
<a name="l00190"></a>00190         }
<a name="l00191"></a>00191 
<a name="l00192"></a>00192 <span class="comment">//</span>
<a name="l00193"></a>00193 <span class="comment">// CExampleShellApplication</span>
<a name="l00194"></a>00194 <span class="comment">//</span>
<a name="l00195"></a>00195 
<a name="l00196"></a>00196 TUid CExampleShellApplication::AppDllUid()<span class="keyword"> const</span>
<a name="l00197"></a>00197 <span class="keyword">        </span>{
<a name="l00198"></a>00198         <span class="keywordflow">return</span> KUidExampleShellApp;
<a name="l00199"></a>00199         }
<a name="l00200"></a>00200 
<a name="l00201"></a>00201 CApaDocument* CExampleShellApplication::CreateDocumentL()
<a name="l00202"></a>00202         {
<a name="l00203"></a>00203         <span class="keywordflow">return</span> <span class="keyword">new</span>(ELeave) <a class="code" href="class_c_example_shell_document.html">CExampleShellDocument</a>(*<span class="keyword">this</span>);
<a name="l00204"></a>00204         }
<a name="l00205"></a>00205 
<a name="l00206"></a>00206 <span class="comment">//</span>
<a name="l00207"></a>00207 <span class="comment">// EXPORTed functions</span>
<a name="l00208"></a>00208 <span class="comment">//</span>
<a name="l00209"></a>00209 
<a name="l00210"></a>00210 EXPORT_C CApaApplication* NewApplication()
<a name="l00211"></a>00211         {
<a name="l00212"></a>00212         <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="class_c_example_shell_application.html">CExampleShellApplication</a>;
<a name="l00213"></a>00213         }
<a name="l00214"></a>00214 
<a name="l00215"></a>00215 GLDEF_C TInt E32Main()
<a name="l00216"></a>00216         {
<a name="l00217"></a>00217         <span class="keywordflow">return</span> EikStart::RunApplication(NewApplication);
<a name="l00218"></a>00218         }
</pre></div>
<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
     <p class="copyright">Copyright &#169;2010 Nokia Corporation and/or its subsidiary(-ies).<br /> All rights
reserved. Unless otherwise stated, these materials are provided under the terms of the <a href=" http://www.eclipse.org/legal/epl-v10.html"> Eclipse Public License
v1.0</a>.</p> 
   </div>
  </div>
  <?php include_once (CURRENT_SKIN_PATH.'/sdl_footer.html'); ?>
 </body>
</html>
