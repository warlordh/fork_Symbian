<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TB9.2 Example Applications: examples/ForumNokia/ImageConverter/src/ImageConverterAppUi.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
<link type="text/css" rel="stylesheet" href="css/common.css" media="screen"/>
<link type="text/css" rel="stylesheet" href="css/sdl.css" media="screen"/>

<!--[if IE]>
<link href="css/iefix.css" rel="stylesheet" type="text/css" media="screen" />
<![endif]-->
</head>
<body class="kernelguide">
    
     <?php include_once (CURRENT_SKIN_PATH.'/sdl_header.html'); ?>
  <div id="sdl_container">
   <div id="leftMenu">
    <div id="expandcontractdiv">
     <a id="collapseTree" href="javascript:tree.collapseAll()">
      Collapse all
     </a>
     <a id="index" href="index.html">
      Symbian^3 Product Developer Library
     </a>
    </div>
    <iframe style="border:none" height="800" width="300" src="index-toc.html"></iframe>
<div id="treeDiv1">
     &#160;
    </div>
    <script type="text/javascript">
     var currentIconMode = 0;
	YAHOO.util.Event.onDOMReady(buildTree, this,true);
    </script>
   </div>
   <div id="sdl_content">
<!-- Generated by Doxygen 1.6.2 -->
<h1>examples/ForumNokia/ImageConverter/src/ImageConverterAppUi.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright © 2008 Nokia Corporation.</span>
<a name="l00003"></a>00003 <span class="comment"> */</span>
<a name="l00004"></a>00004 
<a name="l00005"></a>00005 
<a name="l00006"></a>00006 <span class="comment">// INCLUDE FILES</span>
<a name="l00007"></a>00007 <span class="preprocessor">#include &quot;ImageConverterApp.h&quot;</span>
<a name="l00008"></a>00008 <span class="preprocessor">#include &quot;ImageConverterAppUi.h&quot;</span>
<a name="l00009"></a>00009 <span class="preprocessor">#include &quot;ImageConverterContainer.h&quot;</span> 
<a name="l00010"></a>00010 <span class="preprocessor">#include &quot;ImageConverterEngine.h&quot;</span>
<a name="l00011"></a>00011 <span class="preprocessor">#include &quot;imageconverter.hrh&quot;</span>
<a name="l00012"></a>00012 <span class="preprocessor">#include &quot;encoderselectiondialog.h&quot;</span>
<a name="l00013"></a>00013 <span class="preprocessor">#include &quot;showinfodialog.h&quot;</span>
<a name="l00014"></a>00014 <span class="preprocessor">#include &lt;ImageConverter.rsg&gt;</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 
<a name="l00017"></a>00017 <span class="preprocessor">#include &lt;aknmessagequerydialog.h&gt;</span>
<a name="l00018"></a>00018 <span class="preprocessor">#include &lt;hlplch.h&gt;</span>
<a name="l00019"></a>00019 <span class="preprocessor">#include &lt;avkon.hrh&gt;</span>
<a name="l00020"></a>00020 <span class="preprocessor">#include &lt;avkon.rsg&gt;</span>
<a name="l00021"></a>00021 <span class="preprocessor">#include &lt;caknfileselectiondialog.h&gt;</span>
<a name="l00022"></a>00022 <span class="preprocessor">#include &lt;akncommondialogs.h&gt;</span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;imageconversion.h&gt;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;eikmenup.h&gt;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &lt;aknglobalnote.h&gt;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;pathinfo.h&gt;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;aknquerydialog.h&gt;</span>
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="keyword">const</span> TInt KScaleUpFactor = 150;    <span class="comment">// Scale up by 50%</span>
<a name="l00030"></a>00030 <span class="keyword">const</span> TInt KScaleDownFactor = 50;   <span class="comment">// Scale down by 50%</span>
<a name="l00031"></a>00031 <span class="keyword">const</span> TInt KMaxInfoMsgLength = 50;
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 <span class="keyword">const</span> TInt KMaxInfoDescriptorLength = 80;
<a name="l00034"></a>00034 
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="comment">// We specify a custom cleanup method for the RImageTypeDescriptionArray used</span>
<a name="l00037"></a>00037 <span class="comment">// in CImageConverterAppUi::HandleSaveAsL(). This way we can, in that method, </span>
<a name="l00038"></a>00038 <span class="comment">// simply call CleanupStack::PopAndDestroy() on the array and do whatever </span>
<a name="l00039"></a>00039 <span class="comment">// additional cleanup we need here. In this case ResetAndDestroy() is called </span>
<a name="l00040"></a>00040 <span class="comment">// on the array to release resources consumed by it.</span>
<a name="l00041"></a>00041 <span class="comment">// In general, creating a custom cleanup method allows cleanup to be more </span>
<a name="l00042"></a>00042 <span class="comment">// sophisticated than simply deleting objects, for example, releasing access to </span>
<a name="l00043"></a>00043 <span class="comment">// some shared resource.</span>
<a name="l00044"></a>00044 <span class="keywordtype">void</span> CleanupRArray( TAny* <span class="keywordtype">object</span> )
<a name="l00045"></a>00045     {
<a name="l00046"></a>00046     ((RImageTypeDescriptionArray*)<span class="keywordtype">object</span>)-&gt;ResetAndDestroy();
<a name="l00047"></a>00047     }
<a name="l00048"></a>00048 
<a name="l00049"></a>00049 <span class="comment">// ================= MEMBER FUNCTIONS =======================</span>
<a name="l00050"></a>00050 <span class="comment">//</span>
<a name="l00051"></a>00051 <span class="comment">// ----------------------------------------------------------</span>
<a name="l00052"></a>00052 <span class="comment">// CImageConverterAppUi::ConstructL()</span>
<a name="l00053"></a>00053 <span class="comment">// </span>
<a name="l00054"></a>00054 <span class="comment">// ----------------------------------------------------------</span>
<a name="l00055"></a>00055 <span class="comment">//</span>
<a name="l00056"></a><a class="code" href="class_c_image_converter_app_ui.html#a1eefc3df4d448eef1c9563a1602df6f6">00056</a> <span class="keywordtype">void</span> <a class="code" href="class_c_image_converter_app_ui.html#a1eefc3df4d448eef1c9563a1602df6f6">CImageConverterAppUi::ConstructL</a>()
<a name="l00057"></a>00057     {
<a name="l00058"></a>00058 <span class="preprocessor">    #ifdef __TUI_SUPPORTED__</span>
<a name="l00059"></a>00059 <span class="preprocessor"></span>    BaseConstructL(EAknEnableSkin | EAknTouchCompatible);
<a name="l00060"></a>00060 <span class="preprocessor">    #else</span>
<a name="l00061"></a>00061 <span class="preprocessor"></span>    BaseConstructL(EAknEnableSkin);
<a name="l00062"></a>00062 <span class="preprocessor">    #endif</span>
<a name="l00063"></a>00063 <span class="preprocessor"></span>    
<a name="l00064"></a>00064     
<a name="l00065"></a>00065     SearchOptionsButtonPosition();
<a name="l00066"></a>00066 
<a name="l00067"></a>00067     iImageLoaded = EFalse;
<a name="l00068"></a>00068     iConverter = CImageConverterEngine::NewL( <span class="keyword">this</span> );
<a name="l00069"></a>00069     
<a name="l00070"></a>00070     iAppContainer = <span class="keyword">new</span> (ELeave) <a class="code" href="class_c_image_converter_container.html">CImageConverterContainer</a>;
<a name="l00071"></a>00071     iAppContainer-&gt;SetMopParent( <span class="keyword">this</span> );
<a name="l00072"></a>00072     iAppContainer-&gt;<a class="code" href="class_c_image_converter_container.html#a70506cf9d1c6b729c955eb253c33d975">ConstructL</a>( ClientRect() );
<a name="l00073"></a>00073     AddToStackL( iAppContainer );   
<a name="l00074"></a>00074     
<a name="l00075"></a>00075 
<a name="l00076"></a>00076     ReadImageDirectoryL();
<a name="l00077"></a>00077     ReadImage(0);
<a name="l00078"></a>00078     }
<a name="l00079"></a>00079 
<a name="l00080"></a>00080 <span class="comment">// ----------------------------------------------------</span>
<a name="l00081"></a>00081 <span class="comment">// CImageConverterAppUi::~CImageConverterAppUi()</span>
<a name="l00082"></a>00082 <span class="comment">// Destructor</span>
<a name="l00083"></a>00083 <span class="comment">// Frees reserved resources</span>
<a name="l00084"></a>00084 <span class="comment">// ----------------------------------------------------</span>
<a name="l00085"></a>00085 <span class="comment">//</span>
<a name="l00086"></a><a class="code" href="class_c_image_converter_app_ui.html#ae012826d3dbe233b3de25971abc2ee51">00086</a> <a class="code" href="class_c_image_converter_app_ui.html#ae012826d3dbe233b3de25971abc2ee51">CImageConverterAppUi::~CImageConverterAppUi</a>()
<a name="l00087"></a>00087     {
<a name="l00088"></a>00088     <span class="keywordflow">if</span> (iAppContainer)
<a name="l00089"></a>00089         {
<a name="l00090"></a>00090         RemoveFromStack( iAppContainer );
<a name="l00091"></a>00091         <span class="keyword">delete</span> iAppContainer;
<a name="l00092"></a>00092         }
<a name="l00093"></a>00093  
<a name="l00094"></a>00094     <span class="keywordflow">if</span> (iConverter)
<a name="l00095"></a>00095         {
<a name="l00096"></a>00096         iConverter-&gt;Cancel();
<a name="l00097"></a>00097         <span class="keyword">delete</span> iConverter;
<a name="l00098"></a>00098         }
<a name="l00099"></a>00099 
<a name="l00100"></a>00100     <span class="keyword">delete</span> iSaveAs;
<a name="l00101"></a>00101     <span class="keyword">delete</span> iInfoDialog;
<a name="l00102"></a>00102     <span class="keyword">delete</span> iInfoStrings;
<a name="l00103"></a>00103     
<a name="l00104"></a>00104     iFiles.Close();
<a name="l00105"></a>00105     }
<a name="l00106"></a>00106 
<a name="l00107"></a>00107 <span class="comment">// ----------------------------------------------------</span>
<a name="l00108"></a>00108 <span class="comment">// CImageConverterAppUi::DynInitMenuPaneL(</span>
<a name="l00109"></a>00109 <span class="comment">//    TInt aResourceId,CEikMenuPane* aMenuPane)</span>
<a name="l00110"></a>00110 <span class="comment">// Handle dynamic menu initialization</span>
<a name="l00111"></a>00111 <span class="comment">// ----------------------------------------------------</span>
<a name="l00112"></a>00112 <span class="comment">//</span>
<a name="l00113"></a>00113 <span class="keywordtype">void</span> CImageConverterAppUi::DynInitMenuPaneL(
<a name="l00114"></a>00114     TInt aResourceId,CEikMenuPane* aMenuPane)
<a name="l00115"></a>00115     {
<a name="l00116"></a>00116     <span class="keywordflow">if</span>( aResourceId == R_IMAGECONVERTER_MENU ) 
<a name="l00117"></a>00117         {
<a name="l00118"></a>00118         <span class="keywordflow">if</span>( !iImageLoaded ) 
<a name="l00119"></a>00119             {
<a name="l00120"></a>00120             <span class="comment">// if there is no image loaded do not show these menu items</span>
<a name="l00121"></a>00121             aMenuPane-&gt;SetItemDimmed( EImageConverterCmdSaveAs, <span class="keyword">true</span> );
<a name="l00122"></a>00122             aMenuPane-&gt;SetItemDimmed( EImageConverterCmdInfo, <span class="keyword">true</span> );
<a name="l00123"></a>00123             aMenuPane-&gt;SetItemDimmed( EImageConverterCmdRotate, <span class="keyword">true</span> );
<a name="l00124"></a>00124             aMenuPane-&gt;SetItemDimmed( EImageConverterCmdZoomOut, <span class="keyword">true</span> );
<a name="l00125"></a>00125             aMenuPane-&gt;SetItemDimmed( EImageConverterCmdZoomIn, <span class="keyword">true</span> );
<a name="l00126"></a>00126             }
<a name="l00127"></a>00127         <span class="keywordflow">else</span> 
<a name="l00128"></a>00128             {
<a name="l00129"></a>00129             aMenuPane-&gt;SetItemDimmed( EImageConverterCmdSaveAs, <span class="keyword">false</span> );
<a name="l00130"></a>00130             aMenuPane-&gt;SetItemDimmed( EImageConverterCmdInfo, <span class="keyword">false</span> );
<a name="l00131"></a>00131             aMenuPane-&gt;SetItemDimmed( EImageConverterCmdRotate, <span class="keyword">false</span> );
<a name="l00132"></a>00132             aMenuPane-&gt;SetItemDimmed( EImageConverterCmdZoomOut, <span class="keyword">false</span> );
<a name="l00133"></a>00133             <span class="keywordflow">if</span> (iConverter &amp;&amp; iConverter-&gt;CanDownScaleMore())
<a name="l00134"></a>00134                 {
<a name="l00135"></a>00135                 aMenuPane-&gt;SetItemDimmed( EImageConverterCmdZoomIn, <span class="keyword">false</span> );
<a name="l00136"></a>00136                 }
<a name="l00137"></a>00137             <span class="keywordflow">else</span>
<a name="l00138"></a>00138                 {
<a name="l00139"></a>00139                 aMenuPane-&gt;SetItemDimmed( EImageConverterCmdZoomIn, <span class="keyword">true</span> );
<a name="l00140"></a>00140                 }
<a name="l00141"></a>00141             }
<a name="l00142"></a>00142         }
<a name="l00143"></a>00143     }
<a name="l00144"></a>00144 
<a name="l00145"></a>00145 <span class="keywordtype">void</span> CImageConverterAppUi::DoEvent(EPointerEvents aEvent)
<a name="l00146"></a>00146     {
<a name="l00147"></a>00147     <span class="keywordflow">switch</span> (aEvent)
<a name="l00148"></a>00148         {
<a name="l00149"></a>00149         <span class="keywordflow">case</span> EZoomIn:
<a name="l00150"></a>00150             {
<a name="l00151"></a>00151             iAppContainer-&gt;SetTitleText(ETitleZoomIn,EFalse);
<a name="l00152"></a>00152             <span class="keywordflow">if</span> (iConverter-&gt;Scale( KScaleUpFactor )==KErrNone)
<a name="l00153"></a>00153                 {
<a name="l00154"></a>00154                 iImageLoaded = <span class="keyword">false</span>;
<a name="l00155"></a>00155                 }
<a name="l00156"></a>00156             <span class="keywordflow">break</span>;
<a name="l00157"></a>00157             }
<a name="l00158"></a>00158         <span class="keywordflow">case</span> EZoomOut:
<a name="l00159"></a>00159             {
<a name="l00160"></a>00160             iAppContainer-&gt;ResetTitleText(EFalse);
<a name="l00161"></a>00161             <span class="keywordflow">if</span> (iConverter-&gt;Scale( KScaleDownFactor )==KErrNone)
<a name="l00162"></a>00162                 {
<a name="l00163"></a>00163                 iImageLoaded = <span class="keyword">false</span>;
<a name="l00164"></a>00164                 }
<a name="l00165"></a>00165             <span class="keywordflow">break</span>;
<a name="l00166"></a>00166             }
<a name="l00167"></a>00167         <span class="keywordflow">case</span> ENextImage:
<a name="l00168"></a>00168             {
<a name="l00169"></a>00169             ReadImage(1);
<a name="l00170"></a>00170             <span class="keywordflow">break</span>;
<a name="l00171"></a>00171             }
<a name="l00172"></a>00172         <span class="keywordflow">case</span> EPrevImage:
<a name="l00173"></a>00173             {
<a name="l00174"></a>00174             ReadImage(-1);
<a name="l00175"></a>00175             <span class="keywordflow">break</span>;
<a name="l00176"></a>00176             }
<a name="l00177"></a>00177         <span class="keywordflow">case</span> ERotateRight:
<a name="l00178"></a>00178             {
<a name="l00179"></a>00179             iImageLoaded = <span class="keyword">false</span>;
<a name="l00180"></a>00180             iAppContainer-&gt;SetTitleText(ETitleRotateRight,EFalse);
<a name="l00181"></a>00181             iConverter-&gt;Rotate( CImageConverterEngine::EClockwise90 );
<a name="l00182"></a>00182             <span class="keywordflow">break</span>;
<a name="l00183"></a>00183             }
<a name="l00184"></a>00184         <span class="keywordflow">case</span> ERotateLeft:
<a name="l00185"></a>00185             {
<a name="l00186"></a>00186             iImageLoaded = <span class="keyword">false</span>;
<a name="l00187"></a>00187             iAppContainer-&gt;SetTitleText(ETitleRotateLeft,EFalse);
<a name="l00188"></a>00188             iConverter-&gt;Rotate( CImageConverterEngine::EAntiClockwise90 );
<a name="l00189"></a>00189             <span class="keywordflow">break</span>;
<a name="l00190"></a>00190             }
<a name="l00191"></a>00191         <span class="keywordflow">default</span>:
<a name="l00192"></a>00192             {
<a name="l00193"></a>00193             <span class="keywordflow">break</span>;
<a name="l00194"></a>00194             }
<a name="l00195"></a>00195         };
<a name="l00196"></a>00196     }
<a name="l00197"></a>00197 
<a name="l00198"></a>00198 TState CImageConverterAppUi::EngineState()
<a name="l00199"></a>00199     {
<a name="l00200"></a>00200     <span class="keywordflow">return</span> iConverter-&gt;EngineState();
<a name="l00201"></a>00201     }
<a name="l00202"></a>00202 
<a name="l00203"></a>00203 <span class="comment">// ----------------------------------------------------</span>
<a name="l00204"></a>00204 <span class="comment">// CImageConverterAppUi::HandleKeyEventL(</span>
<a name="l00205"></a>00205 <span class="comment">//     const TKeyEvent&amp; aKeyEvent,TEventCode /*aType*/)</span>
<a name="l00206"></a>00206 <span class="comment">// takes care of key event handling</span>
<a name="l00207"></a>00207 <span class="comment">// ----------------------------------------------------</span>
<a name="l00208"></a>00208 <span class="comment">//</span>
<a name="l00209"></a>00209 TKeyResponse CImageConverterAppUi::HandleKeyEventL(
<a name="l00210"></a>00210     <span class="keyword">const</span> TKeyEvent&amp; aKeyEvent,TEventCode aType)
<a name="l00211"></a>00211     {
<a name="l00212"></a>00212     <span class="comment">// if there is an image loaded, pressing arrow keys causes</span>
<a name="l00213"></a>00213     <span class="comment">// scale and rotate</span>
<a name="l00214"></a>00214     <span class="keywordflow">if</span>( iImageLoaded &amp;&amp; (aType == EEventKey) ) 
<a name="l00215"></a>00215         {
<a name="l00216"></a>00216         <span class="keywordflow">if</span>( aKeyEvent.iCode == EKeyLeftArrow ) 
<a name="l00217"></a>00217             {
<a name="l00218"></a>00218             iAppContainer-&gt;ChangePrevPictureL();
<a name="l00219"></a>00219             <span class="keywordflow">return</span> EKeyWasConsumed;
<a name="l00220"></a>00220             }
<a name="l00221"></a>00221         <span class="keywordflow">else</span> <span class="keywordflow">if</span>( aKeyEvent.iCode == EKeyRightArrow ) 
<a name="l00222"></a>00222             {
<a name="l00223"></a>00223             iAppContainer-&gt;ChangeNextPictureL();
<a name="l00224"></a>00224             <span class="keywordflow">return</span> EKeyWasConsumed;
<a name="l00225"></a>00225             }
<a name="l00226"></a>00226         <span class="keywordflow">else</span> <span class="keywordflow">if</span>( aKeyEvent.iCode == EKeyUpArrow ) 
<a name="l00227"></a>00227             {
<a name="l00228"></a>00228             iAppContainer-&gt;SetTitleText(ETitleZoomIn,ETrue);
<a name="l00229"></a>00229             <span class="keywordflow">if</span> (iConverter-&gt;Scale( KScaleUpFactor )==KErrNone) <span class="comment">// scale up</span>
<a name="l00230"></a>00230                 {
<a name="l00231"></a>00231                 iImageLoaded = <span class="keyword">false</span>;
<a name="l00232"></a>00232                 }
<a name="l00233"></a>00233             <span class="keywordflow">return</span> EKeyWasConsumed;
<a name="l00234"></a>00234             }
<a name="l00235"></a>00235         <span class="keywordflow">else</span> <span class="keywordflow">if</span>( aKeyEvent.iCode == EKeyDownArrow ) 
<a name="l00236"></a>00236             {
<a name="l00237"></a>00237             iAppContainer-&gt;ResetTitleText(ETrue);
<a name="l00238"></a>00238             <span class="keywordflow">if</span> (iConverter-&gt;Scale( KScaleDownFactor )==KErrNone) <span class="comment">// scale up</span>
<a name="l00239"></a>00239                 {
<a name="l00240"></a>00240                 iImageLoaded = <span class="keyword">false</span>;
<a name="l00241"></a>00241                 }
<a name="l00242"></a>00242             <span class="keywordflow">return</span> EKeyWasConsumed;
<a name="l00243"></a>00243             }
<a name="l00244"></a>00244         }
<a name="l00245"></a>00245     <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( iImageLoaded &amp;&amp; aType == EEventKeyDown)
<a name="l00246"></a>00246         {
<a name="l00247"></a>00247         <span class="keywordflow">if</span> (aKeyEvent.iScanCode == <span class="charliteral">&#39;1&#39;</span> || aKeyEvent.iScanCode == <span class="charliteral">&#39;*&#39;</span>)
<a name="l00248"></a>00248             {
<a name="l00249"></a>00249             iAppContainer-&gt;SetTitleText(ETitleRotateLeft,ETrue);
<a name="l00250"></a>00250             iImageLoaded = <span class="keyword">false</span>;
<a name="l00251"></a>00251             iConverter-&gt;Rotate( CImageConverterEngine::EAntiClockwise90 );
<a name="l00252"></a>00252             <span class="keywordflow">return</span> EKeyWasConsumed;
<a name="l00253"></a>00253             }
<a name="l00254"></a>00254         <span class="keywordflow">else</span> <span class="keywordflow">if</span> (aKeyEvent.iScanCode == <span class="charliteral">&#39;3&#39;</span> || aKeyEvent.iScanCode == EStdKeyHash)
<a name="l00255"></a>00255             {
<a name="l00256"></a>00256             iAppContainer-&gt;SetTitleText(ETitleRotateRight,ETrue);
<a name="l00257"></a>00257             iImageLoaded = <span class="keyword">false</span>;
<a name="l00258"></a>00258             iConverter-&gt;Rotate( CImageConverterEngine::EClockwise90 );
<a name="l00259"></a>00259             <span class="keywordflow">return</span> EKeyWasConsumed;
<a name="l00260"></a>00260             }
<a name="l00261"></a>00261         }
<a name="l00262"></a>00262     <span class="keywordflow">return</span> EKeyWasNotConsumed;
<a name="l00263"></a>00263     }
<a name="l00264"></a>00264 
<a name="l00265"></a>00265 <span class="comment">// ----------------------------------------------------</span>
<a name="l00266"></a>00266 <span class="comment">// CImageConverterAppUi::HandleCommandL(TInt aCommand)</span>
<a name="l00267"></a>00267 <span class="comment">// takes care of command handling</span>
<a name="l00268"></a>00268 <span class="comment">// ----------------------------------------------------</span>
<a name="l00269"></a>00269 <span class="comment">//</span>
<a name="l00270"></a><a class="code" href="class_c_image_converter_app_ui.html#a45f6ffa274d3ac4c7d9bdb8e9ec71abd">00270</a> <span class="keywordtype">void</span> <a class="code" href="class_c_image_converter_app_ui.html#a45f6ffa274d3ac4c7d9bdb8e9ec71abd">CImageConverterAppUi::HandleCommandL</a>(TInt aCommand)
<a name="l00271"></a>00271     {
<a name="l00272"></a>00272     <span class="keywordflow">switch</span> ( aCommand )
<a name="l00273"></a>00273         {
<a name="l00274"></a>00274         <span class="keywordflow">case</span> EAknSoftkeyExit:
<a name="l00275"></a>00275         <span class="keywordflow">case</span> EEikCmdExit:
<a name="l00276"></a>00276             {
<a name="l00277"></a>00277             Exit();
<a name="l00278"></a>00278             <span class="keywordflow">break</span>;
<a name="l00279"></a>00279             }
<a name="l00280"></a>00280         <span class="keywordflow">case</span> EImageConverterCmdOpen:
<a name="l00281"></a>00281             {
<a name="l00282"></a>00282             HandleOpenL();
<a name="l00283"></a>00283             <span class="keywordflow">break</span>;
<a name="l00284"></a>00284             }
<a name="l00285"></a>00285         <span class="keywordflow">case</span> EImageConverterCmdSaveAs:
<a name="l00286"></a>00286             {
<a name="l00287"></a>00287             HandleSaveAsL();
<a name="l00288"></a>00288             <span class="keywordflow">break</span>;
<a name="l00289"></a>00289             }
<a name="l00290"></a>00290         <span class="keywordflow">case</span> EImageConverterCmdInfo:
<a name="l00291"></a>00291             {
<a name="l00292"></a>00292             HandleInfoL();
<a name="l00293"></a>00293             <span class="keywordflow">break</span>;
<a name="l00294"></a>00294             }
<a name="l00295"></a>00295         <span class="keywordflow">case</span> EImageConverterCmdOrientation:
<a name="l00296"></a>00296             {
<a name="l00297"></a>00297             <span class="keywordflow">if</span>(Orientation() == CAknAppUiBase::EAppUiOrientationLandscape)
<a name="l00298"></a>00298                 {
<a name="l00299"></a>00299                 SetOrientationL(CAknAppUiBase::EAppUiOrientationPortrait);
<a name="l00300"></a>00300                 iAppContainer-&gt;SetPictureScreenCenter(ETrue);
<a name="l00301"></a>00301                 }
<a name="l00302"></a>00302             <span class="keywordflow">else</span>
<a name="l00303"></a>00303                 {
<a name="l00304"></a>00304                 SetOrientationL(CAknAppUiBase::EAppUiOrientationLandscape);
<a name="l00305"></a>00305                 iAppContainer-&gt;SetPictureScreenCenter(ETrue);
<a name="l00306"></a>00306                 }
<a name="l00307"></a>00307             <span class="keywordflow">break</span>;
<a name="l00308"></a>00308             }
<a name="l00309"></a>00309         <span class="keywordflow">case</span> EImageConverterCmdRotateLeft:
<a name="l00310"></a>00310             {
<a name="l00311"></a>00311             iAppContainer-&gt;SetTitleText(ETitleRotateLeft,ETrue);
<a name="l00312"></a>00312             iImageLoaded = <span class="keyword">false</span>;
<a name="l00313"></a>00313             iConverter-&gt;Rotate( CImageConverterEngine::EAntiClockwise90 );
<a name="l00314"></a>00314             <span class="keywordflow">break</span>;
<a name="l00315"></a>00315             }
<a name="l00316"></a>00316         <span class="keywordflow">case</span> EImageConverterCmdRotateRight:
<a name="l00317"></a>00317             {
<a name="l00318"></a>00318             iAppContainer-&gt;SetTitleText(ETitleRotateRight,ETrue);
<a name="l00319"></a>00319             iImageLoaded = <span class="keyword">false</span>;
<a name="l00320"></a>00320             iConverter-&gt;Rotate( CImageConverterEngine::EClockwise90 );
<a name="l00321"></a>00321             <span class="keywordflow">break</span>;
<a name="l00322"></a>00322             }
<a name="l00323"></a>00323         <span class="keywordflow">case</span> EImageConverterCmdZoomIn:
<a name="l00324"></a>00324             {
<a name="l00325"></a>00325             iAppContainer-&gt;SetTitleText(ETitleZoomIn,ETrue);
<a name="l00326"></a>00326             <span class="keywordflow">if</span> (iConverter-&gt;Scale( KScaleUpFactor )==KErrNone) <span class="comment">// scale down</span>
<a name="l00327"></a>00327                 {
<a name="l00328"></a>00328                 iImageLoaded = <span class="keyword">false</span>;
<a name="l00329"></a>00329                 }
<a name="l00330"></a>00330             <span class="keywordflow">break</span>;
<a name="l00331"></a>00331             }
<a name="l00332"></a>00332         <span class="keywordflow">case</span> EImageConverterCmdZoomOut:
<a name="l00333"></a>00333             {
<a name="l00334"></a>00334             iAppContainer-&gt;ResetTitleText(ETrue);
<a name="l00335"></a>00335             <span class="keywordflow">if</span> (iConverter-&gt;Scale( KScaleDownFactor )==KErrNone) <span class="comment">// scale down</span>
<a name="l00336"></a>00336                 {
<a name="l00337"></a>00337                 iImageLoaded = <span class="keyword">false</span>;
<a name="l00338"></a>00338                 }
<a name="l00339"></a>00339             <span class="keywordflow">break</span>;
<a name="l00340"></a>00340             }
<a name="l00341"></a>00341         <span class="keywordflow">case</span> EImageConverterCmdNext:
<a name="l00342"></a>00342             {
<a name="l00343"></a>00343             iAppContainer-&gt;ChangeNextPictureL();
<a name="l00344"></a>00344             <span class="keywordflow">break</span>;
<a name="l00345"></a>00345             }
<a name="l00346"></a>00346         <span class="keywordflow">case</span> EImageConverterCmdPrev:
<a name="l00347"></a>00347             {
<a name="l00348"></a>00348             iAppContainer-&gt;ChangePrevPictureL();
<a name="l00349"></a>00349             <span class="keywordflow">break</span>;
<a name="l00350"></a>00350             }
<a name="l00351"></a>00351         <span class="keywordflow">case</span> EImageConverterCmdHelp:
<a name="l00352"></a>00352             {
<a name="l00353"></a>00353             CArrayFix&lt;TCoeHelpContext&gt;* buf = CCoeAppUi::AppHelpContextL ( );
<a name="l00354"></a>00354             HlpLauncher::LaunchHelpApplicationL (iEikonEnv-&gt;WsSession ( ), buf );
<a name="l00355"></a>00355             <span class="keywordflow">break</span>;
<a name="l00356"></a>00356             }
<a name="l00357"></a>00357         <span class="keywordflow">case</span> EImageConverterCmdAbout:
<a name="l00358"></a>00358             {
<a name="l00359"></a>00359             CAknMessageQueryDialog* dlg = <span class="keyword">new</span> (ELeave)CAknMessageQueryDialog();
<a name="l00360"></a>00360             dlg-&gt;PrepareLC (R_ABOUT_QUERY_DIALOG );
<a name="l00361"></a>00361             HBufC* title = iEikonEnv-&gt;AllocReadResourceLC (R_ABOUT_DIALOG_TITLE );
<a name="l00362"></a>00362             dlg-&gt;QueryHeading()-&gt;SetTextL (*title );
<a name="l00363"></a>00363             CleanupStack::PopAndDestroy ( ); <span class="comment">//title</span>
<a name="l00364"></a>00364             HBufC* msg = iEikonEnv-&gt;AllocReadResourceLC (R_ABOUT_DIALOG_TEXT );
<a name="l00365"></a>00365             dlg-&gt;SetMessageTextL (*msg );
<a name="l00366"></a>00366             CleanupStack::PopAndDestroy ( ); <span class="comment">//msg</span>
<a name="l00367"></a>00367             dlg-&gt;RunLD ( );
<a name="l00368"></a>00368             <span class="keywordflow">break</span>;
<a name="l00369"></a>00369             }
<a name="l00370"></a>00370         <span class="keywordflow">default</span>:
<a name="l00371"></a>00371             <span class="keywordflow">break</span>;      
<a name="l00372"></a>00372         }
<a name="l00373"></a>00373     }
<a name="l00374"></a>00374 
<a name="l00375"></a>00375 
<a name="l00376"></a>00376 CArrayFix&lt;TCoeHelpContext&gt;* CImageConverterAppUi::HelpContextL ( )<span class="keyword"> const</span>
<a name="l00377"></a>00377 <span class="keyword">    </span>{
<a name="l00378"></a>00378     CArrayFixFlat&lt;TCoeHelpContext&gt;* array = <span class="keyword">new</span>(ELeave)CArrayFixFlat&lt;TCoeHelpContext&gt;(1);
<a name="l00379"></a>00379     CleanupStack::PushL (array );
<a name="l00380"></a>00380     <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KGeneral_Information, <span class="stringliteral">&quot;General Information about the application&quot;</span>); 
<a name="l00381"></a>00381     array-&gt;AppendL (TCoeHelpContext (KUidHelpFile, KGeneral_Information ) );
<a name="l00382"></a>00382     CleanupStack::Pop (array );
<a name="l00383"></a>00383     <span class="keywordflow">return</span> array;
<a name="l00384"></a>00384     }
<a name="l00385"></a>00385 
<a name="l00386"></a>00386 
<a name="l00387"></a>00387 <span class="keywordtype">void</span> CImageConverterAppUi::ReadImageDirectoryL()
<a name="l00388"></a>00388     {
<a name="l00389"></a>00389     RFs&amp; rfs = iEikonEnv-&gt;FsSession();
<a name="l00390"></a>00390     CDir* fileList = NULL;
<a name="l00391"></a>00391     
<a name="l00392"></a>00392     iFiles.Reset();
<a name="l00393"></a>00393 
<a name="l00394"></a>00394     TFileName path = PathInfo::PhoneMemoryRootPath(); 
<a name="l00395"></a>00395     path.Append(PathInfo::ImagesPath());
<a name="l00396"></a>00396     
<a name="l00397"></a>00397     User::LeaveIfError(rfs.GetDir(path,KEntryAttNormal,ESortByName,fileList));
<a name="l00398"></a>00398     
<a name="l00399"></a>00399     <span class="keywordflow">for</span>( TInt i = 0; i &lt; fileList-&gt;Count(); i++ )
<a name="l00400"></a>00400         {
<a name="l00401"></a>00401         <span class="comment">// Read only files to array</span>
<a name="l00402"></a>00402         <span class="keywordflow">if</span> (!fileList-&gt;operator[](i).IsDir())
<a name="l00403"></a>00403             {
<a name="l00404"></a>00404             TFileName filename;
<a name="l00405"></a>00405             filename.Append(path);
<a name="l00406"></a>00406             filename.Append(fileList-&gt;operator[](i).iName);
<a name="l00407"></a>00407             filename.LowerCase();
<a name="l00408"></a>00408             <span class="comment">// We support only JPG, BMP,  GIF</span>
<a name="l00409"></a>00409             <span class="keywordflow">if</span> ( filename.Find(_L(<span class="stringliteral">&quot;.jpg&quot;</span>))!=KErrNotFound || 
<a name="l00410"></a>00410                  filename.Find(_L(<span class="stringliteral">&quot;.jpeg&quot;</span>))!=KErrNotFound || 
<a name="l00411"></a>00411                  filename.Find(_L(<span class="stringliteral">&quot;.bmp&quot;</span>))!=KErrNotFound ||
<a name="l00412"></a>00412                  filename.Find(_L(<span class="stringliteral">&quot;.gif&quot;</span>))!=KErrNotFound )
<a name="l00413"></a>00413                 {
<a name="l00414"></a>00414                 iFiles.Append(filename);
<a name="l00415"></a>00415                 }
<a name="l00416"></a>00416             }
<a name="l00417"></a>00417         }
<a name="l00418"></a>00418     
<a name="l00419"></a>00419     <span class="keyword">delete</span> fileList;
<a name="l00420"></a>00420     }
<a name="l00421"></a>00421 
<a name="l00422"></a>00422 
<a name="l00423"></a>00423 
<a name="l00424"></a>00424 TInt CImageConverterAppUi::ImageIndex()
<a name="l00425"></a>00425     {
<a name="l00426"></a>00426     <span class="keywordflow">return</span> iOpenFileIndex;
<a name="l00427"></a>00427     }
<a name="l00428"></a>00428 
<a name="l00429"></a>00429 TInt CImageConverterAppUi::ImageCount()
<a name="l00430"></a>00430     {
<a name="l00431"></a>00431     <span class="keywordflow">return</span> iFiles.Count();
<a name="l00432"></a>00432     }
<a name="l00433"></a>00433 
<a name="l00434"></a>00434 <span class="keywordtype">void</span> CImageConverterAppUi::ImageName(TFileName&amp; aFilename)
<a name="l00435"></a>00435     {
<a name="l00436"></a>00436     aFilename.Copy(iFiles[iOpenFileIndex]);
<a name="l00437"></a>00437     <span class="keywordflow">if</span> (aFilename.Find(_L(<span class="stringliteral">&quot;\\&quot;</span>)) &gt; -1)
<a name="l00438"></a>00438         {
<a name="l00439"></a>00439         aFilename.Delete(0,aFilename.LocateReverse(<span class="charliteral">&#39;\\&#39;</span>)+1);
<a name="l00440"></a>00440         }
<a name="l00441"></a>00441     }
<a name="l00442"></a>00442 
<a name="l00443"></a>00443 <span class="keywordtype">void</span> CImageConverterAppUi::PlainImageName(TFileName&amp; aFilename)
<a name="l00444"></a>00444     {
<a name="l00445"></a>00445     aFilename.Copy(iFiles[iOpenFileIndex]);
<a name="l00446"></a>00446     <span class="keywordflow">if</span> (aFilename.Find(_L(<span class="stringliteral">&quot;\\&quot;</span>)) &gt; -1)
<a name="l00447"></a>00447         {
<a name="l00448"></a>00448         aFilename.Delete(0,aFilename.LocateReverse(<span class="charliteral">&#39;\\&#39;</span>)+1);
<a name="l00449"></a>00449         }
<a name="l00450"></a>00450     <span class="keywordflow">if</span> (aFilename.Find(_L(<span class="stringliteral">&quot;.&quot;</span>)) &gt; -1)
<a name="l00451"></a>00451         {
<a name="l00452"></a>00452         aFilename.SetLength(aFilename.Find(_L(<span class="stringliteral">&quot;.&quot;</span>)));
<a name="l00453"></a>00453         }
<a name="l00454"></a>00454     }
<a name="l00455"></a>00455 
<a name="l00456"></a>00456 <span class="keywordtype">void</span> CImageConverterAppUi::ReadImage(TInt aDirection)
<a name="l00457"></a>00457     {
<a name="l00458"></a>00458     TFileName fileToOpen;
<a name="l00459"></a>00459     
<a name="l00460"></a>00460     <span class="keywordflow">if</span> (iFiles.Count()==0)
<a name="l00461"></a>00461         {
<a name="l00462"></a>00462         <span class="keywordflow">return</span>; <span class="comment">// No images found</span>
<a name="l00463"></a>00463         }
<a name="l00464"></a>00464     
<a name="l00465"></a>00465     iOpenFileIndex = iOpenFileIndex + aDirection;
<a name="l00466"></a>00466     <span class="keywordflow">if</span> (iOpenFileIndex &lt; 0)
<a name="l00467"></a>00467         {
<a name="l00468"></a>00468         iOpenFileIndex = iFiles.Count()-1;
<a name="l00469"></a>00469         }
<a name="l00470"></a>00470     <span class="keywordflow">else</span> <span class="keywordflow">if</span>(iOpenFileIndex &gt; iFiles.Count()-1)
<a name="l00471"></a>00471         {
<a name="l00472"></a>00472         iOpenFileIndex = 0;
<a name="l00473"></a>00473         }
<a name="l00474"></a>00474     
<a name="l00475"></a>00475     fileToOpen.Append(iFiles[iOpenFileIndex]);
<a name="l00476"></a>00476     
<a name="l00477"></a>00477     iImageLoaded = <span class="keyword">false</span>;
<a name="l00478"></a>00478     iAppContainer-&gt;SetBitmap(NULL);
<a name="l00479"></a>00479     
<a name="l00480"></a>00480     <span class="comment">// request the actuall open/decode</span>
<a name="l00481"></a>00481     <span class="comment">// asynchronous, the result is reported via callback</span>
<a name="l00482"></a>00482     <span class="comment">// NotifyCompletion</span>
<a name="l00483"></a>00483     TRAPD( err, iConverter-&gt;StartToDecodeL(fileToOpen) );
<a name="l00484"></a>00484 
<a name="l00485"></a>00485     <span class="comment">// report errors in issuing the asynchronous call</span>
<a name="l00486"></a>00486     <span class="keywordflow">if</span>( err != KErrNone ) 
<a name="l00487"></a>00487         {
<a name="l00488"></a>00488         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>( KMsg, <span class="stringliteral">&quot;Error when starting to decode:%d&quot;</span> );
<a name="l00489"></a>00489         TBuf&lt;KMaxInfoMsgLength&gt; buf;
<a name="l00490"></a>00490         buf.Format( KMsg, err );
<a name="l00491"></a>00491         ShowMessage(buf);
<a name="l00492"></a>00492         }
<a name="l00493"></a>00493     }
<a name="l00494"></a>00494 
<a name="l00495"></a>00495 
<a name="l00496"></a>00496 
<a name="l00497"></a>00497 <span class="comment">// ----------------------------------------------------</span>
<a name="l00498"></a>00498 <span class="comment">// CImageConverterAppUi::HandleOpenL( )</span>
<a name="l00499"></a>00499 <span class="comment">// Handle open command</span>
<a name="l00500"></a>00500 <span class="comment">// ----------------------------------------------------</span>
<a name="l00501"></a>00501 <span class="comment">//</span>
<a name="l00502"></a>00502 <span class="keywordtype">void</span> CImageConverterAppUi::HandleOpenL( )
<a name="l00503"></a>00503     {
<a name="l00504"></a>00504     TFileName fileToOpen;
<a name="l00505"></a>00505     
<a name="l00506"></a>00506     <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>( KFileSelectionTitle, <span class="stringliteral">&quot;Select image to open&quot;</span> );
<a name="l00507"></a>00507     
<a name="l00508"></a>00508     <span class="comment">// show fileopen dialog from akncommondialogs</span>
<a name="l00509"></a>00509     <span class="keywordflow">if</span>( !AknCommonDialogs::RunSelectDlgLD(fileToOpen, 
<a name="l00510"></a>00510         R_MEMORY_SELECTION_DIALOG, KFileSelectionTitle) ) 
<a name="l00511"></a>00511         {
<a name="l00512"></a>00512         <span class="keywordflow">return</span>;
<a name="l00513"></a>00513         }
<a name="l00514"></a>00514 
<a name="l00515"></a>00515     iImageLoaded = <span class="keyword">false</span>;
<a name="l00516"></a>00516     iAppContainer-&gt;SetBitmap(NULL); 
<a name="l00517"></a>00517 
<a name="l00518"></a>00518     <span class="comment">// request the actuall open/decode</span>
<a name="l00519"></a>00519     <span class="comment">// asynchronous, the result is reported via callback</span>
<a name="l00520"></a>00520     <span class="comment">// NotifyCompletion</span>
<a name="l00521"></a>00521     TRAPD( err, iConverter-&gt;StartToDecodeL(fileToOpen) );
<a name="l00522"></a>00522 
<a name="l00523"></a>00523     <span class="comment">// report errors in issuing the asynchronous call</span>
<a name="l00524"></a>00524     <span class="keywordflow">if</span>( err != KErrNone ) 
<a name="l00525"></a>00525         {
<a name="l00526"></a>00526         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>( KMsg, <span class="stringliteral">&quot;Error when starting to decode:%d&quot;</span> );
<a name="l00527"></a>00527         TBuf&lt;KMaxInfoMsgLength&gt; buf;
<a name="l00528"></a>00528         buf.Format( KMsg, err );
<a name="l00529"></a>00529         ShowMessage(buf);
<a name="l00530"></a>00530         }
<a name="l00531"></a>00531     <span class="keywordflow">else</span>
<a name="l00532"></a>00532         {
<a name="l00533"></a>00533         iFiles.Append(fileToOpen);
<a name="l00534"></a>00534         iOpenFileIndex = iFiles.Count()-1;
<a name="l00535"></a>00535         }
<a name="l00536"></a>00536     }
<a name="l00537"></a>00537 
<a name="l00538"></a>00538 <span class="comment">// ----------------------------------------------------</span>
<a name="l00539"></a>00539 <span class="comment">// CImageConverterAppUi::HandleSaveAsL()</span>
<a name="l00540"></a>00540 <span class="comment">// Handle save command</span>
<a name="l00541"></a>00541 <span class="comment">// ----------------------------------------------------</span>
<a name="l00542"></a>00542 <span class="comment">//</span>
<a name="l00543"></a>00543 <span class="keywordtype">void</span> CImageConverterAppUi::HandleSaveAsL()
<a name="l00544"></a>00544     {
<a name="l00545"></a>00545     TInt selectedIdx = 0;
<a name="l00546"></a>00546 
<a name="l00547"></a>00547     <span class="comment">// get encoder types from engine</span>
<a name="l00548"></a>00548     RImageTypeDescriptionArray imageTypes; 
<a name="l00549"></a>00549     iConverter-&gt;GetEncoderImageTypesL( imageTypes); 
<a name="l00550"></a>00550     
<a name="l00551"></a>00551     <span class="comment">// Create a custom cleanup item and specify CleanupRArray to be the</span>
<a name="l00552"></a>00552     <span class="comment">// method that is called once we call CleanupStack::PopAndDestroy() at the</span>
<a name="l00553"></a>00553     <span class="comment">// end of this method.</span>
<a name="l00554"></a>00554     CleanupStack::PushL( TCleanupItem(CleanupRArray, &amp;imageTypes) );
<a name="l00555"></a>00555 
<a name="l00556"></a>00556     <span class="comment">// Create path for filename</span>
<a name="l00557"></a>00557     TFileName path = PathInfo::PhoneMemoryRootPath(); 
<a name="l00558"></a>00558     path.Append(PathInfo::ImagesPath());
<a name="l00559"></a>00559     <span class="comment">// Get filename of current image for save image dialog</span>
<a name="l00560"></a>00560     TFileName fileToSave;
<a name="l00561"></a>00561     PlainImageName(fileToSave);
<a name="l00562"></a>00562 
<a name="l00563"></a>00563     <span class="comment">// Create image format array for the dialog</span>
<a name="l00564"></a>00564     CDesCArrayFlat* array = <span class="keyword">new</span> (ELeave) CDesCArrayFlat(imageTypes.Count());
<a name="l00565"></a>00565     CleanupStack::PushL(array);
<a name="l00566"></a>00566     <span class="keywordflow">for</span>( TInt i=0; i&lt;imageTypes.Count(); i++ ) 
<a name="l00567"></a>00567         {
<a name="l00568"></a>00568         TBuf&lt;KMaxInfoDescriptorLength&gt; desc;
<a name="l00569"></a>00569         desc.Append( imageTypes[i]-&gt;Description() );
<a name="l00570"></a>00570         array-&gt;AppendL( desc );
<a name="l00571"></a>00571         }
<a name="l00572"></a>00572     
<a name="l00573"></a>00573     <span class="comment">// Show dialog</span>
<a name="l00574"></a>00574     TRAPD(err, 
<a name="l00575"></a>00575         iSaveAs = <span class="keyword">new</span>(ELeave)CAknListQueryDialog(&amp;selectedIdx);
<a name="l00576"></a>00576         iSaveAs-&gt;PrepareLC(R_SELECTION_QUERY);
<a name="l00577"></a>00577         iSaveAs-&gt;SetItemTextArray(array); 
<a name="l00578"></a>00578         iSaveAs-&gt;SetOwnershipType(ELbmDoesNotOwnItemArray); 
<a name="l00579"></a>00579         <span class="keywordflow">if</span>(iSaveAs-&gt;RunLD())
<a name="l00580"></a>00580             {
<a name="l00581"></a>00581             <span class="comment">// Ask filename</span>
<a name="l00582"></a>00582             CAknTextQueryDialog* dlg = CAknTextQueryDialog::NewL(fileToSave,CAknQueryDialog::ENoTone);
<a name="l00583"></a>00583             dlg-&gt;PrepareLC(R_QUERY_DIALOG);
<a name="l00584"></a>00584             dlg-&gt;SetPromptL(_L(<span class="stringliteral">&quot;Save As&quot;</span>));
<a name="l00585"></a>00585             <span class="keywordflow">if</span>(dlg-&gt;RunLD())
<a name="l00586"></a>00586                 {
<a name="l00587"></a>00587                 fileToSave.Append(_L(<span class="stringliteral">&quot;.&quot;</span>));
<a name="l00588"></a>00588                 fileToSave.Append(imageTypes[selectedIdx]-&gt;Description());
<a name="l00589"></a>00589     
<a name="l00590"></a>00590                 path.Append(fileToSave);
<a name="l00591"></a>00591                 iConverter-&gt;StartToEncodeL(path, 
<a name="l00592"></a>00592                     imageTypes[selectedIdx]-&gt;ImageType(),
<a name="l00593"></a>00593                     imageTypes[selectedIdx]-&gt;SubType());
<a name="l00594"></a>00594                 }
<a name="l00595"></a>00595             }
<a name="l00596"></a>00596         );
<a name="l00597"></a>00597     iSaveAs = NULL;
<a name="l00598"></a>00598     CleanupStack::PopAndDestroy(); <span class="comment">// array</span>
<a name="l00599"></a>00599 
<a name="l00600"></a>00600     <span class="keywordflow">if</span> (err)
<a name="l00601"></a>00601         {
<a name="l00602"></a>00602         User::Leave(err);
<a name="l00603"></a>00603         }
<a name="l00604"></a>00604 
<a name="l00605"></a>00605     <span class="comment">// This will lead to a call to CleanupRArray, our custom cleanup method.</span>
<a name="l00606"></a>00606     CleanupStack::PopAndDestroy(&amp;imageTypes);
<a name="l00607"></a>00607     }
<a name="l00608"></a>00608 
<a name="l00609"></a>00609 <span class="comment">// ----------------------------------------------------</span>
<a name="l00610"></a>00610 <span class="comment">// CImageConverterAppUi::HandleInfoL()</span>
<a name="l00611"></a>00611 <span class="comment">// Handle info command</span>
<a name="l00612"></a>00612 <span class="comment">// ----------------------------------------------------</span>
<a name="l00613"></a>00613 <span class="comment">//</span>
<a name="l00614"></a>00614 <span class="keywordtype">void</span> CImageConverterAppUi::HandleInfoL()
<a name="l00615"></a>00615     {
<a name="l00616"></a>00616     <span class="comment">// Get the info strings</span>
<a name="l00617"></a>00617     <span class="keyword">delete</span> iInfoStrings;
<a name="l00618"></a>00618     iInfoStrings = NULL;
<a name="l00619"></a>00619     iInfoStrings = iConverter-&gt;GetImageInfoL();
<a name="l00620"></a>00620 
<a name="l00621"></a>00621     <span class="keywordflow">if</span> (iInfoStrings)
<a name="l00622"></a>00622         {
<a name="l00623"></a>00623         <span class="comment">// Show the info strings in a separate dialog</span>
<a name="l00624"></a>00624         iInfoDialog = <span class="keyword">new</span>(ELeave) <a class="code" href="class_c_show_info_dialog.html">CShowInfoDialog</a>( iInfoStrings );
<a name="l00625"></a>00625         iInfoDialog-&gt;ExecuteLD( R_IMAGECONVERTER_SHOWINFO_DIALOG );
<a name="l00626"></a>00626         iInfoDialog = NULL;
<a name="l00627"></a>00627         }
<a name="l00628"></a>00628     }
<a name="l00629"></a>00629 
<a name="l00630"></a>00630 TBool CImageConverterAppUi::IsAnimating()
<a name="l00631"></a>00631     {
<a name="l00632"></a>00632     <span class="keywordflow">return</span> iAppContainer-&gt;IsAnimating();
<a name="l00633"></a>00633     }
<a name="l00634"></a>00634 
<a name="l00635"></a>00635 TBool CImageConverterAppUi::IsEngineBusy()
<a name="l00636"></a>00636     {
<a name="l00637"></a>00637     <span class="keywordflow">return</span> iConverter-&gt;IsActive();
<a name="l00638"></a>00638     }
<a name="l00639"></a>00639 
<a name="l00640"></a>00640 <span class="comment">// ----------------------------------------------------</span>
<a name="l00641"></a>00641 <span class="comment">// CImageConverterAppUi::NotifyCompletion( TInt aErr, </span>
<a name="l00642"></a>00642 <span class="comment">//                const TDesC&amp; aMsg )</span>
<a name="l00643"></a>00643 <span class="comment">// Handle completion notifications</span>
<a name="l00644"></a>00644 <span class="comment">// ----------------------------------------------------</span>
<a name="l00645"></a>00645 <span class="comment">//</span>
<a name="l00646"></a>00646 <span class="keywordtype">void</span> CImageConverterAppUi::NotifyCompletion( TInt aErr, <span class="keyword">const</span> TDesC&amp; aMsg ) 
<a name="l00647"></a>00647     {
<a name="l00648"></a>00648     <span class="keywordflow">if</span>( aErr == KErrNone ) 
<a name="l00649"></a>00649         {
<a name="l00650"></a>00650         <span class="comment">// we have succesfully decoded an image, now make the view</span>
<a name="l00651"></a>00651         <span class="comment">// to display it</span>
<a name="l00652"></a>00652         iAppContainer-&gt;SetBitmap(iConverter-&gt;GetBitmap());
<a name="l00653"></a>00653         iImageLoaded = <span class="keyword">true</span>;
<a name="l00654"></a>00654         }
<a name="l00655"></a>00655     <span class="keywordflow">else</span> 
<a name="l00656"></a>00656         {
<a name="l00657"></a>00657         iAppContainer-&gt;SetBitmap(NULL);
<a name="l00658"></a>00658         iImageLoaded = <span class="keyword">false</span>;
<a name="l00659"></a>00659         }
<a name="l00660"></a>00660 
<a name="l00661"></a>00661         iAppContainer-&gt;DrawToBackBuffer();
<a name="l00662"></a>00662         iAppContainer-&gt;DrawNow();
<a name="l00663"></a>00663 
<a name="l00664"></a>00664     <span class="keywordflow">if</span> (aErr &amp;&amp; aErr != KErrNotReady)
<a name="l00665"></a>00665         {
<a name="l00666"></a>00666         ShowMessage(aMsg);
<a name="l00667"></a>00667         }
<a name="l00668"></a>00668     }
<a name="l00669"></a>00669 
<a name="l00670"></a>00670 <span class="comment">// ----------------------------------------------------</span>
<a name="l00671"></a>00671 <span class="comment">// CImageConverterAppUi::ShowMessage(const TDesC&amp; aMsg) const</span>
<a name="l00672"></a>00672 <span class="comment">// Show a message to the user</span>
<a name="l00673"></a>00673 <span class="comment">// ----------------------------------------------------</span>
<a name="l00674"></a>00674 <span class="comment">//</span>
<a name="l00675"></a>00675 <span class="keywordtype">void</span> CImageConverterAppUi::ShowMessage(<span class="keyword">const</span> TDesC&amp; aMsg)<span class="keyword"> const</span>
<a name="l00676"></a>00676 <span class="keyword">    </span>{
<a name="l00677"></a>00677     <span class="keywordflow">if</span> (aMsg.Length())  <span class="comment">// If there&#39;s something to show, otherwise do nothing</span>
<a name="l00678"></a>00678         {
<a name="l00679"></a>00679         <span class="comment">// No need to react if this leaves, just trap</span>
<a name="l00680"></a>00680         TRAPD(err, ShowMessageL(aMsg));
<a name="l00681"></a>00681         }
<a name="l00682"></a>00682     }
<a name="l00683"></a>00683 <span class="comment">// ----------------------------------------------------</span>
<a name="l00684"></a>00684 <span class="comment">// CImageConverterAppUi::ShowMessageL(const TDesC&amp; aMsg) const</span>
<a name="l00685"></a>00685 <span class="comment">// Show a message to the user</span>
<a name="l00686"></a>00686 <span class="comment">// ----------------------------------------------------</span>
<a name="l00687"></a>00687 <span class="comment">//</span>
<a name="l00688"></a>00688 <span class="keywordtype">void</span> CImageConverterAppUi::ShowMessageL(<span class="keyword">const</span> TDesC&amp; aMsg)<span class="keyword"> const</span>
<a name="l00689"></a>00689 <span class="keyword">    </span>{
<a name="l00690"></a>00690     CAknGlobalNote* note = CAknGlobalNote::NewLC();
<a name="l00691"></a>00691     note-&gt;ShowNoteL(EAknGlobalConfirmationNote, aMsg);
<a name="l00692"></a>00692     CleanupStack::PopAndDestroy(note);
<a name="l00693"></a>00693     }
<a name="l00694"></a>00694 
<a name="l00695"></a>00695 TBool CImageConverterAppUi::IsOptionsButtonOnTop()
<a name="l00696"></a>00696     {
<a name="l00697"></a>00697     <span class="keywordflow">return</span> iOptionButtonOnTop;
<a name="l00698"></a>00698     }
<a name="l00699"></a>00699 
<a name="l00700"></a>00700 <span class="keywordtype">void</span> CImageConverterAppUi::SearchOptionsButtonPosition()
<a name="l00701"></a>00701     {
<a name="l00702"></a>00702     iOptionButtonOnTop = EFalse;
<a name="l00703"></a>00703     CEikButtonGroupContainer* cba = Cba();
<a name="l00704"></a>00704     <span class="keywordflow">if</span>(!cba)
<a name="l00705"></a>00705         {
<a name="l00706"></a>00706         <span class="keywordflow">return</span>;
<a name="l00707"></a>00707         }
<a name="l00708"></a>00708     CCoeControl* options = cba-&gt;ControlOrNull(EAknSoftkeyOptions);
<a name="l00709"></a>00709     CCoeControl* exit = cba-&gt;ControlOrNull(EAknSoftkeyExit);
<a name="l00710"></a>00710     <span class="keywordflow">if</span>( options &amp;&amp; exit )
<a name="l00711"></a>00711         {
<a name="l00712"></a>00712         <span class="keywordflow">if</span>( options-&gt;Position().iY &lt; exit-&gt;Position().iY )
<a name="l00713"></a>00713             {
<a name="l00714"></a>00714             iOptionButtonOnTop = ETrue;
<a name="l00715"></a>00715             }
<a name="l00716"></a>00716         }
<a name="l00717"></a>00717     }
<a name="l00718"></a>00718 
<a name="l00719"></a>00719 <span class="keywordtype">void</span> CImageConverterAppUi::HandleResourceChangeL( TInt aType )
<a name="l00720"></a>00720     {
<a name="l00721"></a>00721     CAknAppUi::HandleResourceChangeL( aType );
<a name="l00722"></a>00722        
<a name="l00723"></a>00723     <span class="keywordflow">if</span> ( aType==KEikDynamicLayoutVariantSwitch )
<a name="l00724"></a>00724         {
<a name="l00725"></a>00725         SearchOptionsButtonPosition();
<a name="l00726"></a>00726 
<a name="l00727"></a>00727         TRect rect;
<a name="l00728"></a>00728         AknLayoutUtils::LayoutMetricsRect(
<a name="l00729"></a>00729         AknLayoutUtils::EMainPane,rect);
<a name="l00730"></a>00730         <span class="keywordflow">if</span> (iSaveAs)
<a name="l00731"></a>00731             {
<a name="l00732"></a>00732             iSaveAs-&gt;SetRect(rect);
<a name="l00733"></a>00733             }
<a name="l00734"></a>00734         <span class="keywordflow">if</span> (iInfoDialog)
<a name="l00735"></a>00735             {
<a name="l00736"></a>00736             iInfoDialog-&gt;SetRect(rect);
<a name="l00737"></a>00737             }
<a name="l00738"></a>00738         }           
<a name="l00739"></a>00739     }
<a name="l00740"></a>00740 
<a name="l00741"></a>00741 
<a name="l00742"></a>00742 <span class="comment">// End of File</span>
<a name="l00743"></a>00743 
</pre></div>
<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
     <p class="copyright">Copyright &#169;2010 Nokia Corporation and/or its subsidiary(-ies).<br /> All rights
reserved. Unless otherwise stated, these materials are provided under the terms of the <a href=" http://www.eclipse.org/legal/epl-v10.html"> Eclipse Public License
v1.0</a>.</p> 
   </div>
  </div>
  <?php include_once (CURRENT_SKIN_PATH.'/sdl_footer.html'); ?>
 </body>
</html>
