<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TB9.2 Example Applications: examples/ForumNokia/S60_3rd_Edition_TextMTM_Example/modules/Install/src/txut.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
<link type="text/css" rel="stylesheet" href="css/common.css" media="screen"/>
<link type="text/css" rel="stylesheet" href="css/sdl.css" media="screen"/>

<!--[if IE]>
<link href="css/iefix.css" rel="stylesheet" type="text/css" media="screen" />
<![endif]-->
</head>
<body class="kernelguide">
    
     <?php include_once (CURRENT_SKIN_PATH.'/sdl_header.html'); ?>
  <div id="sdl_container">
   <div id="leftMenu">
    <div id="expandcontractdiv">
     <a id="collapseTree" href="javascript:tree.collapseAll()">
      Collapse all
     </a>
     <a id="index" href="index.html">
      Symbian^3 Product Developer Library
     </a>
    </div>
    <iframe style="border:none" height="800" width="300" src="index-toc.html"></iframe>
<div id="treeDiv1">
     &#160;
    </div>
    <script type="text/javascript">
     var currentIconMode = 0;
	YAHOO.util.Event.onDOMReady(buildTree, this,true);
    </script>
   </div>
   <div id="sdl_content">
<!-- Generated by Doxygen 1.6.2 -->
<h1>examples/ForumNokia/S60_3rd_Edition_TextMTM_Example/modules/Install/src/txut.h</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// TXUT.H</span>
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// © 2004 Nokia Corporation.  All rights reserved.</span>
<a name="l00004"></a>00004 <span class="comment">//</span>
<a name="l00005"></a>00005 
<a name="l00006"></a>00006 <span class="preprocessor">#ifndef __TXUT_H__</span>
<a name="l00007"></a>00007 <span class="preprocessor"></span><span class="preprocessor">#define __TXUT_H__</span>
<a name="l00008"></a>00008 <span class="preprocessor"></span>
<a name="l00009"></a>00009 <span class="preprocessor">#include &lt;e32std.h&gt;</span>
<a name="l00010"></a>00010 <span class="preprocessor">#include &lt;msvapi.h&gt;</span>             <span class="comment">// TMsvId, CMsvOperation, CMsvSession</span>
<a name="l00011"></a>00011 
<a name="l00012"></a>00012 
<a name="l00013"></a>00013 <span class="comment">// TextMTM UIDs</span>
<a name="l00014"></a>00014 LOCAL_D <span class="keyword">const</span> TInt KUidMsgTypeTextValue = 0x10005247; 
<a name="l00015"></a>00015 LOCAL_D <span class="keyword">const</span> TUid KUidMsgTypeText = { KUidMsgTypeTextValue};
<a name="l00016"></a>00016 LOCAL_D <span class="keyword">const</span> TUid KTxtMtmTechnologyTypeUid     = { KUidMsgTypeTextValue};
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 LOCAL_D <span class="keyword">const</span> TUid KUidMsvMtmTextServerDLL      ={0x101FDA9C};
<a name="l00019"></a>00019 LOCAL_D <span class="keyword">const</span> TUid KUidMsvMtmTextClientDLL      ={0x101FDA9B};
<a name="l00020"></a>00020 LOCAL_D <span class="keyword">const</span> TUid KUidMsvMtmTextUiDLL          ={0x101FDA9D};
<a name="l00021"></a>00021 LOCAL_D <span class="keyword">const</span> TUid KUidMsvMtmTextUiDataDLL      ={0x101FDA9E};
<a name="l00022"></a>00022 LOCAL_D <span class="keyword">const</span> TUid KUidTextMtmVersion1          ={ KUidMsgTypeTextValue};
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="comment">// Constants</span>
<a name="l00025"></a>00025 LOCAL_D <span class="keyword">const</span> TInt KUidTxtMTMSettingsValue = 0x1000525A; 
<a name="l00026"></a>00026 LOCAL_D <span class="keyword">const</span> TUid KUidTxtMTMSettings={KUidTxtMTMSettingsValue};
<a name="l00027"></a>00027 LOCAL_D <span class="keyword">const</span> TInt KMaxTextMessageSize = 0xFFFF;
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="comment">//</span>
<a name="l00031"></a>00031 <span class="comment">//      TTxtProgress: Operation progress information</span>
<a name="l00032"></a>00032 <span class="comment">//</span>
<a name="l00033"></a><a class="code" href="class_t_txt_progress.html">00033</a> <span class="keyword">class </span><a class="code" href="class_t_txt_progress.html">TTxtProgress</a> 
<a name="l00034"></a>00034         {
<a name="l00035"></a>00035 <span class="keyword">public</span>:
<a name="l00036"></a>00036         TInt            iTotalMsgs;
<a name="l00037"></a>00037         TInt            iMsgsProcessed;
<a name="l00038"></a>00038         TInt            iErrorCode;     <span class="comment">// client side needs to be informed of an error</span>
<a name="l00039"></a>00039         TMsvId          iNewId;         <span class="comment">// Used with CreateL, or any copy/move, storing the last moved message id.</span>
<a name="l00040"></a>00040         };
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 <span class="comment">//</span>
<a name="l00043"></a>00043 <span class="comment">//  Package buffer of progress structure</span>
<a name="l00044"></a>00044 <span class="comment">//</span>
<a name="l00045"></a>00045 <span class="keyword">typedef</span> TPckgBuf&lt;TTxtProgress&gt; TTxtProgressBuf;
<a name="l00046"></a>00046 
<a name="l00047"></a>00047 <span class="comment">//</span>
<a name="l00048"></a>00048 <span class="comment">// TxtUtils: Generic static utility functions</span>
<a name="l00049"></a>00049 <span class="comment">// </span>
<a name="l00050"></a><a class="code" href="class_txt_utils.html">00050</a> <span class="keyword">class </span><a class="code" href="class_txt_utils.html">TxtUtils</a>
<a name="l00051"></a>00051         {
<a name="l00052"></a>00052 <span class="keyword">public</span>: 
<a name="l00053"></a>00053         <span class="comment">// Build file name for associated entry, given its entry.</span>
<a name="l00054"></a>00054         IMPORT_C <span class="keyword">static</span> <span class="keywordtype">void</span> GetEntryFileNameL(TFileName&amp; aFileName, TMsvEntry&amp; aEntry);
<a name="l00055"></a>00055     <span class="comment">// Prepends the drive letter to aFileName found in aLocation </span>
<a name="l00056"></a>00056     IMPORT_C <span class="keyword">static</span> <span class="keywordtype">void</span> FindFileL(<span class="keyword">const</span> TDesC&amp; aFileName, <span class="keyword">const</span> TDesC&amp; aLocation, TFileName&amp; aRetVal);
<a name="l00057"></a>00057         };
<a name="l00058"></a>00058 
<a name="l00059"></a>00059 <span class="comment">//</span>
<a name="l00060"></a>00060 <span class="comment">// TMTMTxtSettings: contains the settings for a service. It can be stored in the CMsvStore</span>
<a name="l00061"></a>00061 <span class="comment">// associated with the service entry.</span>
<a name="l00062"></a>00062 <span class="comment">//</span>
<a name="l00063"></a><a class="code" href="class_t_m_t_m_txt_settings.html">00063</a> <span class="keyword">class </span><a class="code" href="class_t_m_t_m_txt_settings.html">TMTMTxtSettings</a> 
<a name="l00064"></a>00064         {
<a name="l00065"></a>00065 <span class="keyword">public</span>:
<a name="l00066"></a>00066         IMPORT_C <span class="keywordtype">void</span> StoreL(CMsvStore&amp; aMsvStore) <span class="keyword">const</span>;
<a name="l00067"></a>00067         IMPORT_C <span class="keywordtype">void</span> RestoreL(<span class="keyword">const</span> CMsvStore&amp; aMessageStore );
<a name="l00068"></a>00068         IMPORT_C <span class="keywordtype">void</span> ExternalizeL( RMsvWriteStream&amp; aWriteStream ) <span class="keyword">const</span>;
<a name="l00069"></a>00069         IMPORT_C <span class="keywordtype">void</span> InternalizeL( RMsvReadStream&amp; aReadStream );
<a name="l00070"></a>00070 
<a name="l00071"></a>00071 <span class="keyword">public</span>:
<a name="l00072"></a>00072         TPtrC RootFolder() <span class="keyword">const</span>;
<a name="l00073"></a>00073         <span class="keywordtype">void</span> SetRootFolder(<span class="keyword">const</span> TDesC&amp; aRootFolder);
<a name="l00074"></a>00074 
<a name="l00075"></a>00075 <span class="keyword">private</span>:
<a name="l00076"></a>00076         TFileName iRootFolder;
<a name="l00077"></a>00077         };
<a name="l00078"></a>00078 
<a name="l00079"></a>00079 
<a name="l00080"></a>00080 <span class="comment">//</span>
<a name="l00081"></a>00081 <span class="comment">// CMsvOpWait:</span>
<a name="l00082"></a>00082 <span class="comment">//      Allows a synchronous wait on a operation</span>
<a name="l00083"></a>00083 <span class="comment">//</span>
<a name="l00084"></a>00084 
<a name="l00085"></a><a class="code" href="class_c_msv_op_wait.html">00085</a> <span class="keyword">class </span><a class="code" href="class_c_msv_op_wait.html">CMsvOpWait</a>: <span class="keyword">public</span> CActive
<a name="l00086"></a>00086         {
<a name="l00087"></a>00087 <span class="keyword">public</span>:
<a name="l00088"></a>00088         IMPORT_C <span class="keyword">static</span> <a class="code" href="class_c_msv_op_wait.html">CMsvOpWait</a>* NewLC(TInt aPriority=EPriorityStandard);
<a name="l00089"></a>00089         IMPORT_C ~<a class="code" href="class_c_msv_op_wait.html">CMsvOpWait</a>();
<a name="l00090"></a>00090         IMPORT_C <span class="keywordtype">void</span> Start();
<a name="l00091"></a>00091 
<a name="l00092"></a>00092 <span class="keyword">protected</span>:
<a name="l00093"></a>00093         <a class="code" href="class_c_msv_op_wait.html">CMsvOpWait</a>(TInt aPriority);
<a name="l00094"></a>00094 
<a name="l00095"></a>00095 <span class="keyword">protected</span>:
<a name="l00096"></a>00096     <span class="comment">// from CActive</span>
<a name="l00097"></a>00097         <span class="keyword">virtual</span> <span class="keywordtype">void</span> RunL();
<a name="l00098"></a>00098         <span class="keyword">virtual</span> <span class="keywordtype">void</span> DoCancel();
<a name="l00099"></a>00099         };
<a name="l00100"></a>00100 
<a name="l00101"></a>00101 
<a name="l00102"></a>00102 <span class="comment">//</span>
<a name="l00103"></a>00103 <span class="comment">// CMsvCompOperation: </span>
<a name="l00104"></a>00104 <span class="comment">//      An operation which is already completed on construction</span>
<a name="l00105"></a>00105 <span class="comment">//</span>
<a name="l00106"></a><a class="code" href="class_c_msv_comp_operation.html">00106</a> <span class="keyword">class </span><a class="code" href="class_c_msv_comp_operation.html">CMsvCompOperation</a> : <span class="keyword">public</span> CMsvOperation
<a name="l00107"></a>00107         {
<a name="l00108"></a>00108 <span class="keyword">public</span>:
<a name="l00109"></a>00109         IMPORT_C <span class="keyword">static</span> <a class="code" href="class_c_msv_comp_operation.html">CMsvCompOperation</a>* NewL(CMsvSession&amp; aMsvSession, TUid aMtm, <span class="keyword">const</span> TDesC8&amp; aProgress, TMsvId aService, TRequestStatus&amp; aObserverRequestStatus, TInt aErr=KErrNone);
<a name="l00110"></a>00110         IMPORT_C ~<a class="code" href="class_c_msv_comp_operation.html">CMsvCompOperation</a>();
<a name="l00111"></a>00111 
<a name="l00112"></a>00112 <span class="keyword">public</span>:
<a name="l00113"></a>00113     <span class="comment">// from CMsvOperation</span>
<a name="l00114"></a>00114         <span class="keyword">virtual</span> <span class="keyword">const</span> TDesC8&amp; ProgressL();
<a name="l00115"></a>00115 
<a name="l00116"></a>00116 <span class="keyword">private</span>:
<a name="l00117"></a>00117         <a class="code" href="class_c_msv_comp_operation.html">CMsvCompOperation</a>(CMsvSession&amp; aSession, TRequestStatus&amp; aObserverRequestStatus);
<a name="l00118"></a>00118         <span class="keywordtype">void</span> ConstructL(TUid aMtm, TInt aError, <span class="keyword">const</span> TDesC8&amp; aProgress, TMsvId aService);
<a name="l00119"></a>00119 
<a name="l00120"></a>00120 <span class="keyword">private</span>:
<a name="l00121"></a>00121         <span class="comment">// from CActive</span>
<a name="l00122"></a>00122         <span class="keyword">virtual</span> <span class="keywordtype">void</span> DoCancel();
<a name="l00123"></a>00123         <span class="keyword">virtual</span> <span class="keywordtype">void</span> RunL();
<a name="l00124"></a>00124 
<a name="l00125"></a>00125 <span class="keyword">private</span>:
<a name="l00126"></a>00126         HBufC8* iProgress;
<a name="l00127"></a>00127         };
<a name="l00128"></a>00128 
<a name="l00129"></a>00129 
<a name="l00130"></a>00130 <span class="comment">//</span>
<a name="l00131"></a>00131 <span class="comment">// inline implementations</span>
<a name="l00132"></a>00132 <span class="comment">//</span>
<a name="l00133"></a>00133 <span class="keyword">inline</span> <span class="keywordtype">void</span> TMTMTxtSettings::SetRootFolder(<span class="keyword">const</span> TDesC&amp; aRootFolder) 
<a name="l00134"></a>00134         {
<a name="l00135"></a>00135         iRootFolder = aRootFolder;
<a name="l00136"></a>00136         }
<a name="l00137"></a>00137 
<a name="l00138"></a>00138 <span class="keyword">inline</span> TPtrC TMTMTxtSettings::RootFolder()<span class="keyword"> const </span>
<a name="l00139"></a>00139 <span class="keyword">        </span>{ 
<a name="l00140"></a>00140         <span class="keywordflow">return</span> iRootFolder; 
<a name="l00141"></a>00141         }
<a name="l00142"></a>00142 
<a name="l00143"></a>00143 <span class="keyword">class </span>CRepository;
<a name="l00144"></a>00144 
<a name="l00149"></a><a class="code" href="class_c_m_t_m_txt_settings.html">00149</a> <span class="keyword">class </span><a class="code" href="class_c_m_t_m_txt_settings.html">CMTMTxtSettings</a>: <span class="keyword">public</span> CBase
<a name="l00150"></a>00150         {
<a name="l00151"></a>00151 <span class="keyword">public</span>:
<a name="l00152"></a>00152         IMPORT_C <span class="keyword">static</span> <a class="code" href="class_c_m_t_m_txt_settings.html">CMTMTxtSettings</a>* NewL();
<a name="l00153"></a>00153         ~<a class="code" href="class_c_m_t_m_txt_settings.html">CMTMTxtSettings</a>();
<a name="l00154"></a>00154         <span class="comment">// load, save, and delete text mtm settings</span>
<a name="l00155"></a>00155         IMPORT_C <span class="keywordtype">void</span> <a class="code" href="class_c_m_t_m_txt_settings.html#a8bacda6a17021938317daba7326cfb0b">LoadSettingsL</a>(TMsvId aServiceId, <a class="code" href="class_t_m_t_m_txt_settings.html">TMTMTxtSettings</a>&amp; aSettings) <span class="keyword">const</span>;
<a name="l00156"></a>00156         IMPORT_C <span class="keywordtype">void</span> <a class="code" href="class_c_m_t_m_txt_settings.html#ac9c5ff6643fb0a7c7e573da18159b08d">SaveSettingsL</a>(TMsvId aServiceId, <span class="keyword">const</span> <a class="code" href="class_t_m_t_m_txt_settings.html">TMTMTxtSettings</a>&amp; aSettings);
<a name="l00157"></a>00157         IMPORT_C <span class="keywordtype">void</span> DeleteSettingsL(TMsvId aServiceId);
<a name="l00158"></a>00158         <span class="comment">// handle a setting that specifies what the default service is</span>
<a name="l00159"></a>00159         IMPORT_C TMsvId <a class="code" href="class_c_m_t_m_txt_settings.html#a281520d5af2750933608c80ceba8b91e">DefaultServiceL</a>() <span class="keyword">const</span>;
<a name="l00160"></a>00160         IMPORT_C <span class="keywordtype">void</span> <a class="code" href="class_c_m_t_m_txt_settings.html#ab27db4213d9b7e484389146f4f43226b">SetDefaultServiceL</a>(TMsvId aService);
<a name="l00161"></a>00161         IMPORT_C <span class="keywordtype">void</span> <a class="code" href="class_c_m_t_m_txt_settings.html#a8de0c6d0a83ffe238b4495281305b3d0">DeleteDefaultServiceSettingL</a>();
<a name="l00162"></a>00162         
<a name="l00163"></a>00163 <span class="keyword">private</span>:
<a name="l00164"></a>00164         <span class="keywordtype">void</span> ConstructL();      
<a name="l00165"></a>00165         <span class="keywordtype">void</span> CreateOrSetL(TUint aKey, <span class="keyword">const</span> TDesC&amp; aValue);
<a name="l00166"></a>00166         <span class="keywordtype">void</span> CreateOrSetL(TUint aKey, TInt aValue);
<a name="l00167"></a>00167         TUint32 FindAccountL(TMsvId aService) <span class="keyword">const</span>;
<a name="l00168"></a>00168         TUint GetNextAccountSlotL();
<a name="l00169"></a>00169         <span class="keywordtype">void</span> DeleteSettingL(TUint32 settingId);
<a name="l00170"></a>00170         
<a name="l00171"></a>00171 <span class="keyword">private</span>:
<a name="l00172"></a>00172         CRepository* iRepository;
<a name="l00173"></a>00173         };
<a name="l00174"></a>00174 <span class="preprocessor">#endif // __TXUT_H__</span>
<a name="l00175"></a>00175 <span class="preprocessor"></span>
</pre></div>
<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
     <p class="copyright">Copyright &#169;2010 Nokia Corporation and/or its subsidiary(-ies).<br /> All rights
reserved. Unless otherwise stated, these materials are provided under the terms of the <a href=" http://www.eclipse.org/legal/epl-v10.html"> Eclipse Public License
v1.0</a>.</p> 
   </div>
  </div>
  <?php include_once (CURRENT_SKIN_PATH.'/sdl_footer.html'); ?>
 </body>
</html>
