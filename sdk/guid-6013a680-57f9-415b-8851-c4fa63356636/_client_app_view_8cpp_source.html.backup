<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TB9.2 Example Applications: examples/ForumNokia/HTTPClientExample/src/ClientAppView.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
<link type="text/css" rel="stylesheet" href="css/common.css" media="screen"/>
<link type="text/css" rel="stylesheet" href="css/sdl.css" media="screen"/>

<!--[if IE]>
<link href="css/iefix.css" rel="stylesheet" type="text/css" media="screen" />
<![endif]-->
</head>
<body class="kernelguide">
    
     <?php include_once (CURRENT_SKIN_PATH.'/sdl_header.html'); ?>
  <div id="sdl_container">
   <div id="leftMenu">
    <div id="expandcontractdiv">
     <a id="collapseTree" href="javascript:tree.collapseAll()">
      Collapse all
     </a>
     <a id="index" href="index.html">
      Symbian^3 Product Developer Library
     </a>
    </div>
    <iframe style="border:none" height="800" width="300" src="index-toc.html"></iframe>
<div id="treeDiv1">
     &#160;
    </div>
    <script type="text/javascript">
     var currentIconMode = 0;
	YAHOO.util.Event.onDOMReady(buildTree, this,true);
    </script>
   </div>
   <div id="sdl_content">
<!-- Generated by Doxygen 1.6.2 -->
<h1>examples/ForumNokia/HTTPClientExample/src/ClientAppView.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright (c) 2009 Nokia Corporation.</span>
<a name="l00003"></a>00003 <span class="comment"> */</span>
<a name="l00004"></a>00004 
<a name="l00005"></a>00005 <span class="preprocessor">#include &lt;aknnotewrappers.h&gt;</span>
<a name="l00006"></a>00006 <span class="preprocessor">#include &lt;coemain.h&gt;</span>
<a name="l00007"></a>00007 <span class="preprocessor">#include &lt;eikedwin.h&gt;</span>
<a name="l00008"></a>00008 <span class="preprocessor">#include &lt;gdi.h&gt;</span>
<a name="l00009"></a>00009 <span class="preprocessor">#include &lt;txtrich.h&gt;</span>
<a name="l00010"></a>00010 <span class="preprocessor">#include &quot;Client.pan&quot;</span>
<a name="l00011"></a>00011 <span class="preprocessor">#include &quot;ClientAppView.h&quot;</span>
<a name="l00012"></a>00012 <span class="preprocessor">#include &quot;ClientApplication.h&quot;</span>
<a name="l00013"></a>00013 <span class="preprocessor">#include &quot;ClientEngine.h&quot;</span>
<a name="l00014"></a>00014 <span class="preprocessor">#include &quot;HTTPClientExample_sc.hlp.hrh&quot;</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 <span class="comment">// Constants for CEikRichTextEditors</span>
<a name="l00017"></a>00017 <span class="keyword">const</span> TInt KNumberOfControls = 2;
<a name="l00018"></a>00018 <span class="keyword">const</span> TInt KNumberOfLines = 0;
<a name="l00019"></a>00019 <span class="keyword">const</span> TInt KTextLimit = 128;
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 <span class="keyword">const</span> TInt KBorderThickness = 4;
<a name="l00022"></a>00022 <span class="keyword">const</span> TInt KSizeOffset = KBorderThickness * 2;
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="comment">// Background color</span>
<a name="l00025"></a>00025 <span class="preprocessor">#define KBackgroundColor    TRgb(128, 128, 128)</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define KBorderColor        TRgb(180, 0, 0)</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00028"></a>00028 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00029"></a>00029 <span class="comment">// CClientAppView::NewL()</span>
<a name="l00030"></a>00030 <span class="comment">//</span>
<a name="l00031"></a>00031 <span class="comment">// Creates instance of CClientAppView.</span>
<a name="l00032"></a>00032 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00033"></a>00033 <a class="code" href="class_c_client_app_view.html">CClientAppView</a>* CClientAppView::NewL(<span class="keyword">const</span> TRect&amp; aRect)
<a name="l00034"></a>00034   {
<a name="l00035"></a>00035     <a class="code" href="class_c_client_app_view.html">CClientAppView</a>* <span class="keyword">self</span> = CClientAppView::NewLC(aRect);
<a name="l00036"></a>00036     CleanupStack::Pop(<span class="keyword">self</span>);
<a name="l00037"></a>00037     <span class="keywordflow">return</span> <span class="keyword">self</span>;
<a name="l00038"></a>00038   }
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00041"></a>00041 <span class="comment">// CClientAppView::NewLC()</span>
<a name="l00042"></a>00042 <span class="comment">//</span>
<a name="l00043"></a>00043 <span class="comment">// Creates instance of CClientAppView.</span>
<a name="l00044"></a>00044 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00045"></a>00045 <a class="code" href="class_c_client_app_view.html">CClientAppView</a>* CClientAppView::NewLC(<span class="keyword">const</span> TRect&amp; aRect)
<a name="l00046"></a>00046   {
<a name="l00047"></a>00047     <a class="code" href="class_c_client_app_view.html">CClientAppView</a>* <span class="keyword">self</span> = <span class="keyword">new</span> (ELeave) <a class="code" href="class_c_client_app_view.html">CClientAppView</a>;
<a name="l00048"></a>00048     CleanupStack::PushL(<span class="keyword">self</span>);
<a name="l00049"></a>00049     <span class="keyword">self</span>-&gt;ConstructL(aRect);
<a name="l00050"></a>00050     <span class="keywordflow">return</span> <span class="keyword">self</span>;
<a name="l00051"></a>00051   }
<a name="l00052"></a>00052 
<a name="l00053"></a>00053 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00054"></a>00054 <span class="comment">// CClientAppView::CClientAppView()</span>
<a name="l00055"></a>00055 <span class="comment">//</span>
<a name="l00056"></a>00056 <span class="comment">// First phase construction.</span>
<a name="l00057"></a>00057 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00058"></a>00058 CClientAppView::CClientAppView()
<a name="l00059"></a>00059   {
<a name="l00060"></a>00060   }
<a name="l00061"></a>00061 
<a name="l00062"></a>00062 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00063"></a>00063 <span class="comment">// CClientAppView::~CClientAppView()</span>
<a name="l00064"></a>00064 <span class="comment">//</span>
<a name="l00065"></a>00065 <span class="comment">// Destructor.</span>
<a name="l00066"></a>00066 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00067"></a>00067 CClientAppView::~CClientAppView()
<a name="l00068"></a>00068   {
<a name="l00069"></a>00069     <span class="keyword">delete</span> iOutputWindow;
<a name="l00070"></a>00070   <span class="keyword">delete</span> iStatusWindow;
<a name="l00071"></a>00071   }
<a name="l00072"></a>00072 
<a name="l00073"></a>00073 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00074"></a>00074 <span class="comment">// CClientAppView::ConstructL()</span>
<a name="l00075"></a>00075 <span class="comment">//</span>
<a name="l00076"></a>00076 <span class="comment">// Second phase construction.</span>
<a name="l00077"></a>00077 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00078"></a>00078 <span class="keywordtype">void</span> CClientAppView::ConstructL(<span class="keyword">const</span> TRect&amp; aRect)
<a name="l00079"></a>00079   {
<a name="l00080"></a>00080   <span class="comment">// Create a window for this application view</span>
<a name="l00081"></a>00081   CreateWindowL();
<a name="l00082"></a>00082 
<a name="l00083"></a>00083   <span class="comment">// Create output window</span>
<a name="l00084"></a>00084   iOutputWindow = <span class="keyword">new</span> (ELeave) CEikRichTextEditor();
<a name="l00085"></a>00085   iOutputWindow-&gt;SetContainerWindowL(*<span class="keyword">this</span>);
<a name="l00086"></a>00086   iOutputWindow-&gt;ConstructL(<span class="keyword">this</span>, KNumberOfLines, KTextLimit,
<a name="l00087"></a>00087     CEikEdwin::EReadOnly | CEikEdwin::EAvkonDisableCursor,
<a name="l00088"></a>00088     EGulFontControlAll, EGulNoSymbolFonts);
<a name="l00089"></a>00089   iOutputWindow-&gt;CreateScrollBarFrameL()-&gt;SetScrollBarVisibilityL(
<a name="l00090"></a>00090       CEikScrollBarFrame::EOff, CEikScrollBarFrame::EOn);
<a name="l00091"></a>00091 
<a name="l00092"></a>00092   <span class="comment">// Create status window</span>
<a name="l00093"></a>00093   iStatusWindow = <span class="keyword">new</span> (ELeave) CEikRichTextEditor();
<a name="l00094"></a>00094   iStatusWindow-&gt;SetContainerWindowL(*<span class="keyword">this</span>);
<a name="l00095"></a>00095   iStatusWindow-&gt;ConstructL(<span class="keyword">this</span>, KNumberOfLines, KTextLimit,
<a name="l00096"></a>00096     CEikEdwin::EReadOnly | CEikEdwin::EAvkonDisableCursor,
<a name="l00097"></a>00097     EGulFontControlAll, EGulNoSymbolFonts);
<a name="l00098"></a>00098   iStatusWindow-&gt;CreateScrollBarFrameL()-&gt;SetScrollBarVisibilityL(
<a name="l00099"></a>00099       CEikScrollBarFrame::EOff, CEikScrollBarFrame::EOn);
<a name="l00100"></a>00100 
<a name="l00101"></a>00101   iStatusWindow-&gt;SetFocus(ETrue);
<a name="l00102"></a>00102 
<a name="l00103"></a>00103   <span class="comment">// Activate the window, which makes it ready to be drawn</span>
<a name="l00104"></a>00104   ActivateL();
<a name="l00105"></a>00105 
<a name="l00106"></a>00106   <span class="comment">// Set the windows size</span>
<a name="l00107"></a>00107   SetRect(aRect);
<a name="l00108"></a>00108   }
<a name="l00109"></a>00109 
<a name="l00110"></a>00110 <span class="comment">// ---------------------------------------------------------</span>
<a name="l00111"></a>00111 <span class="comment">// CClientAppView::SizeChanged()</span>
<a name="l00112"></a>00112 <span class="comment">// Called whenever SetExtent(), SetSize(), SetRect(),</span>
<a name="l00113"></a>00113 <span class="comment">// SetCornerAndSize(), or SetExtentToWholeScreen() are</span>
<a name="l00114"></a>00114 <span class="comment">// called on the control. NB: The window server does not</span>
<a name="l00115"></a>00115 <span class="comment">// generate size-changed events.</span>
<a name="l00116"></a>00116 <span class="comment">// ---------------------------------------------------------</span>
<a name="l00117"></a>00117 
<a name="l00118"></a>00118 <span class="keywordtype">void</span> CClientAppView::SizeChanged()
<a name="l00119"></a>00119     {
<a name="l00120"></a>00120     TRect r = Rect();
<a name="l00121"></a>00121     TInt scrollbarWidth = GetScrollbarWidth(iOutputWindow);
<a name="l00122"></a>00122     TInt editorWidth = r.Width() - KSizeOffset - scrollbarWidth;
<a name="l00123"></a>00123     
<a name="l00124"></a>00124     TPoint upperEditPosition = TPoint(KBorderThickness, KBorderThickness);
<a name="l00125"></a>00125     TInt upperEditHeight = r.Height()*3/4 - KSizeOffset;
<a name="l00126"></a>00126     iOutputWindow-&gt;SetExtent(upperEditPosition, TSize(editorWidth,
<a name="l00127"></a>00127         upperEditHeight));
<a name="l00128"></a>00128     
<a name="l00129"></a>00129     upperEditPosition.iY += upperEditHeight + KBorderThickness;
<a name="l00130"></a>00130     upperEditHeight = r.Height()/4 - KBorderThickness;
<a name="l00131"></a>00131     iStatusWindow-&gt;SetExtent(upperEditPosition, TSize(editorWidth,
<a name="l00132"></a>00132         upperEditHeight));
<a name="l00133"></a>00133     }
<a name="l00134"></a>00134 
<a name="l00135"></a>00135 <span class="comment">// -----------------------------------------------------------------------------</span>
<a name="l00136"></a>00136 <span class="comment">// CClientAppView::GetHelpContext()</span>
<a name="l00137"></a>00137 <span class="comment">// Gets the control&#39;s help context. Returns a NULL context by default.</span>
<a name="l00138"></a>00138 <span class="comment">// -----------------------------------------------------------------------------</span>
<a name="l00139"></a>00139 
<a name="l00140"></a>00140 <span class="keywordtype">void</span> CClientAppView::GetHelpContext(TCoeHelpContext&amp; aContext)<span class="keyword"> const</span>
<a name="l00141"></a>00141 <span class="keyword">    </span>{
<a name="l00142"></a>00142     <span class="comment">// Get the help context for the application</span>
<a name="l00143"></a>00143     aContext.iMajor = KUidHelpFile;
<a name="l00144"></a>00144 
<a name="l00145"></a>00145     aContext.iContext = KContextApplication;
<a name="l00146"></a>00146     }
<a name="l00147"></a>00147 
<a name="l00148"></a>00148 <span class="comment">// ---------------------------------------------------------</span>
<a name="l00149"></a>00149 <span class="comment">// CClientAppView::HandleResourceChange()</span>
<a name="l00150"></a>00150 <span class="comment">// Called by the framework when resource is changed.</span>
<a name="l00151"></a>00151 <span class="comment">// ---------------------------------------------------------</span>
<a name="l00152"></a>00152 
<a name="l00153"></a>00153 <span class="keywordtype">void</span> CClientAppView::HandleResourceChange(TInt aType)
<a name="l00154"></a>00154     {
<a name="l00155"></a>00155     CCoeControl::HandleResourceChange(aType);
<a name="l00156"></a>00156 
<a name="l00157"></a>00157     <span class="comment">// ADDED FOR SCALABLE UI SUPPORT</span>
<a name="l00158"></a>00158     <span class="comment">// *****************************</span>
<a name="l00159"></a>00159     <span class="keywordflow">if</span> ( aType==KEikDynamicLayoutVariantSwitch )
<a name="l00160"></a>00160         {
<a name="l00161"></a>00161         TRect rect;
<a name="l00162"></a>00162         AknLayoutUtils::LayoutMetricsRect(AknLayoutUtils::EMainPane, rect);
<a name="l00163"></a>00163         SetRect(rect);
<a name="l00164"></a>00164         }
<a name="l00165"></a>00165     }
<a name="l00166"></a>00166 
<a name="l00167"></a>00167 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00168"></a>00168 <span class="comment">// CClientAppView::Draw()</span>
<a name="l00169"></a>00169 <span class="comment">//</span>
<a name="l00170"></a>00170 <span class="comment">// Draw this application&#39;s view to the screen</span>
<a name="l00171"></a>00171 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00172"></a>00172 <span class="keywordtype">void</span> CClientAppView::Draw(<span class="keyword">const</span> TRect&amp; aRect)<span class="keyword"> const</span>
<a name="l00173"></a>00173 <span class="keyword">  </span>{
<a name="l00174"></a>00174     CWindowGc&amp; gc = SystemGc();
<a name="l00175"></a>00175 
<a name="l00176"></a>00176     gc.SetPenStyle( CGraphicsContext::ENullPen );
<a name="l00177"></a>00177     gc.SetBrushColor( KBackgroundColor );
<a name="l00178"></a>00178     gc.SetBrushStyle( CGraphicsContext::ESolidBrush );
<a name="l00179"></a>00179     gc.DrawRect( aRect );
<a name="l00180"></a>00180     
<a name="l00181"></a>00181     <span class="comment">// Draw a custom border around the focused rich text editor</span>
<a name="l00182"></a>00182     gc.SetBrushColor(KBorderColor);
<a name="l00183"></a>00183     <span class="keywordflow">if</span> (iOutputWindow-&gt;IsFocused())
<a name="l00184"></a>00184         {
<a name="l00185"></a>00185         TInt scrollbarWidth = GetScrollbarWidth(iOutputWindow);
<a name="l00186"></a>00186         TRect editorRect = iOutputWindow-&gt;Rect();
<a name="l00187"></a>00187         editorRect.Grow(KBorderThickness + scrollbarWidth, KBorderThickness);
<a name="l00188"></a>00188         editorRect.Move(scrollbarWidth, 0);
<a name="l00189"></a>00189         gc.DrawRect(editorRect);
<a name="l00190"></a>00190         }
<a name="l00191"></a>00191         
<a name="l00192"></a>00192     <span class="keywordflow">if</span> (iStatusWindow-&gt;IsFocused())
<a name="l00193"></a>00193         {
<a name="l00194"></a>00194         TInt scrollbarWidth = GetScrollbarWidth(iStatusWindow);
<a name="l00195"></a>00195         TRect editorRect = iStatusWindow-&gt;Rect();
<a name="l00196"></a>00196         editorRect.Grow(KBorderThickness + scrollbarWidth, KBorderThickness);
<a name="l00197"></a>00197         editorRect.Move(scrollbarWidth, 0);
<a name="l00198"></a>00198         gc.DrawRect(editorRect);
<a name="l00199"></a>00199         }
<a name="l00200"></a>00200   }
<a name="l00201"></a>00201 
<a name="l00202"></a>00202 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00203"></a>00203 <span class="comment">// Returns the width (breadth) of the scrollbar for a particular editor</span>
<a name="l00204"></a>00204 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00205"></a>00205 TInt CClientAppView::GetScrollbarWidth(CEikRichTextEditor* anEditor)<span class="keyword"> const</span>
<a name="l00206"></a>00206 <span class="keyword">    </span>{
<a name="l00207"></a>00207     TInt scrollbarWidth = anEditor-&gt;ScrollBarFrame()-&gt;
<a name="l00208"></a>00208         ScrollBarBreadth(CEikScrollBar::EVertical);
<a name="l00209"></a>00209     <span class="comment">// TODO: If scrollbars are not drawn yet, the width remains zero. In this</span>
<a name="l00210"></a>00210     <span class="comment">// case, an intentionally magical number is returned.</span>
<a name="l00211"></a>00211     <span class="keywordflow">if</span> (scrollbarWidth == 0)
<a name="l00212"></a>00212         {
<a name="l00213"></a>00213         scrollbarWidth = 8;
<a name="l00214"></a>00214         }
<a name="l00215"></a>00215     <span class="keywordflow">return</span> scrollbarWidth;
<a name="l00216"></a>00216     }
<a name="l00217"></a>00217     
<a name="l00218"></a>00218 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00219"></a>00219 <span class="comment">// CClientAppView::CountComponentControls()</span>
<a name="l00220"></a>00220 <span class="comment">//</span>
<a name="l00221"></a>00221 <span class="comment">// Returns number of controls in this compound control.</span>
<a name="l00222"></a>00222 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00223"></a>00223 TInt CClientAppView::CountComponentControls()<span class="keyword"> const</span>
<a name="l00224"></a>00224 <span class="keyword">  </span>{
<a name="l00225"></a>00225     <span class="keywordflow">return</span> KNumberOfControls;
<a name="l00226"></a>00226   }
<a name="l00227"></a>00227 
<a name="l00228"></a>00228 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00229"></a>00229 <span class="comment">// CClientAppView::ComponentControl()</span>
<a name="l00230"></a>00230 <span class="comment">//</span>
<a name="l00231"></a>00231 <span class="comment">// Returns pointer to control with index aIndex.</span>
<a name="l00232"></a>00232 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00233"></a>00233 CCoeControl* CClientAppView::ComponentControl(TInt aIndex)<span class="keyword"> const</span>
<a name="l00234"></a>00234 <span class="keyword">  </span>{
<a name="l00235"></a>00235     <span class="keywordflow">switch</span>(aIndex)
<a name="l00236"></a>00236     {
<a name="l00237"></a>00237     <span class="keywordflow">case</span> 0:
<a name="l00238"></a>00238       <span class="keywordflow">return</span> iOutputWindow;
<a name="l00239"></a>00239     <span class="keywordflow">case</span> 1:
<a name="l00240"></a>00240       <span class="keywordflow">return</span> iStatusWindow;
<a name="l00241"></a>00241     <span class="keywordflow">default</span>:
<a name="l00242"></a>00242       Panic(EClientView);
<a name="l00243"></a>00243       <span class="keywordflow">return</span> 0;
<a name="l00244"></a>00244     }
<a name="l00245"></a>00245   }
<a name="l00246"></a>00246 
<a name="l00247"></a>00247 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00248"></a>00248 <span class="comment">// CClientAppView::HandleControlEventL()</span>
<a name="l00249"></a>00249 <span class="comment">//</span>
<a name="l00250"></a>00250 <span class="comment">// Handles control events.</span>
<a name="l00251"></a>00251 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00252"></a>00252 <span class="keywordtype">void</span> CClientAppView::HandleControlEventL(CCoeControl* <span class="comment">/* aControl */</span>,
<a name="l00253"></a>00253                        TCoeEvent <span class="comment">/* aEventType */</span> )
<a name="l00254"></a>00254   {
<a name="l00255"></a>00255   }
<a name="l00256"></a>00256 
<a name="l00257"></a>00257 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00258"></a>00258 <span class="comment">// CClientAppView::ResetL()</span>
<a name="l00259"></a>00259 <span class="comment">//</span>
<a name="l00260"></a>00260 <span class="comment">// Resets contents of output and status window.</span>
<a name="l00261"></a>00261 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00262"></a>00262 <span class="keywordtype">void</span> CClientAppView::ResetL()
<a name="l00263"></a>00263   {
<a name="l00264"></a>00264     iOutputWindow-&gt;Text()-&gt;Reset();
<a name="l00265"></a>00265     iOutputWindow-&gt;HandleTextChangedL();
<a name="l00266"></a>00266     iOutputWindow-&gt;SetCursorPosL(0, EFalse);
<a name="l00267"></a>00267 
<a name="l00268"></a>00268     iStatusWindow-&gt;Text()-&gt;Reset();
<a name="l00269"></a>00269     iStatusWindow-&gt;HandleTextChangedL();
<a name="l00270"></a>00270     iStatusWindow-&gt;SetCursorPosL(0, EFalse);
<a name="l00271"></a>00271   }
<a name="l00272"></a>00272 
<a name="l00273"></a>00273 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00274"></a>00274 <span class="comment">// CClientAppView::OfferKeyEventL()</span>
<a name="l00275"></a>00275 <span class="comment">//</span>
<a name="l00276"></a>00276 <span class="comment">// Handles key events.</span>
<a name="l00277"></a>00277 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00278"></a>00278 TKeyResponse CClientAppView::OfferKeyEventL(<span class="keyword">const</span> TKeyEvent&amp; aKeyEvent,
<a name="l00279"></a>00279                         TEventCode aType)
<a name="l00280"></a>00280   {
<a name="l00281"></a>00281   <span class="comment">// Catch EStdKeyNkp5 and EStdKeyDevice3; they are used here to switch</span>
<a name="l00282"></a>00282   <span class="comment">// the active CEikRichTextEditor.</span>
<a name="l00283"></a>00283   <span class="keywordflow">if</span>(aType == EEventKey)
<a name="l00284"></a>00284     {
<a name="l00285"></a>00285     <span class="keywordflow">switch</span>(aKeyEvent.iScanCode)
<a name="l00286"></a>00286       {
<a name="l00287"></a>00287       <span class="keywordflow">case</span> EStdKeyNkp5:
<a name="l00288"></a>00288       <span class="keywordflow">case</span> EStdKeyDevice3:
<a name="l00289"></a>00289         SwitchFocus();
<a name="l00290"></a>00290         <span class="keywordflow">return</span> EKeyWasConsumed;
<a name="l00291"></a>00291       }
<a name="l00292"></a>00292     }
<a name="l00293"></a>00293 
<a name="l00294"></a>00294   <span class="comment">// Redirect keyevents to controls</span>
<a name="l00295"></a>00295     <span class="keywordflow">if</span> (iOutputWindow)
<a name="l00296"></a>00296     {
<a name="l00297"></a>00297       <span class="keywordflow">if</span> (iOutputWindow-&gt;IsFocused())
<a name="l00298"></a>00298       <span class="keywordflow">return</span> iOutputWindow-&gt;OfferKeyEventL(aKeyEvent, aType);
<a name="l00299"></a>00299     }
<a name="l00300"></a>00300 
<a name="l00301"></a>00301     <span class="keywordflow">if</span> (iStatusWindow)
<a name="l00302"></a>00302     {
<a name="l00303"></a>00303       <span class="keywordflow">if</span> (iStatusWindow-&gt;IsFocused())
<a name="l00304"></a>00304       <span class="keywordflow">return</span> iStatusWindow-&gt;OfferKeyEventL(aKeyEvent, aType);
<a name="l00305"></a>00305     }
<a name="l00306"></a>00306 
<a name="l00307"></a>00307     <span class="keywordflow">return</span> EKeyWasNotConsumed;
<a name="l00308"></a>00308   }
<a name="l00309"></a>00309 
<a name="l00310"></a>00310 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00311"></a>00311 <span class="comment">// CClientAppView::SwitchFocus()</span>
<a name="l00312"></a>00312 <span class="comment">//</span>
<a name="l00313"></a>00313 <span class="comment">// Switches focus between the two rich text editors.</span>
<a name="l00314"></a>00314 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00315"></a>00315 <span class="keywordtype">void</span> CClientAppView::SwitchFocus()
<a name="l00316"></a>00316   {
<a name="l00317"></a>00317   <span class="keywordflow">if</span> (iOutputWindow-&gt;IsFocused())
<a name="l00318"></a>00318     {
<a name="l00319"></a>00319     iOutputWindow-&gt;SetFocus(EFalse);
<a name="l00320"></a>00320     iStatusWindow-&gt;SetFocus(ETrue);
<a name="l00321"></a>00321     }
<a name="l00322"></a>00322   <span class="keywordflow">else</span>
<a name="l00323"></a>00323     {
<a name="l00324"></a>00324     iStatusWindow-&gt;SetFocus(EFalse);
<a name="l00325"></a>00325     iOutputWindow-&gt;SetFocus(ETrue);
<a name="l00326"></a>00326     }
<a name="l00327"></a>00327   <span class="comment">// Update the borders</span>
<a name="l00328"></a>00328   DrawNow();
<a name="l00329"></a>00329   }
<a name="l00330"></a>00330   
<a name="l00331"></a>00331 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00332"></a>00332 <span class="comment">// CClientAppView::AddToStatusWindowL()</span>
<a name="l00333"></a>00333 <span class="comment">//</span>
<a name="l00334"></a>00334 <span class="comment">// Add a single line of text to the status window.</span>
<a name="l00335"></a>00335 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00336"></a>00336 <span class="keywordtype">void</span> CClientAppView::AddToStatusWindowL(<span class="keyword">const</span> TDesC&amp; aText)
<a name="l00337"></a>00337   {
<a name="l00338"></a>00338   <span class="comment">// Append aText to status window with line break</span>
<a name="l00339"></a>00339   CRichText* text = iStatusWindow-&gt;RichText();
<a name="l00340"></a>00340   text-&gt;InsertL(text-&gt;DocumentLength(), aText);
<a name="l00341"></a>00341   text-&gt;InsertL(text-&gt;DocumentLength(), CEditableText::ELineBreak);
<a name="l00342"></a>00342   iStatusWindow-&gt;HandleTextChangedL();
<a name="l00343"></a>00343   iStatusWindow-&gt;MoveCursorL(TCursorPosition::EFLineDown, EFalse);
<a name="l00344"></a>00344   }
<a name="l00345"></a>00345 
<a name="l00346"></a>00346 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00347"></a>00347 <span class="comment">// CClientAppView::AddToOutputWindowL()</span>
<a name="l00348"></a>00348 <span class="comment">//</span>
<a name="l00349"></a>00349 <span class="comment">// Add text to outputwindow. No formatting is provided.</span>
<a name="l00350"></a>00350 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00351"></a>00351 <span class="keywordtype">void</span> CClientAppView::AddToOutputWindowL(<span class="keyword">const</span> TDesC8&amp; aText)
<a name="l00352"></a>00352   {
<a name="l00353"></a>00353   <span class="comment">// Convert 8-bit aText to 16-bit and append it to end of output window</span>
<a name="l00354"></a>00354   HBufC* tempBuf = HBufC::NewL(aText.Length());
<a name="l00355"></a>00355   CleanupStack::PushL(tempBuf);
<a name="l00356"></a>00356   tempBuf-&gt;Des().Copy(aText);
<a name="l00357"></a>00357   CRichText* text = iOutputWindow-&gt;RichText();
<a name="l00358"></a>00358   text-&gt;InsertL(text-&gt;DocumentLength(), *tempBuf);
<a name="l00359"></a>00359   iOutputWindow-&gt;HandleTextChangedL();
<a name="l00360"></a>00360 
<a name="l00361"></a>00361   CleanupStack::PopAndDestroy(tempBuf);
<a name="l00362"></a>00362   }
<a name="l00363"></a>00363 
<a name="l00364"></a>00364 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00365"></a>00365 <span class="comment">// CClientAppView::ClientEvent()</span>
<a name="l00366"></a>00366 <span class="comment">//</span>
<a name="l00367"></a>00367 <span class="comment">// Called by CClientEngine to notify events to user</span>
<a name="l00368"></a>00368 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00369"></a>00369 <span class="keywordtype">void</span> CClientAppView::ClientEvent(<span class="keyword">const</span> TDesC&amp; aEventDescription)
<a name="l00370"></a>00370   {
<a name="l00371"></a>00371   TRAPD(err, AddToStatusWindowL(aEventDescription));
<a name="l00372"></a>00372   <span class="keywordflow">if</span>(err)
<a name="l00373"></a>00373     Panic(EClientView);
<a name="l00374"></a>00374   }
<a name="l00375"></a>00375 
<a name="l00376"></a>00376 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00377"></a>00377 <span class="comment">// CClientAppView::ClientBodyReceived()</span>
<a name="l00378"></a>00378 <span class="comment">//</span>
<a name="l00379"></a>00379 <span class="comment">// Called by CClientEngine when part of response body received</span>
<a name="l00380"></a>00380 <span class="comment">// ----------------------------------------------------------------------------</span>
<a name="l00381"></a>00381 <span class="keywordtype">void</span> CClientAppView::ClientBodyReceived(<span class="keyword">const</span> TDesC8&amp; aBodyData)
<a name="l00382"></a>00382   {
<a name="l00383"></a>00383   TRAPD(err, AddToOutputWindowL(aBodyData));
<a name="l00384"></a>00384   <span class="keywordflow">if</span>(err)
<a name="l00385"></a>00385     Panic(EClientView);
<a name="l00386"></a>00386   }
<a name="l00387"></a>00387 
<a name="l00388"></a>00388 <span class="comment">// end of file</span>
</pre></div>
<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
     <p class="copyright">Copyright &#169;2010 Nokia Corporation and/or its subsidiary(-ies).<br /> All rights
reserved. Unless otherwise stated, these materials are provided under the terms of the <a href=" http://www.eclipse.org/legal/epl-v10.html"> Eclipse Public License
v1.0</a>.</p> 
   </div>
  </div>
  <?php include_once (CURRENT_SKIN_PATH.'/sdl_footer.html'); ?>
 </body>
</html>
