<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TB9.2 Example Applications: examples/Base/IPC/AdvancedClientServerExample/ProcessServer/src/processserversession.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
<link type="text/css" rel="stylesheet" href="css/common.css" media="screen"/>
<link type="text/css" rel="stylesheet" href="css/sdl.css" media="screen"/>

<!--[if IE]>
<link href="css/iefix.css" rel="stylesheet" type="text/css" media="screen" />
<![endif]-->
</head>
<body class="kernelguide">
    
     <?php include_once (CURRENT_SKIN_PATH.'/sdl_header.html'); ?>
  <div id="sdl_container">
   <div id="leftMenu">
    <div id="expandcontractdiv">
     <a id="collapseTree" href="javascript:tree.collapseAll()">
      Collapse all
     </a>
     <a id="index" href="index.html">
      Symbian^3 Product Developer Library
     </a>
    </div>
    <iframe style="border:none" height="800" width="300" src="index-toc.html"></iframe>
<div id="treeDiv1">
     &#160;
    </div>
    <script type="text/javascript">
     var currentIconMode = 0;
	YAHOO.util.Event.onDOMReady(buildTree, this,true);
    </script>
   </div>
   <div id="sdl_content">
<!-- Generated by Doxygen 1.6.2 -->
<h1>examples/Base/IPC/AdvancedClientServerExample/ProcessServer/src/processserversession.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright (c) 2007-2009 Nokia Corporation and/or its subsidiary(-ies).</span>
<a name="l00002"></a>00002 <span class="comment">// All rights reserved.</span>
<a name="l00003"></a>00003 <span class="comment">// This component and the accompanying materials are made available</span>
<a name="l00004"></a>00004 <span class="comment">// under the terms of &quot;Eclipse Public License v1.0&quot;</span>
<a name="l00005"></a>00005 <span class="comment">// which accompanies this distribution, and is available</span>
<a name="l00006"></a>00006 <span class="comment">// at the URL &quot;http://www.eclipse.org/legal/epl-v10.html&quot;.</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Initial Contributors:</span>
<a name="l00009"></a>00009 <span class="comment">// Nokia Corporation - initial contribution.</span>
<a name="l00010"></a>00010 <span class="comment">//</span>
<a name="l00011"></a>00011 <span class="comment">// Contributors:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// Description:</span>
<a name="l00014"></a>00014 <span class="comment">//</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 <span class="preprocessor">#include &quot;processserversession.h&quot;</span>
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="comment">/*****************CProcessServerSession**********************/</span>
<a name="l00023"></a><a class="code" href="class_c_process_server_session.html#a78c129c639699c68a66b718fa7952728">00023</a> <a class="code" href="class_c_process_server_session.html">CProcessServerSession</a>* <a class="code" href="class_c_process_server_session.html#a78c129c639699c68a66b718fa7952728">CProcessServerSession::NewL</a>(<a class="code" href="class_c_process_server.html">CProcessServer</a>&amp; aServer)
<a name="l00024"></a>00024         {
<a name="l00025"></a>00025         <a class="code" href="class_c_process_server_session.html">CProcessServerSession</a>* s = <span class="keyword">new</span>(ELeave) <a class="code" href="class_c_process_server_session.html">CProcessServerSession</a>(aServer);
<a name="l00026"></a>00026         CleanupStack::PushL(s);
<a name="l00027"></a>00027         s-&gt;ConstructL();
<a name="l00028"></a>00028         CleanupStack::Pop();
<a name="l00029"></a>00029         <span class="keywordflow">return</span> s;       
<a name="l00030"></a>00030         }
<a name="l00034"></a>00034 CProcessServerSession::CProcessServerSession(<a class="code" href="class_c_process_server.html">CProcessServer</a>&amp; aServer)
<a name="l00035"></a>00035 :iServer(aServer)
<a name="l00036"></a>00036         {
<a name="l00037"></a>00037         
<a name="l00038"></a>00038         }
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 <span class="keywordtype">void</span> CProcessServerSession::ConstructL()
<a name="l00041"></a>00041         {
<a name="l00042"></a>00042         }
<a name="l00046"></a><a class="code" href="class_c_process_server_session.html#ab196d73deaea28ab67d9e765dc8e7c52">00046</a> <a class="code" href="class_c_process_server_session.html#ab196d73deaea28ab67d9e765dc8e7c52">CProcessServerSession::~CProcessServerSession</a>()
<a name="l00047"></a>00047         {
<a name="l00048"></a>00048         <span class="keyword">delete</span> iAsyncRequestHandler;            
<a name="l00049"></a>00049         iServer.<a class="code" href="class_c_process_server.html#ac381e3ac102f3c720ca1cffec2ab570d">CloseLogicalChannel</a>();
<a name="l00050"></a>00050         iServer.<a class="code" href="class_c_process_server.html#acc9e2e8092c07e6fbf8aa4f866a1ba89">DecrementRefCount</a>();
<a name="l00051"></a>00051         }
<a name="l00056"></a><a class="code" href="class_c_process_server_session.html#ade054401b18a2003691336f0e75b4a19">00056</a> <span class="keywordtype">void</span> <a class="code" href="class_c_process_server_session.html#ade054401b18a2003691336f0e75b4a19">CProcessServerSession::CreateL</a>()
<a name="l00057"></a>00057 <span class="comment">//</span>
<a name="l00058"></a>00058 <span class="comment">// 2nd phase constructor for sessions - called by the CServer framework</span>
<a name="l00059"></a>00059 <span class="comment">//</span>
<a name="l00060"></a>00060         {
<a name="l00061"></a>00061         iServer.<a class="code" href="class_c_process_server.html#ad113263093aaa3489308e2ecc6f20c87">IncrementRefCount</a>();            
<a name="l00062"></a>00062         <span class="comment">//load dummy ldd</span>
<a name="l00063"></a>00063         User::LeaveIfError(iServer.<a class="code" href="class_c_process_server.html#a9333ba960d07b42c72d98466b01788ce">LoadDevice</a>());
<a name="l00064"></a>00064         iAsyncRequestHandler = <a class="code" href="class_c_process_server_session.html#a78c129c639699c68a66b718fa7952728">CAsyncHandler::NewL</a>(iServer);    
<a name="l00065"></a>00065         }
<a name="l00069"></a><a class="code" href="class_c_process_server_session.html#aca98bfe956305fc646b102d92e920fbc">00069</a> <span class="keywordtype">void</span> <a class="code" href="class_c_process_server_session.html#aca98bfe956305fc646b102d92e920fbc">CProcessServerSession::ServiceL</a>(<span class="keyword">const</span> RMessage2&amp; aMessage)
<a name="l00070"></a>00070         {
<a name="l00071"></a>00071         TInt r = KErrNone;
<a name="l00072"></a>00072         <span class="keywordflow">switch</span>(aMessage.Function())
<a name="l00073"></a>00073                 {                               
<a name="l00074"></a>00074                 <span class="keywordflow">case</span> ELoadDeviceDriver:
<a name="l00075"></a>00075                         aMessage.Complete(iServer.<a class="code" href="class_c_process_server.html#a9333ba960d07b42c72d98466b01788ce">LoadDevice</a>());
<a name="l00076"></a>00076                         <span class="keywordflow">break</span>;
<a name="l00077"></a>00077                 
<a name="l00078"></a>00078                 <span class="keywordflow">case</span> EOpenDriver:
<a name="l00079"></a>00079                         aMessage.Complete(iServer.<a class="code" href="class_c_process_server.html#a1861af3b7073acf002b55520397c4678">OpenLogicalChannel</a>());
<a name="l00080"></a>00080                         <span class="keywordflow">break</span>;
<a name="l00081"></a>00081                         
<a name="l00082"></a>00082                 <span class="keywordflow">case</span> EDummyLDDSendData: <span class="comment">//async</span>
<a name="l00083"></a>00083                         r = iAsyncRequestHandler-&gt;ProcessRequest(aMessage);
<a name="l00084"></a>00084                         <span class="keywordflow">if</span> (r!=KErrNone)
<a name="l00085"></a>00085                                 aMessage.Complete(r);
<a name="l00086"></a>00086                         <span class="keywordflow">break</span>;
<a name="l00087"></a>00087                         
<a name="l00088"></a>00088                 <span class="keywordflow">case</span> EDummyLDDSendDataCancel: <span class="comment">//cancel async</span>
<a name="l00089"></a>00089                         iAsyncRequestHandler-&gt;Cancel(); 
<a name="l00090"></a>00090                         aMessage.Complete(KErrNone); 
<a name="l00091"></a>00091                         <span class="keywordflow">break</span>;
<a name="l00092"></a>00092                         
<a name="l00093"></a>00093                 <span class="keywordflow">case</span> EUnloadDeviceDriver:
<a name="l00094"></a>00094                         aMessage.Complete(iServer.<a class="code" href="class_c_process_server.html#a3e78b0766ff78223d4ccf77fa717b269">UnloadDevice</a>());
<a name="l00095"></a>00095                         <span class="keywordflow">break</span>;
<a name="l00096"></a>00096                         
<a name="l00097"></a>00097                 <span class="keywordflow">default</span>:
<a name="l00098"></a>00098                         User::Leave(KErrNotSupported);
<a name="l00099"></a>00099                         <span class="keywordflow">break</span>;
<a name="l00100"></a>00100                 }
<a name="l00101"></a>00101 
<a name="l00102"></a>00102         }
<a name="l00103"></a>00103                 
<a name="l00104"></a>00104 
<a name="l00105"></a>00105 
<a name="l00106"></a>00106 <span class="comment">/*****************CAsyncHandler**********************/</span>
<a name="l00110"></a>00110 CProcessServerSession::CAsyncHandler* <a class="code" href="class_c_process_server_session.html#a78c129c639699c68a66b718fa7952728">CProcessServerSession::CAsyncHandler::NewL</a>(<a class="code" href="class_c_process_server.html">CProcessServer</a>&amp; aServer)
<a name="l00111"></a>00111         {
<a name="l00112"></a>00112         CAsyncHandler* <span class="keyword">self</span> = <span class="keyword">new</span>(ELeave) CAsyncHandler(aServer);
<a name="l00113"></a>00113         CleanupStack::PushL(<span class="keyword">self</span>);
<a name="l00114"></a>00114         <span class="keyword">self</span> -&gt;ConstructL();
<a name="l00115"></a>00115         CleanupStack::Pop();
<a name="l00116"></a>00116         <span class="keywordflow">return</span> <span class="keyword">self</span>;
<a name="l00117"></a>00117         }
<a name="l00121"></a>00121 CProcessServerSession::CAsyncHandler::~CAsyncHandler()
<a name="l00122"></a>00122         {
<a name="l00123"></a>00123         Cancel();
<a name="l00124"></a>00124         iMessageArray.Close();
<a name="l00125"></a>00125         }
<a name="l00129"></a>00129 <span class="keywordtype">void</span> CProcessServerSession::CAsyncHandler::RunL()
<a name="l00130"></a>00130         {
<a name="l00131"></a>00131         <span class="comment">// complete the request</span>
<a name="l00132"></a>00132         Complete(iStatus.Int());
<a name="l00133"></a>00133         
<a name="l00134"></a>00134         <span class="comment">//continue to execute next request if there is any</span>
<a name="l00135"></a>00135         ExecuteFirstRequestInArray();
<a name="l00136"></a>00136         }
<a name="l00140"></a>00140 <span class="keywordtype">void</span> CProcessServerSession::CAsyncHandler::DoCancel()
<a name="l00141"></a>00141         {
<a name="l00142"></a>00142         iServer.<a class="code" href="class_c_process_server.html#a853cb371c075e2f74ac3e28a9a66f38e">CancelSendData</a>();
<a name="l00143"></a>00143         <span class="comment">// complete the request</span>
<a name="l00144"></a>00144         Complete(iStatus.Int());
<a name="l00145"></a>00145         }
<a name="l00149"></a>00149 CProcessServerSession::CAsyncHandler::CAsyncHandler(<a class="code" href="class_c_process_server.html">CProcessServer</a>&amp; aServer)
<a name="l00150"></a>00150         :CActive(EPriorityStandard), iServer(aServer)
<a name="l00151"></a>00151         {
<a name="l00152"></a>00152         CActiveScheduler::Add(<span class="keyword">this</span>);
<a name="l00153"></a>00153         }
<a name="l00154"></a>00154 
<a name="l00155"></a>00155 <span class="keywordtype">void</span> CProcessServerSession::CAsyncHandler::ConstructL()
<a name="l00156"></a>00156         {
<a name="l00157"></a>00157         
<a name="l00158"></a>00158         }
<a name="l00164"></a>00164 TInt CProcessServerSession::CAsyncHandler::ProcessRequest(<span class="keyword">const</span> RMessage2&amp; aMessage)
<a name="l00165"></a>00165         {
<a name="l00166"></a>00166         TInt ret;
<a name="l00167"></a>00167         <span class="comment">//store message</span>
<a name="l00168"></a>00168         TMessage newMessage;
<a name="l00169"></a>00169         newMessage.Message() = aMessage;
<a name="l00170"></a>00170         ret= iMessageArray.Append(newMessage);
<a name="l00171"></a>00171         <span class="keywordflow">if</span> (ret != KErrNone)
<a name="l00172"></a>00172                 <span class="keywordflow">return</span> ret;
<a name="l00173"></a>00173         
<a name="l00174"></a>00174         <span class="comment">// kick off the first request in the array when there is only one in the array </span>
<a name="l00175"></a>00175         <span class="keywordflow">if</span> (iMessageArray.Count() == 1) 
<a name="l00176"></a>00176                 ret= ExecuteFirstRequestInArray();
<a name="l00177"></a>00177 
<a name="l00178"></a>00178         <span class="keywordflow">return</span> ret;
<a name="l00179"></a>00179         }
<a name="l00184"></a>00184 TInt CProcessServerSession::CAsyncHandler::ExecuteFirstRequestInArray()
<a name="l00185"></a>00185         {
<a name="l00186"></a>00186         TInt r = KErrNone;
<a name="l00187"></a>00187         <span class="keywordflow">if</span> (iMessageArray.Count() != 0)
<a name="l00188"></a>00188                 {
<a name="l00189"></a>00189                 <span class="keyword">const</span> RMessage2&amp; message = iMessageArray[0].Message();
<a name="l00190"></a>00190                 <span class="keywordflow">switch</span> (message.Function())
<a name="l00191"></a>00191                         {
<a name="l00192"></a>00192                         <span class="keywordflow">case</span> EDummyLDDSendData:
<a name="l00193"></a>00193                                 {
<a name="l00194"></a>00194                                 TBuf8&lt;KMaxMessageLen&gt; sendObject;
<a name="l00195"></a>00195                                 r= message.Read(0, sendObject);
<a name="l00196"></a>00196                                 <span class="keywordflow">if</span> (r == KErrNone)
<a name="l00197"></a>00197                                         {
<a name="l00198"></a>00198                                         r = iServer.<a class="code" href="class_c_process_server.html#aa1e3677c879b6a531f67267ff63ec214">SendDataToDevice</a>(iStatus, sendObject);
<a name="l00199"></a>00199                                         <span class="keywordflow">if</span> (r==KErrNone)
<a name="l00200"></a>00200                                                 SetActive();
<a name="l00201"></a>00201                                         }
<a name="l00202"></a>00202                                 }
<a name="l00203"></a>00203                                 <span class="keywordflow">break</span>;
<a name="l00204"></a>00204                         
<a name="l00205"></a>00205                         <span class="keywordflow">default</span>:
<a name="l00206"></a>00206                                 <span class="keywordflow">break</span>;
<a name="l00207"></a>00207                         }
<a name="l00208"></a>00208                 
<a name="l00209"></a>00209                 }
<a name="l00210"></a>00210         <span class="keywordflow">return</span> r; 
<a name="l00211"></a>00211         }
<a name="l00215"></a>00215 <span class="keywordtype">void</span> CProcessServerSession::CAsyncHandler::Complete(TInt aResult)
<a name="l00216"></a>00216         {
<a name="l00217"></a>00217         iMessageArray[0].Message().Complete(aResult);
<a name="l00218"></a>00218         iMessageArray.Remove(0);
<a name="l00219"></a>00219         iServer.<a class="code" href="class_c_process_server.html#a6af5450445ef1f12826f88a24ec83043">UpdateDriverState</a>(CProcessServer::ELogicalChannelOpened);
<a name="l00220"></a>00220         }
<a name="l00221"></a>00221 
<a name="l00222"></a>00222 <span class="comment">/***************TMessage****************/</span>
<a name="l00226"></a>00226 <span class="keyword">const</span> RMessage2&amp; CProcessServerSession::CAsyncHandler::TMessage::Message()<span class="keyword"> const</span>
<a name="l00227"></a>00227 <span class="keyword">        </span>{
<a name="l00228"></a>00228         <span class="keywordflow">return</span> iMessage;
<a name="l00229"></a>00229         }
<a name="l00230"></a>00230         
<a name="l00231"></a>00231 RMessage2&amp; CProcessServerSession::CAsyncHandler::TMessage::Message()
<a name="l00232"></a>00232         {
<a name="l00233"></a>00233         <span class="keywordflow">return</span> iMessage; 
<a name="l00234"></a>00234         }
<a name="l00235"></a>00235 
<a name="l00236"></a>00236 <span class="comment">//EOF</span>
</pre></div>
<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
     <p class="copyright">Copyright &#169;2010 Nokia Corporation and/or its subsidiary(-ies).<br /> All rights
reserved. Unless otherwise stated, these materials are provided under the terms of the <a href=" http://www.eclipse.org/legal/epl-v10.html"> Eclipse Public License
v1.0</a>.</p> 
   </div>
  </div>
  <?php include_once (CURRENT_SKIN_PATH.'/sdl_footer.html'); ?>
 </body>
</html>
