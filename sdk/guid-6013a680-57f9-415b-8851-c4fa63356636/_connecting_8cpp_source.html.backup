<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TB9.2 Example Applications: examples/Base/FileServer/Connecting/Connecting.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
<link type="text/css" rel="stylesheet" href="css/common.css" media="screen"/>
<link type="text/css" rel="stylesheet" href="css/sdl.css" media="screen"/>

<!--[if IE]>
<link href="css/iefix.css" rel="stylesheet" type="text/css" media="screen" />
<![endif]-->
</head>
<body class="kernelguide">
    
     <?php include_once (CURRENT_SKIN_PATH.'/sdl_header.html'); ?>
  <div id="sdl_container">
   <div id="leftMenu">
    <div id="expandcontractdiv">
     <a id="collapseTree" href="javascript:tree.collapseAll()">
      Collapse all
     </a>
     <a id="index" href="index.html">
      Symbian^3 Product Developer Library
     </a>
    </div>
    <iframe style="border:none" height="800" width="300" src="index-toc.html"></iframe>
<div id="treeDiv1">
     &#160;
    </div>
    <script type="text/javascript">
     var currentIconMode = 0;
	YAHOO.util.Event.onDOMReady(buildTree, this,true);
    </script>
   </div>
   <div id="sdl_content">
<!-- Generated by Doxygen 1.6.2 -->
<h1>examples/Base/FileServer/Connecting/Connecting.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright (c) 2000-2009 Nokia Corporation and/or its subsidiary(-ies).</span>
<a name="l00002"></a>00002 <span class="comment">// All rights reserved.</span>
<a name="l00003"></a>00003 <span class="comment">// This component and the accompanying materials are made available</span>
<a name="l00004"></a>00004 <span class="comment">// under the terms of &quot;Eclipse Public License v1.0&quot;</span>
<a name="l00005"></a>00005 <span class="comment">// which accompanies this distribution, and is available</span>
<a name="l00006"></a>00006 <span class="comment">// at the URL &quot;http://www.eclipse.org/legal/epl-v10.html&quot;.</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Initial Contributors:</span>
<a name="l00009"></a>00009 <span class="comment">// Nokia Corporation - initial contribution.</span>
<a name="l00010"></a>00010 <span class="comment">//</span>
<a name="l00011"></a>00011 <span class="comment">// Contributors:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// Description:</span>
<a name="l00014"></a>00014 <span class="comment">// NB. THE FOLLOWING CODE CREATES A DIRECTORY CALLED F32TEST IN THE DEFAULT </span>
<a name="l00015"></a>00015 <span class="comment">// DIRECTORY AND DELETES IT BEFORE EXITING.</span>
<a name="l00016"></a>00016 <span class="comment">//</span>
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 <span class="preprocessor">#include &lt;f32file.h&gt;</span>
<a name="l00019"></a>00019 <span class="preprocessor">#include &quot;CommonFramework.h&quot;</span>
<a name="l00020"></a>00020         
<a name="l00021"></a>00021 <span class="keyword">static</span> RFs fsSession;
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="keyword">static</span> <span class="keywordtype">void</span> doExampleL()
<a name="l00024"></a>00024     {
<a name="l00025"></a>00025         <span class="comment">// Define descriptor constants using the _LIT macro </span>
<a name="l00026"></a>00026         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KMessage1,<span class="stringliteral">&quot;Default path for fsSession is %S\n&quot;</span>);
<a name="l00027"></a>00027         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KMessage2,<span class="stringliteral">&quot;Session path for fsSession is now %S\n&quot;</span>);
<a name="l00028"></a>00028         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KMessage3,<span class="stringliteral">&quot;Session path for fsSession2 is %S\n&quot;</span>);
<a name="l00029"></a>00029     <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTestDir,<span class="stringliteral">&quot;f32test\\&quot;</span>);
<a name="l00030"></a>00030 
<a name="l00031"></a>00031           <span class="comment">// Open file server session</span>
<a name="l00032"></a>00032         User::LeaveIfError(fsSession.Connect());
<a name="l00033"></a>00033         
<a name="l00034"></a>00034           <span class="comment">// Get the default session path, and display it.</span>
<a name="l00035"></a>00035           <span class="comment">// It should be the private path for this (process)</span>
<a name="l00036"></a>00036           <span class="comment">// i.e.\private\0fffff04 of the writable drive.</span>
<a name="l00037"></a>00037         TFileName path;
<a name="l00038"></a>00038         User::LeaveIfError(fsSession.SessionPath(path));
<a name="l00039"></a>00039         console-&gt;Printf(KMessage1,&amp;path);
<a name="l00040"></a>00040 
<a name="l00041"></a>00041           <span class="comment">// Create a directory within the default session path.</span>
<a name="l00042"></a>00042           <span class="comment">// and then set the default path to the full directory.</span>
<a name="l00043"></a>00043           <span class="comment">//</span>
<a name="l00044"></a>00044           <span class="comment">// Steps.</span>
<a name="l00045"></a>00045           <span class="comment">// </span>
<a name="l00046"></a>00046           <span class="comment">// 1  Create the private path - it is not automatically created by the Symbian platform.</span>
<a name="l00047"></a>00047           <span class="comment">// 2. Get the name of the private path</span>
<a name="l00048"></a>00048           <span class="comment">// 3. Create the new directory level f32test\ within the private path</span>
<a name="l00049"></a>00049           <span class="comment">// 4. Set the session path to \private\0fffff04\f32test.</span>
<a name="l00050"></a>00050         User::LeaveIfError(fsSession.CreatePrivatePath(RFs::GetSystemDrive())); <span class="comment">// &lt;--- 1.</span>
<a name="l00051"></a>00051         fsSession.PrivatePath(path);   <span class="comment">// &lt;------------------------------ 2.</span>
<a name="l00052"></a>00052         path.Append(KTestDir);
<a name="l00053"></a>00053         User::LeaveIfError(fsSession.MkDir(path));<span class="comment">// &lt;------------------- 3.</span>
<a name="l00054"></a>00054         User::LeaveIfError(fsSession.SetSessionPath(path)); <span class="comment">// &lt;--------- 4.</span>
<a name="l00055"></a>00055                 
<a name="l00056"></a>00056           <span class="comment">// Retrieve the session path to make sure that the system</span>
<a name="l00057"></a>00057           <span class="comment">// agrees with what we believe is the new session path.</span>
<a name="l00058"></a>00058           <span class="comment">// Clear the path descriptor; this is NOT necessary, but just</span>
<a name="l00059"></a>00059           <span class="comment">// shows that we are not cheating !</span>
<a name="l00060"></a>00060     path.SetLength(0);
<a name="l00061"></a>00061     User::LeaveIfError(fsSession.SessionPath(path));
<a name="l00062"></a>00062         console-&gt;Printf(KMessage2,&amp;path);
<a name="l00063"></a>00063          
<a name="l00064"></a>00064           <span class="comment">// Make another connection to the file server and show  </span>
<a name="l00065"></a>00065           <span class="comment">// its default session path.It should be the original </span>
<a name="l00066"></a>00066           <span class="comment">// private path for this (process) i.e.\private\0fffff04</span>
<a name="l00067"></a>00067           <span class="comment">// of the writable drive.</span>
<a name="l00068"></a>00068         RFs fsSession2;
<a name="l00069"></a>00069         User::LeaveIfError(fsSession2.Connect());
<a name="l00070"></a>00070         fsSession2.SessionPath(path);
<a name="l00071"></a>00071         console-&gt;Printf(KMessage3,&amp;path);
<a name="l00072"></a>00072 
<a name="l00073"></a>00073       <span class="comment">// Remove the \f32test\ directory </span>
<a name="l00074"></a>00074         fsSession.PrivatePath(path);       
<a name="l00075"></a>00075         path.Append(KTestDir);
<a name="l00076"></a>00076         User::LeaveIfError(fsSession.RmDir(path));
<a name="l00077"></a>00077         
<a name="l00078"></a>00078           <span class="comment">// Close these two sessions with the file server.</span>
<a name="l00079"></a>00079         fsSession2.Close();
<a name="l00080"></a>00080         fsSession.Close();
<a name="l00081"></a>00081         }
</pre></div>
<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
     <p class="copyright">Copyright &#169;2010 Nokia Corporation and/or its subsidiary(-ies).<br /> All rights
reserved. Unless otherwise stated, these materials are provided under the terms of the <a href=" http://www.eclipse.org/legal/epl-v10.html"> Eclipse Public License
v1.0</a>.</p> 
   </div>
  </div>
  <?php include_once (CURRENT_SKIN_PATH.'/sdl_footer.html'); ?>
 </body>
</html>
