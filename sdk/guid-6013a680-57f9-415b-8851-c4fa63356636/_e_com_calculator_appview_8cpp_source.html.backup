<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TB9.2 Example Applications: examples/ForumNokia/EComCalculator/client/src/EComCalculatorAppview.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
<link type="text/css" rel="stylesheet" href="css/common.css" media="screen"/>
<link type="text/css" rel="stylesheet" href="css/sdl.css" media="screen"/>

<!--[if IE]>
<link href="css/iefix.css" rel="stylesheet" type="text/css" media="screen" />
<![endif]-->
</head>
<body class="kernelguide">
    
     <?php include_once (CURRENT_SKIN_PATH.'/sdl_header.html'); ?>
  <div id="sdl_container">
   <div id="leftMenu">
    <div id="expandcontractdiv">
     <a id="collapseTree" href="javascript:tree.collapseAll()">
      Collapse all
     </a>
     <a id="index" href="index.html">
      Symbian^3 Product Developer Library
     </a>
    </div>
    <iframe style="border:none" height="800" width="300" src="index-toc.html"></iframe>
<div id="treeDiv1">
     &#160;
    </div>
    <script type="text/javascript">
     var currentIconMode = 0;
	YAHOO.util.Event.onDOMReady(buildTree, this,true);
    </script>
   </div>
   <div id="sdl_content">
<!-- Generated by Doxygen 1.6.2 -->
<h1>examples/ForumNokia/EComCalculator/client/src/EComCalculatorAppview.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * ============================================================================</span>
<a name="l00003"></a>00003 <span class="comment"> *  Name     : CEComCalculatorAppView from EComCalculatorAppView.cpp</span>
<a name="l00004"></a>00004 <span class="comment"> *  Part of  : EComCalculator</span>
<a name="l00005"></a>00005 <span class="comment"> *  Created  : 17/11/2003 by Forum Nokia</span>
<a name="l00006"></a>00006 <span class="comment"> *  Version  : 1.0</span>
<a name="l00007"></a>00007 <span class="comment"> *  Copyright: Nokia Corporation</span>
<a name="l00008"></a>00008 <span class="comment"> * ============================================================================</span>
<a name="l00009"></a>00009 <span class="comment"> */</span>
<a name="l00010"></a>00010 
<a name="l00011"></a>00011 
<a name="l00012"></a>00012 <span class="preprocessor">#include &lt;barsread.h&gt;</span>  <span class="comment">// for resource reader</span>
<a name="l00013"></a>00013 <span class="preprocessor">#include &lt;eiklabel.h&gt;</span>  <span class="comment">// for label controls</span>
<a name="l00014"></a>00014 <span class="preprocessor">#include &lt;eikedwin.h&gt;</span>  <span class="comment">// for CEikEdwin</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 <span class="preprocessor">#include &quot;EComCalculatorAppView.h&quot;</span>
<a name="l00017"></a>00017 <span class="preprocessor">#include &lt;EComCalculator.rsg&gt;</span> <span class="comment">// Generated from EComCalculator.rss</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="comment">// Constants used in controls&#39; position calculations</span>
<a name="l00020"></a>00020 <span class="keyword">const</span> TInt KXPos = 10; <span class="comment">//x position</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="comment">// Constants</span>
<a name="l00023"></a>00023 <span class="keyword">const</span> TInt KNumberOfControls = 5; <span class="comment">//Number of UI controls within this container</span>
<a name="l00024"></a>00024 <span class="keyword">const</span> TInt KBottomMargin = 10; <span class="comment">//The amount of space to leave to bottom</span>
<a name="l00025"></a>00025 <span class="keyword">const</span> TInt KResultSize = 128;
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 <span class="comment">// Constant texts</span>
<a name="l00028"></a>00028 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KLabelTextA,<span class="stringliteral">&quot;Number A:&quot;</span>);
<a name="l00029"></a>00029 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KLabelTextB,<span class="stringliteral">&quot;Number B:&quot;</span>);
<a name="l00030"></a>00030 <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KTextEmpty, <span class="stringliteral">&quot;&quot;</span>);
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="comment">// Enumarations</span>
<a name="l00033"></a>00033 <span class="keyword">enum</span> TControls
<a name="l00034"></a>00034     {
<a name="l00035"></a>00035     ELabelA,
<a name="l00036"></a>00036     EEdwinA,
<a name="l00037"></a>00037     ELabelB,
<a name="l00038"></a>00038     EEdwinB,
<a name="l00039"></a>00039     ELabelResult
<a name="l00040"></a>00040     };
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 <span class="comment">// Create instance of this compound control.</span>
<a name="l00043"></a><a class="code" href="class_c_e_com_calculator_app_view.html#a684da4b24db80dcf7dc41768e59d1435">00043</a> <a class="code" href="class_c_e_com_calculator_app_view.html">CEComCalculatorAppView</a>* <a class="code" href="class_c_e_com_calculator_app_view.html#a684da4b24db80dcf7dc41768e59d1435">CEComCalculatorAppView::NewL</a>(<span class="keyword">const</span> TRect&amp; aRect)
<a name="l00044"></a>00044     {
<a name="l00045"></a>00045     <a class="code" href="class_c_e_com_calculator_app_view.html">CEComCalculatorAppView</a>* <span class="keyword">self</span> = <span class="keyword">new</span> (ELeave) <a class="code" href="class_c_e_com_calculator_app_view.html">CEComCalculatorAppView</a>;
<a name="l00046"></a>00046     CleanupStack::PushL(<span class="keyword">self</span>);
<a name="l00047"></a>00047     <span class="keyword">self</span>-&gt;ConstructL(aRect);
<a name="l00048"></a>00048     CleanupStack::Pop(<span class="keyword">self</span>);
<a name="l00049"></a>00049     <span class="keywordflow">return</span> <span class="keyword">self</span>;
<a name="l00050"></a>00050     }
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 <span class="comment">// Perform the second phase construction. Instantiate the owned controls.</span>
<a name="l00053"></a>00053 <span class="keywordtype">void</span> CEComCalculatorAppView::ConstructL(<span class="keyword">const</span> TRect&amp; aRect)
<a name="l00054"></a>00054     {
<a name="l00055"></a>00055 
<a name="l00056"></a>00056     <span class="comment">// Create a window for this application view</span>
<a name="l00057"></a>00057     CreateWindowL();
<a name="l00058"></a>00058 
<a name="l00059"></a>00059     iLabelA = <span class="keyword">new</span> (ELeave) CEikLabel;
<a name="l00060"></a>00060     iLabelA-&gt;SetContainerWindowL(*<span class="keyword">this</span>);
<a name="l00061"></a>00061     iLabelA-&gt;SetTextL(KLabelTextA);
<a name="l00062"></a>00062 
<a name="l00063"></a>00063     iLabelB = <span class="keyword">new</span> (ELeave) CEikLabel;
<a name="l00064"></a>00064     iLabelB-&gt;SetContainerWindowL(*<span class="keyword">this</span>);
<a name="l00065"></a>00065     iLabelB-&gt;SetTextL(KLabelTextB);
<a name="l00066"></a>00066 
<a name="l00067"></a>00067     iLabelResult = <span class="keyword">new</span> (ELeave) CEikLabel;
<a name="l00068"></a>00068     iLabelResult-&gt;SetContainerWindowL(*<span class="keyword">this</span>);
<a name="l00069"></a>00069     iLabelResult-&gt;SetTextL(KTextEmpty);
<a name="l00070"></a>00070 
<a name="l00071"></a>00071     TResourceReader reader;
<a name="l00072"></a>00072     iCoeEnv-&gt;CreateResourceReaderLC(reader, R_ECOMCALCULATOR_EDWIN);
<a name="l00073"></a>00073     iEdwinA = <span class="keyword">new</span> (ELeave) CEikEdwin;
<a name="l00074"></a>00074     iEdwinA-&gt;SetContainerWindowL(*<span class="keyword">this</span>);
<a name="l00075"></a>00075     iEdwinA-&gt;ConstructFromResourceL(reader);
<a name="l00076"></a>00076     CleanupStack::PopAndDestroy();  <span class="comment">// Resource reader</span>
<a name="l00077"></a>00077 
<a name="l00078"></a>00078     iCoeEnv-&gt;CreateResourceReaderLC(reader, R_ECOMCALCULATOR_EDWIN);
<a name="l00079"></a>00079     iEdwinB = <span class="keyword">new</span> (ELeave) CEikEdwin;
<a name="l00080"></a>00080     iEdwinB-&gt;SetContainerWindowL(*<span class="keyword">this</span>);
<a name="l00081"></a>00081     iEdwinB-&gt;ConstructFromResourceL(reader);
<a name="l00082"></a>00082     CleanupStack::PopAndDestroy();  <span class="comment">// Resource reader</span>
<a name="l00083"></a>00083 
<a name="l00084"></a>00084     SizeChanged();
<a name="l00085"></a>00085     iEdwinA-&gt;SetFocus(ETrue);
<a name="l00086"></a>00086 
<a name="l00087"></a>00087     <span class="comment">// Set the windows size</span>
<a name="l00088"></a>00088     SetRect(aRect);
<a name="l00089"></a>00089 
<a name="l00090"></a>00090     <span class="comment">// Activate the window, which marks it ready to be drawn</span>
<a name="l00091"></a>00091     ActivateL();
<a name="l00092"></a>00092     }
<a name="l00093"></a>00093 
<a name="l00094"></a>00094 <span class="comment">// Constructor.</span>
<a name="l00095"></a>00095 CEComCalculatorAppView::CEComCalculatorAppView()
<a name="l00096"></a>00096                         :iLabelA(NULL), iLabelB(NULL),
<a name="l00097"></a>00097                          iEdwinA(NULL), iEdwinB(NULL),
<a name="l00098"></a>00098                          iLabelResult(NULL)
<a name="l00099"></a>00099     {
<a name="l00100"></a>00100     <span class="comment">// No implementation required</span>
<a name="l00101"></a>00101     }
<a name="l00102"></a>00102 
<a name="l00103"></a>00103 <span class="comment">// Destructor. Release the owned controls</span>
<a name="l00104"></a><a class="code" href="class_c_e_com_calculator_app_view.html#a2d6525964ac2d79d908726c0a1611eef">00104</a> <a class="code" href="class_c_e_com_calculator_app_view.html#a2d6525964ac2d79d908726c0a1611eef">CEComCalculatorAppView::~CEComCalculatorAppView</a>()
<a name="l00105"></a>00105     {
<a name="l00106"></a>00106         <span class="keyword">delete</span> iLabelA;
<a name="l00107"></a>00107         <span class="keyword">delete</span> iLabelB;
<a name="l00108"></a>00108         <span class="keyword">delete</span> iEdwinA;
<a name="l00109"></a>00109         <span class="keyword">delete</span> iEdwinB;
<a name="l00110"></a>00110         <span class="keyword">delete</span> iLabelResult;
<a name="l00111"></a>00111     }
<a name="l00112"></a>00112 
<a name="l00113"></a>00113 <span class="comment">// Draw the view. Called by framework, when necessary.</span>
<a name="l00114"></a>00114 <span class="keywordtype">void</span> CEComCalculatorAppView::Draw(<span class="keyword">const</span> TRect&amp; aRect)<span class="keyword"> const</span>
<a name="l00115"></a>00115 <span class="keyword">    </span>{
<a name="l00116"></a>00116     <span class="comment">//Clear the screen</span>
<a name="l00117"></a>00117     CWindowGc&amp; gc = SystemGc();
<a name="l00118"></a>00118     gc.Clear(Rect());
<a name="l00119"></a>00119     gc.SetBrushColor(KRgbGray);
<a name="l00120"></a>00120     gc.SetBrushStyle(CGraphicsContext::ESolidBrush);
<a name="l00121"></a>00121     gc.DrawRect(aRect);
<a name="l00122"></a>00122     }
<a name="l00123"></a>00123 
<a name="l00124"></a>00124 <span class="comment">// Scale the owned controls to reflect current (new) state</span>
<a name="l00125"></a>00125 <span class="keywordtype">void</span> CEComCalculatorAppView::SizeChanged()
<a name="l00126"></a>00126     {
<a name="l00127"></a>00127     TRect rect = Rect();
<a name="l00128"></a>00128 
<a name="l00129"></a>00129     TInt bottom = rect.iBr.iY - KBottomMargin;
<a name="l00130"></a>00130     TInt comp_height = bottom/KNumberOfControls;
<a name="l00131"></a>00131 
<a name="l00132"></a>00132     TPoint label_a_pos = TPoint(KXPos, bottom- comp_height*5);
<a name="l00133"></a>00133     TPoint edwin_a_pos  =    TPoint(KXPos, bottom- comp_height*4);
<a name="l00134"></a>00134     TPoint label_b_pos = TPoint(KXPos, bottom- comp_height*3);
<a name="l00135"></a>00135     TPoint edwin_b_pos  =    TPoint(KXPos, bottom- comp_height*2);
<a name="l00136"></a>00136     TPoint label_result_pos = TPoint(KXPos, bottom - comp_height);
<a name="l00137"></a>00137 
<a name="l00138"></a>00138     iLabelA-&gt;SetExtent(label_a_pos, iLabelA-&gt;MinimumSize());
<a name="l00139"></a>00139     iLabelB-&gt;SetExtent(label_b_pos, iLabelB-&gt;MinimumSize());
<a name="l00140"></a>00140     iEdwinA-&gt;SetExtent(edwin_a_pos, iEdwinA-&gt;MinimumSize());
<a name="l00141"></a>00141     iEdwinB-&gt;SetExtent(edwin_b_pos, iEdwinB-&gt;MinimumSize());
<a name="l00142"></a>00142     
<a name="l00143"></a>00143     <span class="comment">//Adjust the extent so it doesn&#39;t cut off y and p </span>
<a name="l00144"></a>00144     <span class="comment">//in &quot;multiply&quot;, test with out this to see it</span>
<a name="l00145"></a>00145     TSize extent = iLabelResult-&gt;MinimumSize();
<a name="l00146"></a>00146     extent.iHeight += KBottomMargin;
<a name="l00147"></a>00147     
<a name="l00148"></a>00148     iLabelResult-&gt;SetExtent(label_result_pos,
<a name="l00149"></a>00149         <span class="comment">//this cuts off the bottom of y and p in &quot;multiply&quot;</span>
<a name="l00150"></a>00150         <span class="comment">//iLabelResult-&gt;MinimumSize()); </span>
<a name="l00151"></a>00151         extent );
<a name="l00152"></a>00152     }
<a name="l00153"></a>00153 
<a name="l00154"></a>00154 <span class="comment">// Tell the framework the number of owned controls</span>
<a name="l00155"></a>00155 TInt CEComCalculatorAppView::CountComponentControls()<span class="keyword"> const</span>
<a name="l00156"></a>00156 <span class="keyword">    </span>{
<a name="l00157"></a>00157     <span class="keywordflow">return</span> KNumberOfControls;
<a name="l00158"></a>00158     }
<a name="l00159"></a>00159 
<a name="l00160"></a>00160 <span class="comment">// Return owned control to framework so it will draw it.</span>
<a name="l00161"></a>00161 CCoeControl* CEComCalculatorAppView::ComponentControl(TInt aIndex)<span class="keyword"> const</span>
<a name="l00162"></a>00162 <span class="keyword">    </span>{
<a name="l00163"></a>00163     <span class="keywordflow">switch</span> (aIndex)
<a name="l00164"></a>00164         {
<a name="l00165"></a>00165         <span class="keywordflow">case</span> ELabelA:       <span class="comment">// 0</span>
<a name="l00166"></a>00166             <span class="keywordflow">return</span> iLabelA;
<a name="l00167"></a>00167         <span class="keywordflow">case</span> EEdwinA:       <span class="comment">// 1</span>
<a name="l00168"></a>00168             <span class="keywordflow">return</span> iEdwinA;
<a name="l00169"></a>00169         <span class="keywordflow">case</span> ELabelB:       <span class="comment">// 2</span>
<a name="l00170"></a>00170             <span class="keywordflow">return</span> iLabelB;
<a name="l00171"></a>00171         <span class="keywordflow">case</span> EEdwinB:       <span class="comment">// 3</span>
<a name="l00172"></a>00172             <span class="keywordflow">return</span> iEdwinB;
<a name="l00173"></a>00173         <span class="keywordflow">case</span> ELabelResult:  <span class="comment">// 4</span>
<a name="l00174"></a>00174             <span class="keywordflow">return</span> iLabelResult;
<a name="l00175"></a>00175         <span class="keywordflow">default</span>:
<a name="l00176"></a>00176             <span class="keywordflow">return</span> NULL;
<a name="l00177"></a>00177         }
<a name="l00178"></a>00178     }
<a name="l00179"></a>00179 
<a name="l00180"></a>00180 <span class="comment">// Handle key events. User of this view control must add this to control</span>
<a name="l00181"></a>00181 <span class="comment">// stack to ensure this component is able to get key events. In practise</span>
<a name="l00182"></a>00182 <span class="comment">// see how it is done in AppUI: CEComCalculatorAppUi::ConstructL()</span>
<a name="l00183"></a>00183 TKeyResponse CEComCalculatorAppView::OfferKeyEventL(<span class="keyword">const</span> TKeyEvent&amp; aKeyEvent,
<a name="l00184"></a>00184                             TEventCode aType)
<a name="l00185"></a>00185     {
<a name="l00186"></a>00186 
<a name="l00187"></a>00187     <span class="comment">// Handle key up &amp; down. Switch edit boxes, if appropriate</span>
<a name="l00188"></a>00188     <span class="keywordflow">switch</span> (aKeyEvent.iScanCode)
<a name="l00189"></a>00189         {
<a name="l00190"></a>00190         <span class="keywordflow">case</span> EStdKeyUpArrow:
<a name="l00191"></a>00191             <span class="keywordflow">if</span>(iEdwinB &amp;&amp; iEdwinB-&gt;IsFocused())
<a name="l00192"></a>00192             {
<a name="l00193"></a>00193                 iEdwinB-&gt;SetFocus(EFalse);
<a name="l00194"></a>00194                 iEdwinA-&gt;SetFocus(ETrue);
<a name="l00195"></a>00195                 <span class="keywordflow">return</span> EKeyWasConsumed;
<a name="l00196"></a>00196             }
<a name="l00197"></a>00197             <span class="keywordflow">break</span>;
<a name="l00198"></a>00198 
<a name="l00199"></a>00199         <span class="keywordflow">case</span> EStdKeyDownArrow:
<a name="l00200"></a>00200             <span class="keywordflow">if</span>(iEdwinA &amp;&amp; iEdwinA-&gt;IsFocused())
<a name="l00201"></a>00201             {
<a name="l00202"></a>00202                 iEdwinA-&gt;SetFocus(EFalse);
<a name="l00203"></a>00203                 iEdwinB-&gt;SetFocus(ETrue);
<a name="l00204"></a>00204                 <span class="keywordflow">return</span> EKeyWasConsumed;
<a name="l00205"></a>00205             }
<a name="l00206"></a>00206             <span class="keywordflow">break</span>;
<a name="l00207"></a>00207         }
<a name="l00208"></a>00208 
<a name="l00209"></a>00209     <span class="comment">// Let the focused edit box handle the key event</span>
<a name="l00210"></a>00210     <span class="keywordflow">if</span> (iEdwinA &amp;&amp; iEdwinA-&gt;IsFocused())
<a name="l00211"></a>00211         {
<a name="l00212"></a>00212         <span class="keywordflow">return</span> iEdwinA-&gt;OfferKeyEventL(aKeyEvent, aType);
<a name="l00213"></a>00213         }
<a name="l00214"></a>00214     <span class="keywordflow">if</span> (iEdwinB &amp;&amp; iEdwinB-&gt;IsFocused())
<a name="l00215"></a>00215         {
<a name="l00216"></a>00216         <span class="keywordflow">return</span> iEdwinB-&gt;OfferKeyEventL(aKeyEvent, aType);
<a name="l00217"></a>00217         }
<a name="l00218"></a>00218 
<a name="l00219"></a>00219     <span class="keywordflow">return</span> EKeyWasNotConsumed;
<a name="l00220"></a>00220     }
<a name="l00221"></a>00221 
<a name="l00222"></a>00222 
<a name="l00223"></a>00223 <span class="comment">// Convert text in the edit box to a number.</span>
<a name="l00224"></a><a class="code" href="class_c_e_com_calculator_app_view.html#a26b6acd4cea10ef2c8bd4724f284c6f9">00224</a> TInt <a class="code" href="class_c_e_com_calculator_app_view.html#a26b6acd4cea10ef2c8bd4724f284c6f9">CEComCalculatorAppView::GetA</a>(TReal &amp;aResult)<span class="keyword"> const</span>
<a name="l00225"></a>00225 <span class="keyword">    </span>{
<a name="l00226"></a>00226         TInt err = KErrGeneral;
<a name="l00227"></a>00227         <span class="keywordflow">if</span>(iEdwinA)
<a name="l00228"></a>00228         {
<a name="l00229"></a>00229             TLex16 lex(iEdwinA-&gt;Text()-&gt;Read(0));
<a name="l00230"></a>00230             err = lex.Val(aResult);
<a name="l00231"></a>00231         }
<a name="l00232"></a>00232         <span class="keywordflow">return</span> err;
<a name="l00233"></a>00233     }
<a name="l00234"></a>00234 
<a name="l00235"></a>00235 <span class="comment">// Convert text in the edit box to a number.</span>
<a name="l00236"></a><a class="code" href="class_c_e_com_calculator_app_view.html#a8ade2ea0aa3f0ca7f99086ab3fc86433">00236</a> TInt <a class="code" href="class_c_e_com_calculator_app_view.html#a8ade2ea0aa3f0ca7f99086ab3fc86433">CEComCalculatorAppView::GetB</a>(TReal &amp;aResult)<span class="keyword"> const</span>
<a name="l00237"></a>00237 <span class="keyword">    </span>{
<a name="l00238"></a>00238         TInt err = KErrGeneral;
<a name="l00239"></a>00239         <span class="keywordflow">if</span>(iEdwinB)
<a name="l00240"></a>00240         {
<a name="l00241"></a>00241             TLex16 lex(iEdwinB-&gt;Text()-&gt;Read(0));
<a name="l00242"></a>00242             err = lex.Val(aResult);
<a name="l00243"></a>00243         }
<a name="l00244"></a>00244         <span class="keywordflow">return</span> err;
<a name="l00245"></a>00245     }
<a name="l00246"></a>00246 
<a name="l00247"></a>00247 <span class="comment">// Update text in iLabelResult. Show result of calculation</span>
<a name="l00248"></a><a class="code" href="class_c_e_com_calculator_app_view.html#ab71438832dbc68110ebaefd1c42c5c19">00248</a> <span class="keywordtype">void</span> <a class="code" href="class_c_e_com_calculator_app_view.html#ab71438832dbc68110ebaefd1c42c5c19">CEComCalculatorAppView::ShowResultL</a>(<span class="keyword">const</span> TDesC8&amp; aOperationName,
<a name="l00249"></a>00249     TReal aValue)
<a name="l00250"></a>00250     {
<a name="l00251"></a>00251     TRealFormat format;
<a name="l00252"></a>00252     TBuf&lt;KResultSize&gt; resultStr;
<a name="l00253"></a>00253     <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KSeparator,<span class="stringliteral">&quot;: &quot;</span>);
<a name="l00254"></a>00254     resultStr.Copy(aOperationName);
<a name="l00255"></a>00255     resultStr.Append(KSeparator);
<a name="l00256"></a>00256     resultStr.AppendNum(aValue,format);
<a name="l00257"></a>00257     iLabelResult-&gt;SetTextL(resultStr);
<a name="l00258"></a>00258     SizeChanged();
<a name="l00259"></a>00259     DrawDeferred();
<a name="l00260"></a>00260     }
</pre></div>
<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
     <p class="copyright">Copyright &#169;2010 Nokia Corporation and/or its subsidiary(-ies).<br /> All rights
reserved. Unless otherwise stated, these materials are provided under the terms of the <a href=" http://www.eclipse.org/legal/epl-v10.html"> Eclipse Public License
v1.0</a>.</p> 
   </div>
  </div>
  <?php include_once (CURRENT_SKIN_PATH.'/sdl_footer.html'); ?>
 </body>
</html>
