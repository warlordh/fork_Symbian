<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TB9.2 Example Applications: examples/AppFramework/txtshell/txtrich.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
<link type="text/css" rel="stylesheet" href="css/common.css" media="screen"/>
<link type="text/css" rel="stylesheet" href="css/sdl.css" media="screen"/>

<!--[if IE]>
<link href="css/iefix.css" rel="stylesheet" type="text/css" media="screen" />
<![endif]-->
</head>
<body class="kernelguide">
    
     <?php include_once (CURRENT_SKIN_PATH.'/sdl_header.html'); ?>
  <div id="sdl_container">
   <div id="leftMenu">
    <div id="expandcontractdiv">
     <a id="collapseTree" href="javascript:tree.collapseAll()">
      Collapse all
     </a>
     <a id="index" href="index.html">
      Symbian^3 Product Developer Library
     </a>
    </div>
    <iframe style="border:none" height="800" width="300" src="index-toc.html"></iframe>
<div id="treeDiv1">
     &#160;
    </div>
    <script type="text/javascript">
     var currentIconMode = 0;
	YAHOO.util.Event.onDOMReady(buildTree, this,true);
    </script>
   </div>
   <div id="sdl_content">
<!-- Generated by Doxygen 1.6.2 -->
<h1>examples/AppFramework/txtshell/txtrich.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright (c) 2000-2009 Nokia Corporation and/or its subsidiary(-ies).</span>
<a name="l00002"></a>00002 <span class="comment">// All rights reserved.</span>
<a name="l00003"></a>00003 <span class="comment">// This component and the accompanying materials are made available</span>
<a name="l00004"></a>00004 <span class="comment">// under the terms of &quot;Eclipse Public License v1.0&quot;</span>
<a name="l00005"></a>00005 <span class="comment">// which accompanies this distribution, and is available</span>
<a name="l00006"></a>00006 <span class="comment">// at the URL &quot;http://www.eclipse.org/legal/epl-v10.html&quot;.</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Initial Contributors:</span>
<a name="l00009"></a>00009 <span class="comment">// Nokia Corporation - initial contribution.</span>
<a name="l00010"></a>00010 <span class="comment">//</span>
<a name="l00011"></a>00011 <span class="comment">// Contributors:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// Description:</span>
<a name="l00014"></a>00014 <span class="comment">//</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 <span class="preprocessor">#include &quot;txtexamp.h&quot;</span>
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 <span class="preprocessor">#include &lt;txtrich.h&gt;</span>
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 CRichControl::~CRichControl()
<a name="l00021"></a>00021         {
<a name="l00022"></a>00022         <span class="keyword">delete</span> iTextView; <span class="comment">// text view</span>
<a name="l00023"></a>00023         <span class="keyword">delete</span> iLayout; <span class="comment">// text layout</span>
<a name="l00024"></a>00024         <span class="keyword">delete</span> iRichText; <span class="comment">// contained text object</span>
<a name="l00025"></a>00025         <span class="keyword">delete</span> iCharFormatLayer; <span class="comment">// character format layer</span>
<a name="l00026"></a>00026         <span class="keyword">delete</span> iParaFormatLayer; <span class="comment">// and para format layer</span>
<a name="l00027"></a>00027         }
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="keywordtype">void</span> CRichControl::UpdateModelL()
<a name="l00031"></a>00031         {
<a name="l00032"></a>00032         <span class="comment">// Create all constant literal descriptors used in this function, </span>
<a name="l00033"></a>00033         <span class="comment">// e.g. for message text</span>
<a name="l00034"></a>00034         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KHamletSpeech, <span class="stringliteral">&quot;To be, or not to be, that is the question; \</span>
<a name="l00035"></a>00035 <span class="stringliteral">whether &#39;tis nobler in the mind to suffer the \</span>
<a name="l00036"></a>00036 <span class="stringliteral">slings and arrows of outrageous fortune, or \</span>
<a name="l00037"></a>00037 <span class="stringliteral">to stand against a sea of troubles, and by \</span>
<a name="l00038"></a>00038 <span class="stringliteral">opposing end them.&quot;</span>); 
<a name="l00039"></a>00039         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KPath,<span class="stringliteral">&quot;\\richtxt.dat&quot;</span>);
<a name="l00040"></a>00040         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KText1,<span class="stringliteral">&quot;Rich text in bold. &quot;</span>);
<a name="l00041"></a>00041         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KText2,<span class="stringliteral">&quot;Much larger rich text.&quot;</span>);
<a name="l00042"></a>00042         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KText5,<span class="stringliteral">&quot;New text has preserved formatting at insertion point. &quot;</span>);
<a name="l00043"></a>00043         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KText7,<span class="stringliteral">&quot;New text has lost formatting at insertion point. &quot;</span>);
<a name="l00044"></a>00044         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KStatus0,<span class="stringliteral">&quot;Initialised rich text object and text view&quot;</span>);
<a name="l00045"></a>00045         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KStatus1,<span class="stringliteral">&quot;InsertL() at position zero&quot;</span>);
<a name="l00046"></a>00046         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KStatus2,<span class="stringliteral">&quot;Inserted text with specific formatting applied&quot;</span>);
<a name="l00047"></a>00047         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KStatus3,<span class="stringliteral">&quot;Underlining applied to part of paragraph&quot;</span>);
<a name="l00048"></a>00048         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KStatus4,<span class="stringliteral">&quot;Deleted text, but preserved formatting ...&quot;</span>);
<a name="l00049"></a>00049         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KStatus5,<span class="stringliteral">&quot;... and inserted with same format&quot;</span>);
<a name="l00050"></a>00050         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KStatus6,<span class="stringliteral">&quot;Deleted text and forgot about formatting ...&quot;</span>);
<a name="l00051"></a>00051         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KStatus7,<span class="stringliteral">&quot;... and inserted with format before new text&quot;</span>);
<a name="l00052"></a>00052         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KStatus8,<span class="stringliteral">&quot;Added 2 new paragraphs with default formatting&quot;</span>);
<a name="l00053"></a>00053         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KStatus9,<span class="stringliteral">&quot;Set alignment for second paragraph&quot;</span>);
<a name="l00054"></a>00054         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KStatus10,<span class="stringliteral">&quot;Used StoreL() to store rich text and components&quot;</span>);
<a name="l00055"></a>00055         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KStatus12,<span class="stringliteral">&quot;Used RestoreL() to restore rich text and components&quot;</span>);
<a name="l00056"></a>00056         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KStatusReset,<span class="stringliteral">&quot;Reset();&quot;</span>);
<a name="l00057"></a>00057         <a class="code" href="secureclientandserver_8h.html#a5eadd4429627d82193b37536d4faa03a">_LIT</a>(KStatusDefault,<span class="stringliteral">&quot;(overshot!!)&quot;</span>);
<a name="l00058"></a>00058 
<a name="l00059"></a>00059         TBufC&lt;28&gt;   name(KPath);
<a name="l00060"></a>00060         
<a name="l00061"></a>00061         <span class="keywordflow">switch</span> (Phase())
<a name="l00062"></a>00062                 {
<a name="l00063"></a>00063         <span class="keywordflow">case</span> 0:
<a name="l00064"></a>00064                 {
<a name="l00065"></a>00065                 <span class="comment">// Create text object, text view and layout.</span>
<a name="l00066"></a>00066                 iParaFormatLayer=CParaFormatLayer::NewL(); <span class="comment">// required para format layer</span>
<a name="l00067"></a>00067                 iCharFormatLayer=CCharFormatLayer::NewL(); <span class="comment">// required char format layer</span>
<a name="l00068"></a>00068                 <span class="comment">// Create an empty rich text object</span>
<a name="l00069"></a>00069                 iRichText=CRichText::NewL(iParaFormatLayer, iCharFormatLayer);
<a name="l00070"></a>00070                 <span class="comment">// prerequisites for view - viewing rectangle</span>
<a name="l00071"></a>00071                 iViewRect=Rect();
<a name="l00072"></a>00072                 iViewRect.Shrink(3,3);
<a name="l00073"></a>00073                 <span class="comment">// context and device</span>
<a name="l00074"></a>00074                 CWindowGc&amp; gc=SystemGc(); <span class="comment">// get graphics context</span>
<a name="l00075"></a>00075                 CBitmapDevice *device=(CBitmapDevice*) (gc.Device()); <span class="comment">// device</span>
<a name="l00076"></a>00076                 <span class="comment">// Create the text layout, (required by text view),</span>
<a name="l00077"></a>00077                 <span class="comment">// with the text object and a wrap width (=width of view rect)</span>
<a name="l00078"></a>00078                 iLayout=CTextLayout::NewL(iRichText,iViewRect.Width());
<a name="l00079"></a>00079                 <span class="comment">// Create text view</span>
<a name="l00080"></a>00080                 iTextView=CTextView::NewL(iLayout, iViewRect,
<a name="l00081"></a>00081                                 device,
<a name="l00082"></a>00082                                 device,
<a name="l00083"></a>00083                                 &amp;Window(),
<a name="l00084"></a>00084                                 0, <span class="comment">// no window group</span>
<a name="l00085"></a>00085                                 &amp;iCoeEnv-&gt;WsSession()
<a name="l00086"></a>00086                                 ); <span class="comment">// new view</span>
<a name="l00087"></a>00087                 <span class="comment">// message to say what we did</span>
<a name="l00088"></a>00088                 iFormObserver-&gt;NotifyStatus(KStatus0);
<a name="l00089"></a>00089                 <span class="keywordflow">break</span>;
<a name="l00090"></a>00090                 }
<a name="l00091"></a>00091         <span class="keywordflow">case</span> 1:
<a name="l00092"></a>00092                 <span class="comment">// Set some character formatting</span>
<a name="l00093"></a>00093                 iCharFormatMask.SetAttrib(EAttFontStrokeWeight);  
<a name="l00094"></a>00094                 
<a name="l00095"></a>00095                 iCharFormat.iFontSpec.iFontStyle.SetStrokeWeight(EStrokeWeightBold);
<a name="l00096"></a>00096 
<a name="l00097"></a>00097                 <span class="comment">// apply formatting - pos and length are irrelevent</span>
<a name="l00098"></a>00098                 iRichText-&gt;ApplyCharFormatL(iCharFormat,iCharFormatMask, 0,0);
<a name="l00099"></a>00099                 
<a name="l00100"></a>00100                 <span class="comment">// Insert some text</span>
<a name="l00101"></a>00101                 iRichText-&gt;InsertL(0,KText1);
<a name="l00102"></a>00102                 iFormObserver-&gt;NotifyStatus(KStatus1);
<a name="l00103"></a>00103                 <span class="keywordflow">break</span>;
<a name="l00104"></a>00104         <span class="keywordflow">case</span> 2:
<a name="l00105"></a>00105                 <span class="comment">// Insert some more text with specific formatting</span>
<a name="l00106"></a>00106                 {
<a name="l00107"></a>00107                 TCharFormat charFormat;
<a name="l00108"></a>00108                 TCharFormatMask charFormatMask;
<a name="l00109"></a>00109                 charFormatMask.SetAttrib(EAttFontHeight); <span class="comment">// interested in font height</span>
<a name="l00110"></a>00110                 charFormat.iFontSpec.iHeight=480; <span class="comment">// (in twips) increase it from default to 1/3 inch</span>
<a name="l00111"></a>00111                 TInt pos=iRichText-&gt;DocumentLength(); <span class="comment">// insertion position = end of doc</span>
<a name="l00112"></a>00112                 iRichText-&gt;SetInsertCharFormatL(charFormat, charFormatMask,pos);
<a name="l00113"></a>00113                         <span class="comment">// Set formatting, when inserting at this position</span>
<a name="l00114"></a>00114                 iRichText-&gt;InsertL(pos,KText2); <span class="comment">// Insert text at this position</span>
<a name="l00115"></a>00115                 iRichText-&gt;CancelInsertCharFormat(); <span class="comment">// Cancel &quot;insert pending&quot; state</span>
<a name="l00116"></a>00116                         <span class="comment">// This is necessary before inserting anywhere else</span>
<a name="l00117"></a>00117                 iFormObserver-&gt;NotifyStatus(KStatus2);
<a name="l00118"></a>00118                 <span class="keywordflow">break</span>;
<a name="l00119"></a>00119                 }
<a name="l00120"></a>00120         <span class="keywordflow">case</span> 3:
<a name="l00121"></a>00121                 {
<a name="l00122"></a>00122                 <span class="comment">// Apply underlining to text which uses a mixture of formatting.</span>
<a name="l00123"></a>00123                 TCharFormat charFormat;
<a name="l00124"></a>00124                 TCharFormatMask charFormatMask;
<a name="l00125"></a>00125                 charFormatMask.SetAttrib(EAttFontUnderline); <span class="comment">// interested in underline</span>
<a name="l00126"></a>00126                 charFormat.iFontPresentation.iUnderline=EUnderlineOn; <span class="comment">// set it on</span>
<a name="l00127"></a>00127                 iRichText-&gt;ApplyCharFormatL(charFormat, charFormatMask,13,10);
<a name="l00128"></a>00128                                 <span class="comment">// apply this character formatting, from position 13, 10 characters</span>
<a name="l00129"></a>00129                 iFormObserver-&gt;NotifyStatus(KStatus3);
<a name="l00130"></a>00130                 <span class="keywordflow">break</span>;
<a name="l00131"></a>00131                 }
<a name="l00132"></a>00132         <span class="keywordflow">case</span> 4:
<a name="l00133"></a>00133                 <span class="comment">// delete text, then insert new text at same point to </span>
<a name="l00134"></a>00134                 <span class="comment">// demonstrate preserving the deleted text&#39;s formatting.</span>
<a name="l00135"></a>00135                 iRichText-&gt;DelSetInsertCharFormatL(19,(iRichText-&gt;DocumentLength()-19));
<a name="l00136"></a>00136                         <span class="comment">// delete from pos 19, for rest of document; retain formatting at pos 19</span>
<a name="l00137"></a>00137                 iFormObserver-&gt;NotifyStatus(KStatus4);
<a name="l00138"></a>00138                 <span class="keywordflow">break</span>;
<a name="l00139"></a>00139         <span class="keywordflow">case</span> 5:
<a name="l00140"></a>00140                 <span class="comment">// ... and then insert with same format</span>
<a name="l00141"></a>00141                 iRichText-&gt;InsertL(19,KText5);
<a name="l00142"></a>00142                         <span class="comment">// inserted with old formatting</span>
<a name="l00143"></a>00143                 iRichText-&gt;CancelInsertCharFormat(); <span class="comment">// must cancel before inserting elsewhere</span>
<a name="l00144"></a>00144                 iFormObserver-&gt;NotifyStatus(KStatus5);
<a name="l00145"></a>00145                 <span class="keywordflow">break</span>;
<a name="l00146"></a>00146         <span class="keywordflow">case</span> 6:
<a name="l00147"></a>00147                 <span class="comment">// delete some text ... </span>
<a name="l00148"></a>00148                 iRichText-&gt;DeleteL(19,(iRichText-&gt;DocumentLength()-19));
<a name="l00149"></a>00149                         <span class="comment">// DeleteL() deletes, and forgets formatting</span>
<a name="l00150"></a>00150                 iFormObserver-&gt;NotifyStatus(KStatus6);
<a name="l00151"></a>00151                 <span class="keywordflow">break</span>;
<a name="l00152"></a>00152         <span class="keywordflow">case</span> 7:
<a name="l00153"></a>00153                 <span class="comment">// ... then insert new text at that point to </span>
<a name="l00154"></a>00154                 <span class="comment">// demonstrate how DeleteL() differs from DelSetInsertCharFormatL(). </span>
<a name="l00155"></a>00155                 iRichText-&gt;InsertL(19,KText7);
<a name="l00156"></a>00156                         <span class="comment">// insert, inheriting current formatting from char before 10</span>
<a name="l00157"></a>00157                         <span class="comment">// (no need to cancel anything!)</span>
<a name="l00158"></a>00158                 iFormObserver-&gt;NotifyStatus(KStatus7);
<a name="l00159"></a>00159                 <span class="keywordflow">break</span>;
<a name="l00160"></a>00160         <span class="keywordflow">case</span> 8:
<a name="l00161"></a>00161                 {
<a name="l00162"></a>00162                 <span class="comment">// Rich text paragraph formatting.</span>
<a name="l00163"></a>00163                 <span class="comment">// Insert another 2 paragraphs using default formatting.</span>
<a name="l00164"></a>00164                 <span class="comment">// First remove specific formatting from final paragraph delimiter,</span>
<a name="l00165"></a>00165                 <span class="comment">// otherwise new paragraphs would pick up this formatting.</span>
<a name="l00166"></a>00166                 iRichText-&gt;RemoveSpecificCharFormatL(iRichText-&gt;DocumentLength()-1,1);
<a name="l00167"></a>00167                 iRichText-&gt;InsertL(iRichText-&gt;DocumentLength(),
<a name="l00168"></a>00168                         CEditableText::EParagraphDelimiter); <span class="comment">// new para</span>
<a name="l00169"></a>00169                 <span class="keywordflow">for</span> (TInt count=0;count&lt;2;count++) <span class="comment">// insert lots of text, twice over</span>
<a name="l00170"></a>00170                         {       
<a name="l00171"></a>00171                         iRichText-&gt;InsertL(iRichText-&gt;DocumentLength(),KHamletSpeech); 
<a name="l00172"></a>00172                         iRichText-&gt;InsertL(iRichText-&gt;DocumentLength(),
<a name="l00173"></a>00173                                 CEditableText::EParagraphDelimiter); <span class="comment">// end para</span>
<a name="l00174"></a>00174                         };
<a name="l00175"></a>00175                 iFormObserver-&gt;NotifyStatus(KStatus8);
<a name="l00176"></a>00176                 <span class="keywordflow">break</span>;
<a name="l00177"></a>00177                 }
<a name="l00178"></a>00178         <span class="keywordflow">case</span> 9:
<a name="l00179"></a>00179                 {
<a name="l00180"></a>00180                 CParaFormat* paraFormat=CParaFormat::NewLC();
<a name="l00181"></a>00181                 TParaFormatMask paraFormatMask;
<a name="l00182"></a>00182                 <span class="comment">// make para 1 right-aligned (numbering starts at 0)</span>
<a name="l00183"></a>00183                 TInt pos, length;
<a name="l00184"></a>00184                 paraFormatMask.SetAttrib(EAttAlignment); <span class="comment">// interested in alignment</span>
<a name="l00185"></a>00185                 paraFormat-&gt;iHorizontalAlignment=CParaFormat::ERightAlign; <span class="comment">// right-align</span>
<a name="l00186"></a>00186                 pos=iRichText-&gt;CharPosOfParagraph(length,1); <span class="comment">// start of para 2</span>
<a name="l00187"></a>00187                 iRichText-&gt;ApplyParaFormatL(paraFormat,paraFormatMask,pos,1);
<a name="l00188"></a>00188                         <span class="comment">// apply format to entire para - even 1 char will do</span>
<a name="l00189"></a>00189                 iFormObserver-&gt;NotifyStatus(KStatus9);
<a name="l00190"></a>00190                 CleanupStack::PopAndDestroy();  <span class="comment">// paraFormat</span>
<a name="l00191"></a>00191                 <span class="keywordflow">break</span>;
<a name="l00192"></a>00192                 }
<a name="l00193"></a>00193 <span class="comment">// Storing and restoring</span>
<a name="l00194"></a>00194         <span class="keywordflow">case</span> 10:
<a name="l00195"></a>00195                 <span class="comment">// set up a file store</span>
<a name="l00196"></a>00196                 {
<a name="l00197"></a>00197                 RFs         theFs;
<a name="l00198"></a>00198                 CFileStore* theStore;
<a name="l00199"></a>00199                 TParse      filestorename;
<a name="l00200"></a>00200                 <span class="comment">// Make a connection to the file server</span>
<a name="l00201"></a>00201                 theFs.Connect();
<a name="l00202"></a>00202                 theFs.Parse(name,filestorename);
<a name="l00203"></a>00203                 theStore=CDirectFileStore::ReplaceLC(theFs,filestorename.FullName(),EFileRead|EFileWrite);
<a name="l00204"></a>00204                 theStore-&gt;SetTypeL(KDirectFileStoreLayoutUid);
<a name="l00205"></a>00205                 <span class="comment">// store rich text to file store</span>
<a name="l00206"></a>00206                 iStreamId=iRichText-&gt;StoreL(*theStore); 
<a name="l00207"></a>00207                 <span class="comment">// close the store</span>
<a name="l00208"></a>00208                 CleanupStack::PopAndDestroy(); <span class="comment">// pop and destroy store</span>
<a name="l00209"></a>00209                 <span class="comment">// Disconnect from file server</span>
<a name="l00210"></a>00210                 theFs.Close();
<a name="l00211"></a>00211                 iFormObserver-&gt;NotifyStatus(KStatus10);
<a name="l00212"></a>00212                 <span class="keywordflow">break</span>;
<a name="l00213"></a>00213                 }
<a name="l00214"></a>00214         <span class="keywordflow">case</span> 11:
<a name="l00215"></a>00215                 <span class="comment">// reset document, clearing it of all content</span>
<a name="l00216"></a>00216                 iRichText-&gt;Reset();
<a name="l00217"></a>00217                 iFormObserver-&gt;NotifyStatus(KStatusReset);
<a name="l00218"></a>00218                 <span class="keywordflow">break</span>;
<a name="l00219"></a>00219         <span class="keywordflow">case</span> 12:
<a name="l00220"></a>00220                 <span class="comment">// open the store</span>
<a name="l00221"></a>00221                 {
<a name="l00222"></a>00222                 RFs         theFs;
<a name="l00223"></a>00223                 CFileStore* theStore;
<a name="l00224"></a>00224                 TParse      filestorename;
<a name="l00225"></a>00225 
<a name="l00226"></a>00226                 theFs.Connect();
<a name="l00227"></a>00227                 theFs.Parse(name,filestorename);
<a name="l00228"></a>00228                 theStore=CDirectFileStore::OpenLC(theFs,filestorename.FullName(),EFileRead|EFileShareReadersOnly);
<a name="l00229"></a>00229                 <span class="keywordflow">if</span> (theStore-&gt;Type()[0]!=KDirectFileStoreLayoutUid)
<a name="l00230"></a>00230                         User::Leave(KErrUnknown);
<a name="l00231"></a>00231                 <span class="comment">// internalize from the store</span>
<a name="l00232"></a>00232                 iRichText-&gt;RestoreL(*theStore,iStreamId);
<a name="l00233"></a>00233                 <span class="comment">// close the store</span>
<a name="l00234"></a>00234                 CleanupStack::PopAndDestroy(); <span class="comment">// pop and destroy store</span>
<a name="l00235"></a>00235                 theFs.Close();
<a name="l00236"></a>00236                 iFormObserver-&gt;NotifyStatus(KStatus12);
<a name="l00237"></a>00237                 <span class="keywordflow">break</span>;
<a name="l00238"></a>00238                 }
<a name="l00239"></a>00239         <span class="keywordflow">case</span> 13:
<a name="l00240"></a>00240                 <span class="comment">//reset document</span>
<a name="l00241"></a>00241                 iRichText-&gt;Reset();
<a name="l00242"></a>00242                 <span class="comment">// message to say what we did</span>
<a name="l00243"></a>00243                 iFormObserver-&gt;NotifyStatus(KStatusReset);
<a name="l00244"></a>00244                 <span class="keywordflow">break</span>;
<a name="l00245"></a>00245         <span class="keywordflow">default</span>:
<a name="l00246"></a>00246                 iFormObserver-&gt;NotifyStatus(KStatusDefault);
<a name="l00247"></a>00247                 <span class="keywordflow">break</span>;
<a name="l00248"></a>00248                 }
<a name="l00249"></a>00249         }
<a name="l00250"></a>00250 
<a name="l00251"></a>00251 
<a name="l00252"></a>00252 <span class="keywordtype">void</span> CRichControl::Draw(<span class="keyword">const</span> TRect&amp; aRect)<span class="keyword"> const</span>
<a name="l00253"></a>00253 <span class="keyword">        </span>{
<a name="l00254"></a>00254         <span class="comment">// draw surround</span>
<a name="l00255"></a>00255         CGraphicsContext&amp; gc=SystemGc(); <span class="comment">// context to draw into</span>
<a name="l00256"></a>00256         TRect rect=Rect(); <span class="comment">// screen boundary</span>
<a name="l00257"></a>00257         gc.DrawRect(rect); <span class="comment">// outline screen boundary</span>
<a name="l00258"></a>00258         rect.Shrink(1,1);
<a name="l00259"></a>00259         gc.SetPenColor(KRgbWhite);
<a name="l00260"></a>00260         gc.DrawRect(rect);
<a name="l00261"></a>00261         rect.Shrink(1,1);
<a name="l00262"></a>00262         gc.SetPenColor(KRgbBlack);
<a name="l00263"></a>00263         gc.DrawRect(rect);
<a name="l00264"></a>00264         <span class="comment">// draw editable text - will work unless OOM</span>
<a name="l00265"></a>00265         TInt err;
<a name="l00266"></a>00266         TRAP(err,iTextView-&gt;FormatTextL());
<a name="l00267"></a>00267         <span class="keywordflow">if</span> (err) <span class="keywordflow">return</span>;
<a name="l00268"></a>00268         TRAP(err,iTextView-&gt;DrawL(aRect));
<a name="l00269"></a>00269 }
<a name="l00270"></a>00270 
<a name="l00271"></a>00271 
</pre></div>
<hr size="1"/><address style="text-align: right;"><small>Generated by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
     <p class="copyright">Copyright &#169;2010 Nokia Corporation and/or its subsidiary(-ies).<br /> All rights
reserved. Unless otherwise stated, these materials are provided under the terms of the <a href=" http://www.eclipse.org/legal/epl-v10.html"> Eclipse Public License
v1.0</a>.</p> 
   </div>
  </div>
  <?php include_once (CURRENT_SKIN_PATH.'/sdl_footer.html'); ?>
 </body>
</html>
